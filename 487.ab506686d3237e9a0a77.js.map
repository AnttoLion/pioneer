{"version":3,"file":"487.ab506686d3237e9a0a77.js","mappings":"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","sources":["webpack://@joystream/pioneer/../../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","webpack://@joystream/pioneer/../../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","webpack://@joystream/pioneer/../../node_modules/@joystream/types/lib/mjs/augment/lookup.js","webpack://@joystream/pioneer/../../node_modules/@joystream/types/lib/mjs/index.js","webpack://@joystream/pioneer/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/genesis.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/icons.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/ledger.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/networks/defaults/testnets.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Array.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Base.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/abstract/Int.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Compact.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/DoNotConstruct.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Enum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Int.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Null.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Option.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Result.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Tuple.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/UInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/Vec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/base/VecFixed.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BTreeMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BTreeSet.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/BitVec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Bytes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/HashMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Map.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/OptionBool.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Range.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/RangeInclusive.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/Type.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/U8aFixed.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/extended/WrapperOpaque.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Bool.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Json.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Raw.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Set.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Struct.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/native/Text.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I128.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I16.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I256.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I32.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/I8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U128.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U16.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U256.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U32.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/U8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/primitive/USize.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareArray.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/compareSet.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/decodeU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/mapToTypeMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/sanitize.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/sortValues.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/typeToConstructor.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/typesToMap.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-codec/utils/util.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/create/class.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/create/type.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/types/types.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/encodeTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/getTypeDef.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/typeSplit.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types-create/util/xcm.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/create/lazy.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/create/registry.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/ethereum/AccountId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/ethereum/LookupSource.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/Extrinsic.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/SignerPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/constants.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/util.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/AccountId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/AccountIndex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Block.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Call.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/ChainProperties.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/ConsensusEngineId.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Event.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/LookupSource.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/MultiAddress.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/generic/Vote.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/alias.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/assets/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/attestations/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/aura/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/author/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/authorship/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/babe/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/balances/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/beefy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/bridges/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/chain/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/childstate/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/claims/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/collective/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/consensus/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contracts/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contracts/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/crowdloan/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/cumulus/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/democracy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/dev/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/elections/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/engine/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/eth/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/eth/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/evm/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/extrinsics/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/genericAsset/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/gilt/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/grandpa/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/identity/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/imOnline/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/lottery/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/hashers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v10.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v11.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v12.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v13.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v14.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/metadata/v9.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/mmr/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/offchain/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/offences/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/hrmp.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/parachains/slots.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/payment/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/poll/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/proxy/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/purchase/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/recovery/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/rpc/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/runtime/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/v0.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scaleInfo/v1.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/scheduler/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/session/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/society/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/staking/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/state/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/support/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/syncstate/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/system/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/system/rpc.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/treasury/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/txpayment/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/uniques/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/utility/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/vesting/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/definitions.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v0.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v1.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/interfaces/xcm/v2.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/MagicNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/Metadata.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/MetadataVersioned.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/decorate/constants/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/extractTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/flattenUniq.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/getSiName.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/getUniqTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/toCallsOnly.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/util/validateTypes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v10/toV11.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v11/toV12.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v12/toV13.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v13/toV14.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v14/toLatest.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/metadata/v9/toV10.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/types/primitive/Data.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/checksum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/decode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/defaults.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/encode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/address/sshash.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/base32/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/base58/bs58.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/blake2/asU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/bn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/encode.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/isAddress.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/ethereum/isChecksum.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/keccak/asU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_assert.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_blake2.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/_u64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/blake2b.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/sha3.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/node_modules/@noble/hashes/esm/utils.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util-crypto/secp256k1/expand.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/assert.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toHex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/bn/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/addLength.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/fromU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/stripLength.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/compact/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatBalance.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatDate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatDecimal.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/formatNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/format/si.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/has.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/stripPrefix.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/hex/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/ascii.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/bigInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/bn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/boolean.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/buffer.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/codec.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/function.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/helpers.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/hex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/null.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/number.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/object.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/string.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/toBigInt.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/u8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/undefined.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/is/utf8.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/lazy.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/logger.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/object/property.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/object/spread.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/string/camelCase.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/string/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/stringify.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/concat.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/eq.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toBn.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toHex.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toNumber.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toString.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/util/u8a/toU8a.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/bridge.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/init.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-bridge/wbg.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-init/wasm.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-wasm/bundle.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-crypto-wasm/cjs/bytes.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-util/base64.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/wasm-util/fflate.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-bigint/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-global/index.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-randomvalues/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textdecoder/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textdecoder/fallback.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textencoder/browser.js","webpack://@joystream/pioneer/../../node_modules/@polkadot/x-textencoder/fallback.js","webpack://@joystream/pioneer/../../node_modules/@scure/base/lib/esm/index.js","webpack://@joystream/pioneer/../../node_modules/@substrate/ss58-registry/esm/index.js","webpack://@joystream/pioneer/../../node_modules/base64-js/index.js","webpack://@joystream/pioneer/../../node_modules/ieee754/index.js","webpack://@joystream/pioneer/../../node_modules/process/browser.js"],"sourcesContent":["export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","// Auto-generated via `yarn polkadot-types-from-defs`, do not edit\n/* eslint-disable */\n/* eslint-disable sort-keys */\nexport default {\n    /**\n     * Lookup3: frame_system::AccountInfo<Index, pallet_balances::AccountData<Balance>>\n     **/\n    FrameSystemAccountInfo: {\n        nonce: 'u32',\n        consumers: 'u32',\n        providers: 'u32',\n        sufficients: 'u32',\n        data: 'PalletBalancesAccountData'\n    },\n    /**\n     * Lookup5: pallet_balances::AccountData<Balance>\n     **/\n    PalletBalancesAccountData: {\n        free: 'u128',\n        reserved: 'u128',\n        miscFrozen: 'u128',\n        feeFrozen: 'u128'\n    },\n    /**\n     * Lookup7: frame_support::weights::PerDispatchClass<T>\n     **/\n    FrameSupportWeightsPerDispatchClassU64: {\n        normal: 'u64',\n        operational: 'u64',\n        mandatory: 'u64'\n    },\n    /**\n     * Lookup11: sp_runtime::generic::digest::Digest\n     **/\n    SpRuntimeDigest: {\n        logs: 'Vec<SpRuntimeDigestDigestItem>'\n    },\n    /**\n     * Lookup13: sp_runtime::generic::digest::DigestItem\n     **/\n    SpRuntimeDigestDigestItem: {\n        _enum: {\n            Other: 'Bytes',\n            __Unused1: 'Null',\n            __Unused2: 'Null',\n            __Unused3: 'Null',\n            Consensus: '([u8;4],Bytes)',\n            Seal: '([u8;4],Bytes)',\n            PreRuntime: '([u8;4],Bytes)',\n            __Unused7: 'Null',\n            RuntimeEnvironmentUpdated: 'Null'\n        }\n    },\n    /**\n     * Lookup16: frame_system::EventRecord<joystream_node_runtime::Event, primitive_types::H256>\n     **/\n    FrameSystemEventRecord: {\n        phase: 'FrameSystemPhase',\n        event: 'Event',\n        topics: 'Vec<H256>'\n    },\n    /**\n     * Lookup18: frame_system::pallet::Event<T>\n     **/\n    FrameSystemEvent: {\n        _enum: {\n            ExtrinsicSuccess: {\n                dispatchInfo: 'FrameSupportWeightsDispatchInfo',\n            },\n            ExtrinsicFailed: {\n                dispatchError: 'SpRuntimeDispatchError',\n                dispatchInfo: 'FrameSupportWeightsDispatchInfo',\n            },\n            CodeUpdated: 'Null',\n            NewAccount: {\n                account: 'AccountId32',\n            },\n            KilledAccount: {\n                account: 'AccountId32',\n            },\n            Remarked: {\n                _alias: {\n                    hash_: 'hash',\n                },\n                sender: 'AccountId32',\n                hash_: 'H256'\n            }\n        }\n    },\n    /**\n     * Lookup19: frame_support::weights::DispatchInfo\n     **/\n    FrameSupportWeightsDispatchInfo: {\n        weight: 'u64',\n        class: 'FrameSupportWeightsDispatchClass',\n        paysFee: 'FrameSupportWeightsPays'\n    },\n    /**\n     * Lookup20: frame_support::weights::DispatchClass\n     **/\n    FrameSupportWeightsDispatchClass: {\n        _enum: ['Normal', 'Operational', 'Mandatory']\n    },\n    /**\n     * Lookup21: frame_support::weights::Pays\n     **/\n    FrameSupportWeightsPays: {\n        _enum: ['Yes', 'No']\n    },\n    /**\n     * Lookup22: sp_runtime::DispatchError\n     **/\n    SpRuntimeDispatchError: {\n        _enum: {\n            Other: 'Null',\n            CannotLookup: 'Null',\n            BadOrigin: 'Null',\n            Module: 'SpRuntimeModuleError',\n            ConsumerRemaining: 'Null',\n            NoProviders: 'Null',\n            TooManyConsumers: 'Null',\n            Token: 'SpRuntimeTokenError',\n            Arithmetic: 'SpRuntimeArithmeticError',\n            Transactional: 'SpRuntimeTransactionalError'\n        }\n    },\n    /**\n     * Lookup23: sp_runtime::ModuleError\n     **/\n    SpRuntimeModuleError: {\n        index: 'u8',\n        error: '[u8;4]'\n    },\n    /**\n     * Lookup24: sp_runtime::TokenError\n     **/\n    SpRuntimeTokenError: {\n        _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', 'Unsupported']\n    },\n    /**\n     * Lookup25: sp_runtime::ArithmeticError\n     **/\n    SpRuntimeArithmeticError: {\n        _enum: ['Underflow', 'Overflow', 'DivisionByZero']\n    },\n    /**\n     * Lookup26: sp_runtime::TransactionalError\n     **/\n    SpRuntimeTransactionalError: {\n        _enum: ['LimitReached', 'NoLayer']\n    },\n    /**\n     * Lookup27: pallet_utility::pallet::Event\n     **/\n    PalletUtilityEvent: {\n        _enum: {\n            BatchInterrupted: {\n                index: 'u32',\n                error: 'SpRuntimeDispatchError',\n            },\n            BatchCompleted: 'Null',\n            BatchCompletedWithErrors: 'Null',\n            ItemCompleted: 'Null',\n            ItemFailed: {\n                error: 'SpRuntimeDispatchError',\n            },\n            DispatchedAs: {\n                result: 'Result<Null, SpRuntimeDispatchError>'\n            }\n        }\n    },\n    /**\n     * Lookup30: pallet_balances::pallet::Event<T, I>\n     **/\n    PalletBalancesEvent: {\n        _enum: {\n            Endowed: {\n                account: 'AccountId32',\n                freeBalance: 'u128',\n            },\n            DustLost: {\n                account: 'AccountId32',\n                amount: 'u128',\n            },\n            Transfer: {\n                from: 'AccountId32',\n                to: 'AccountId32',\n                amount: 'u128',\n            },\n            BalanceSet: {\n                who: 'AccountId32',\n                free: 'u128',\n                reserved: 'u128',\n            },\n            Reserved: {\n                who: 'AccountId32',\n                amount: 'u128',\n            },\n            Unreserved: {\n                who: 'AccountId32',\n                amount: 'u128',\n            },\n            ReserveRepatriated: {\n                from: 'AccountId32',\n                to: 'AccountId32',\n                amount: 'u128',\n                destinationStatus: 'FrameSupportTokensMiscBalanceStatus',\n            },\n            Deposit: {\n                who: 'AccountId32',\n                amount: 'u128',\n            },\n            Withdraw: {\n                who: 'AccountId32',\n                amount: 'u128',\n            },\n            Slashed: {\n                who: 'AccountId32',\n                amount: 'u128'\n            }\n        }\n    },\n    /**\n     * Lookup31: frame_support::traits::tokens::misc::BalanceStatus\n     **/\n    FrameSupportTokensMiscBalanceStatus: {\n        _enum: ['Free', 'Reserved']\n    },\n    /**\n     * Lookup32: pallet_election_provider_multi_phase::pallet::Event<T>\n     **/\n    PalletElectionProviderMultiPhaseEvent: {\n        _enum: {\n            SolutionStored: {\n                electionCompute: 'PalletElectionProviderMultiPhaseElectionCompute',\n                prevEjected: 'bool',\n            },\n            ElectionFinalized: {\n                electionCompute: 'Option<PalletElectionProviderMultiPhaseElectionCompute>',\n            },\n            Rewarded: {\n                account: 'AccountId32',\n                value: 'u128',\n            },\n            Slashed: {\n                account: 'AccountId32',\n                value: 'u128',\n            },\n            SignedPhaseStarted: {\n                round: 'u32',\n            },\n            UnsignedPhaseStarted: {\n                round: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup33: pallet_election_provider_multi_phase::ElectionCompute\n     **/\n    PalletElectionProviderMultiPhaseElectionCompute: {\n        _enum: ['OnChain', 'Signed', 'Unsigned', 'Fallback', 'Emergency']\n    },\n    /**\n     * Lookup36: pallet_staking::pallet::pallet::Event<T>\n     **/\n    PalletStakingPalletEvent: {\n        _enum: {\n            EraPaid: '(u32,u128,u128)',\n            Rewarded: '(AccountId32,u128)',\n            Slashed: '(AccountId32,u128)',\n            OldSlashingReportDiscarded: 'u32',\n            StakersElected: 'Null',\n            Bonded: '(AccountId32,u128)',\n            Unbonded: '(AccountId32,u128)',\n            Withdrawn: '(AccountId32,u128)',\n            Kicked: '(AccountId32,AccountId32)',\n            StakingElectionFailed: 'Null',\n            Chilled: 'AccountId32',\n            PayoutStarted: '(u32,AccountId32)',\n            ValidatorPrefsSet: '(AccountId32,PalletStakingValidatorPrefs)'\n        }\n    },\n    /**\n     * Lookup37: pallet_staking::ValidatorPrefs\n     **/\n    PalletStakingValidatorPrefs: {\n        commission: 'Compact<Perbill>',\n        blocked: 'bool'\n    },\n    /**\n     * Lookup40: pallet_session::pallet::Event\n     **/\n    PalletSessionEvent: {\n        _enum: {\n            NewSession: {\n                sessionIndex: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup41: pallet_grandpa::pallet::Event\n     **/\n    PalletGrandpaEvent: {\n        _enum: {\n            NewAuthorities: {\n                authoritySet: 'Vec<(SpFinalityGrandpaAppPublic,u64)>',\n            },\n            Paused: 'Null',\n            Resumed: 'Null'\n        }\n    },\n    /**\n     * Lookup44: sp_finality_grandpa::app::Public\n     **/\n    SpFinalityGrandpaAppPublic: 'SpCoreEd25519Public',\n    /**\n     * Lookup45: sp_core::ed25519::Public\n     **/\n    SpCoreEd25519Public: '[u8;32]',\n    /**\n     * Lookup46: pallet_im_online::pallet::Event<T>\n     **/\n    PalletImOnlineEvent: {\n        _enum: {\n            HeartbeatReceived: {\n                authorityId: 'PalletImOnlineSr25519AppSr25519Public',\n            },\n            AllGood: 'Null',\n            SomeOffline: {\n                offline: 'Vec<(AccountId32,PalletStakingExposure)>'\n            }\n        }\n    },\n    /**\n     * Lookup47: pallet_im_online::sr25519::app_sr25519::Public\n     **/\n    PalletImOnlineSr25519AppSr25519Public: 'SpCoreSr25519Public',\n    /**\n     * Lookup48: sp_core::sr25519::Public\n     **/\n    SpCoreSr25519Public: '[u8;32]',\n    /**\n     * Lookup51: pallet_staking::Exposure<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletStakingExposure: {\n        total: 'Compact<u128>',\n        own: 'Compact<u128>',\n        others: 'Vec<PalletStakingIndividualExposure>'\n    },\n    /**\n     * Lookup54: pallet_staking::IndividualExposure<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletStakingIndividualExposure: {\n        who: 'AccountId32',\n        value: 'Compact<u128>'\n    },\n    /**\n     * Lookup55: pallet_offences::pallet::Event\n     **/\n    PalletOffencesEvent: {\n        _enum: {\n            Offence: {\n                kind: '[u8;16]',\n                timeslot: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup57: pallet_bags_list::pallet::Event<T, I>\n     **/\n    PalletBagsListEvent: {\n        _enum: {\n            Rebagged: {\n                who: 'AccountId32',\n                from: 'u64',\n                to: 'u64',\n            },\n            ScoreUpdated: {\n                who: 'AccountId32',\n                newScore: 'u64'\n            }\n        }\n    },\n    /**\n     * Lookup58: pallet_vesting::pallet::Event<T>\n     **/\n    PalletVestingEvent: {\n        _enum: {\n            VestingUpdated: {\n                account: 'AccountId32',\n                unvested: 'u128',\n            },\n            VestingCompleted: {\n                account: 'AccountId32'\n            }\n        }\n    },\n    /**\n     * Lookup59: pallet_multisig::pallet::Event<T>\n     **/\n    PalletMultisigEvent: {\n        _enum: {\n            NewMultisig: {\n                approving: 'AccountId32',\n                multisig: 'AccountId32',\n                callHash: '[u8;32]',\n            },\n            MultisigApproval: {\n                approving: 'AccountId32',\n                timepoint: 'PalletMultisigTimepoint',\n                multisig: 'AccountId32',\n                callHash: '[u8;32]',\n            },\n            MultisigExecuted: {\n                approving: 'AccountId32',\n                timepoint: 'PalletMultisigTimepoint',\n                multisig: 'AccountId32',\n                callHash: '[u8;32]',\n                result: 'Result<Null, SpRuntimeDispatchError>',\n            },\n            MultisigCancelled: {\n                cancelling: 'AccountId32',\n                timepoint: 'PalletMultisigTimepoint',\n                multisig: 'AccountId32',\n                callHash: '[u8;32]'\n            }\n        }\n    },\n    /**\n     * Lookup60: pallet_multisig::Timepoint<BlockNumber>\n     **/\n    PalletMultisigTimepoint: {\n        height: 'u32',\n        index: 'u32'\n    },\n    /**\n     * Lookup61: pallet_council::RawEvent<Balance, BlockNumber, MemberId, sp_core::crypto::AccountId32>\n     **/\n    PalletCouncilRawEvent: {\n        _enum: {\n            AnnouncingPeriodStarted: 'u32',\n            NotEnoughCandidates: 'u32',\n            VotingPeriodStarted: 'u32',\n            NewCandidate: '(u64,AccountId32,AccountId32,u128)',\n            NewCouncilElected: '(Vec<u64>,u32)',\n            NewCouncilNotElected: 'u32',\n            CandidacyStakeRelease: 'u64',\n            CandidacyWithdraw: 'u64',\n            CandidacyNoteSet: '(u64,Bytes)',\n            RewardPayment: '(u64,AccountId32,u128,u128)',\n            BudgetBalanceSet: 'u128',\n            BudgetRefill: 'u128',\n            BudgetRefillPlanned: 'u32',\n            BudgetIncrementUpdated: 'u128',\n            CouncilorRewardUpdated: 'u128',\n            RequestFunded: '(AccountId32,u128)',\n            CouncilBudgetFunded: '(u64,u128,Bytes)',\n            CouncilorRemarked: '(u64,Bytes)',\n            CandidateRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup63: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>\n     **/\n    PalletReferendumRawEvent: {\n        _enum: {\n            ReferendumStarted: '(u32,u32)',\n            ReferendumStartedForcefully: '(u32,u32)',\n            RevealingStageStarted: 'u32',\n            ReferendumFinished: 'Vec<PalletReferendumOptionResult>',\n            VoteCast: '(AccountId32,H256,u128)',\n            VoteRevealed: '(AccountId32,u64,Bytes)',\n            StakeReleased: 'AccountId32',\n            AccountOptedOutOfVoting: 'AccountId32'\n        }\n    },\n    /**\n     * Lookup64: pallet_referendum::Instance1\n     **/\n    PalletReferendumInstance1: 'Null',\n    /**\n     * Lookup66: pallet_referendum::OptionResult<MemberId, VotePower>\n     **/\n    PalletReferendumOptionResult: {\n        optionId: 'u64',\n        votePower: 'u128'\n    },\n    /**\n     * Lookup67: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletMembershipRawEvent: {\n        _enum: {\n            MemberInvited: '(u64,PalletMembershipInviteMembershipParameters)',\n            MembershipGifted: '(u64,PalletMembershipGiftMembershipParameters)',\n            MembershipBought: '(u64,PalletMembershipBuyMembershipParameters,u32)',\n            MemberProfileUpdated: '(u64,Option<Bytes>,Option<Bytes>)',\n            MemberAccountsUpdated: '(u64,Option<AccountId32>,Option<AccountId32>)',\n            MemberVerificationStatusUpdated: '(u64,bool,u64)',\n            ReferralCutUpdated: 'u8',\n            InvitesTransferred: '(u64,u64,u32)',\n            MembershipPriceUpdated: 'u128',\n            InitialInvitationBalanceUpdated: 'u128',\n            LeaderInvitationQuotaUpdated: 'u32',\n            InitialInvitationCountUpdated: 'u32',\n            StakingAccountAdded: '(AccountId32,u64)',\n            StakingAccountRemoved: '(AccountId32,u64)',\n            StakingAccountConfirmed: '(AccountId32,u64)',\n            MemberRemarked: '(u64,Bytes,Option<(AccountId32,u128)>)',\n            MemberCreated: '(u64,PalletMembershipCreateMemberParameters,u32)'\n        }\n    },\n    /**\n     * Lookup68: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>\n     **/\n    PalletMembershipBuyMembershipParameters: {\n        rootAccount: 'AccountId32',\n        controllerAccount: 'AccountId32',\n        handle: 'Option<Bytes>',\n        metadata: 'Bytes',\n        referrerId: 'Option<u64>'\n    },\n    /**\n     * Lookup71: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>\n     **/\n    PalletMembershipInviteMembershipParameters: {\n        invitingMemberId: 'u64',\n        rootAccount: 'AccountId32',\n        controllerAccount: 'AccountId32',\n        handle: 'Option<Bytes>',\n        metadata: 'Bytes'\n    },\n    /**\n     * Lookup72: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>\n     **/\n    PalletMembershipCreateMemberParameters: {\n        rootAccount: 'AccountId32',\n        controllerAccount: 'AccountId32',\n        handle: 'Bytes',\n        metadata: 'Bytes',\n        isFoundingMember: 'bool'\n    },\n    /**\n     * Lookup73: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletMembershipGiftMembershipParameters: {\n        rootAccount: 'AccountId32',\n        controllerAccount: 'AccountId32',\n        handle: 'Option<Bytes>',\n        metadata: 'Bytes',\n        creditControllerAccount: 'u128',\n        applyControllerAccountInvitationLock: 'Option<u128>',\n        creditRootAccount: 'u128',\n        applyRootAccountInvitationLock: 'Option<u128>'\n    },\n    /**\n     * Lookup78: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>\n     **/\n    PalletForumRawEvent: {\n        _enum: {\n            CategoryCreated: '(u64,Option<u64>,Bytes,Bytes)',\n            CategoryArchivalStatusUpdated: '(u64,bool,PalletForumPrivilegedActor)',\n            CategoryTitleUpdated: '(u64,H256,PalletForumPrivilegedActor)',\n            CategoryDescriptionUpdated: '(u64,H256,PalletForumPrivilegedActor)',\n            CategoryDeleted: '(u64,PalletForumPrivilegedActor)',\n            ThreadCreated: '(u64,u64,u64,u64,Bytes,Bytes)',\n            ThreadModerated: '(u64,Bytes,PalletForumPrivilegedActor,u64)',\n            ThreadUpdated: '(u64,bool,PalletForumPrivilegedActor,u64)',\n            ThreadMetadataUpdated: '(u64,u64,u64,Bytes)',\n            ThreadDeleted: '(u64,u64,u64,bool)',\n            ThreadMoved: '(u64,u64,PalletForumPrivilegedActor,u64)',\n            PostAdded: '(u64,u64,u64,u64,Bytes,bool)',\n            PostModerated: '(u64,Bytes,PalletForumPrivilegedActor,u64,u64)',\n            PostDeleted: '(Bytes,u64,BTreeMap<PalletForumExtendedPostIdObject, bool>)',\n            PostTextUpdated: '(u64,u64,u64,u64,Bytes)',\n            CategoryStickyThreadUpdate: '(u64,BTreeSet<u64>,PalletForumPrivilegedActor)',\n            CategoryMembershipOfModeratorUpdated: '(u64,u64,bool)'\n        }\n    },\n    /**\n     * Lookup79: pallet_forum::PrivilegedActor<T>\n     **/\n    PalletForumPrivilegedActor: {\n        _enum: {\n            Lead: 'Null',\n            Moderator: 'u64'\n        }\n    },\n    /**\n     * Lookup80: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>\n     **/\n    PalletForumExtendedPostIdObject: {\n        categoryId: 'u64',\n        threadId: 'u64',\n        postId: 'u64'\n    },\n    /**\n     * Lookup85: pallet_constitution::RawEvent<primitive_types::H256>\n     **/\n    PalletConstitutionRawEvent: {\n        _enum: {\n            ConstutionAmended: '(H256,Bytes)'\n        }\n    },\n    /**\n     * Lookup86: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>\n     **/\n    PalletBountyRawEvent: {\n        _enum: {\n            BountyCreated: '(u64,PalletBountyBountyParametersBTreeSet,Bytes)',\n            BountyOracleSwitched: '(u64,PalletBountyBountyActor,PalletBountyBountyActor,PalletBountyBountyActor)',\n            BountyTerminated: '(u64,PalletBountyBountyActor,PalletBountyBountyActor,PalletBountyBountyActor)',\n            BountyFunded: '(u64,PalletBountyBountyActor,u128)',\n            BountyMaxFundingReached: 'u64',\n            BountyFundingWithdrawal: '(u64,PalletBountyBountyActor)',\n            BountyCreatorCherryWithdrawal: '(u64,PalletBountyBountyActor)',\n            BountyCreatorOracleRewardWithdrawal: '(u64,PalletBountyBountyActor)',\n            BountyOracleRewardWithdrawal: '(u64,PalletBountyBountyActor,u128)',\n            BountyRemoved: 'u64',\n            WorkEntryAnnounced: '(u64,u64,u64,AccountId32,Bytes)',\n            WorkSubmitted: '(u64,u64,u64,Bytes)',\n            OracleJudgmentSubmitted: '(u64,PalletBountyBountyActor,BTreeMap<u64, PalletBountyOracleWorkEntryJudgment>,Bytes)',\n            WorkEntrantFundsWithdrawn: '(u64,u64,u64)',\n            BountyContributorRemarked: '(PalletBountyBountyActor,u64,Bytes)',\n            BountyOracleRemarked: '(PalletBountyBountyActor,u64,Bytes)',\n            BountyEntrantRemarked: '(u64,u64,u64,Bytes)',\n            BountyCreatorRemarked: '(PalletBountyBountyActor,u64,Bytes)',\n            WorkSubmissionPeriodEnded: '(u64,PalletBountyBountyActor)',\n            WorkEntrantStakeUnlocked: '(u64,u64,AccountId32)',\n            WorkEntrantStakeSlashed: '(u64,u64,AccountId32,u128)',\n            FunderStateBloatBondWithdrawn: '(u64,PalletBountyBountyActor,u128)',\n            CreatorStateBloatBondWithdrawn: '(u64,PalletBountyBountyActor,u128)'\n        }\n    },\n    /**\n     * Lookup87: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>\n     **/\n    PalletBountyBountyParametersBTreeSet: {\n        oracle: 'PalletBountyBountyActor',\n        contractType: 'PalletBountyAssuranceContractTypeBTreeSet',\n        creator: 'PalletBountyBountyActor',\n        cherry: 'u128',\n        oracleReward: 'u128',\n        entrantStake: 'u128',\n        fundingType: 'PalletBountyFundingType'\n    },\n    /**\n     * Lookup88: pallet_bounty::BountyActor<MemberId>\n     **/\n    PalletBountyBountyActor: {\n        _enum: {\n            Council: 'Null',\n            Member: 'u64'\n        }\n    },\n    /**\n     * Lookup89: pallet_bounty::AssuranceContractType<BTreeSet<T>>\n     **/\n    PalletBountyAssuranceContractTypeBTreeSet: {\n        _enum: {\n            Open: 'Null',\n            Closed: 'BTreeSet<u64>'\n        }\n    },\n    /**\n     * Lookup90: pallet_bounty::FundingType<BlockNumber, Balance>\n     **/\n    PalletBountyFundingType: {\n        _enum: {\n            Perpetual: {\n                target: 'u128',\n            },\n            Limited: {\n                target: 'u128',\n                fundingPeriod: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup92: pallet_bounty::OracleWorkEntryJudgment<Balance>\n     **/\n    PalletBountyOracleWorkEntryJudgment: {\n        _enum: {\n            Winner: {\n                reward: 'u128',\n            },\n            Rejected: {\n                slashingShare: 'Perbill',\n                actionJustification: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup95: pallet_utility::RawEvent<Balance, sp_core::crypto::AccountId32>\n     **/\n    PalletUtilityRawEvent: {\n        _enum: {\n            Signaled: 'Bytes',\n            RuntimeUpgraded: 'Bytes',\n            UpdatedWorkingGroupBudget: '(PalletCommonWorkingGroupIterableEnumsWorkingGroup,u128,PalletCommonBalanceKind)',\n            TokensBurned: '(AccountId32,u128)'\n        }\n    },\n    /**\n     * Lookup96: pallet_common::working_group::iterable_enums::WorkingGroup\n     **/\n    PalletCommonWorkingGroupIterableEnumsWorkingGroup: {\n        _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']\n    },\n    /**\n     * Lookup97: pallet_common::BalanceKind\n     **/\n    PalletCommonBalanceKind: {\n        _enum: ['Positive', 'Negative']\n    },\n    /**\n     * Lookup98: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>\n     **/\n    PalletContentRawEvent: {\n        _enum: {\n            CuratorGroupCreated: 'u64',\n            CuratorGroupPermissionsUpdated: '(u64,BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>)',\n            CuratorGroupStatusSet: '(u64,bool)',\n            CuratorAdded: '(u64,u64,BTreeSet<PalletContentIterableEnumsChannelActionPermission>)',\n            CuratorRemoved: '(u64,u64)',\n            ChannelCreated: '(u64,PalletContentChannelRecord,PalletContentChannelCreationParametersRecord,AccountId32)',\n            ChannelUpdated: '(PalletContentPermissionsContentActor,u64,PalletContentChannelUpdateParametersRecord,BTreeSet<u64>)',\n            ChannelPrivilegeLevelUpdated: '(u64,u8)',\n            ChannelStateBloatBondValueUpdated: 'u128',\n            VideoStateBloatBondValueUpdated: 'u128',\n            ChannelAssetsRemoved: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,PalletContentChannelRecord)',\n            ChannelDeleted: '(PalletContentPermissionsContentActor,u64)',\n            ChannelDeletedByModerator: '(PalletContentPermissionsContentActor,u64,Bytes)',\n            ChannelVisibilitySetByModerator: '(PalletContentPermissionsContentActor,u64,bool,Bytes)',\n            ChannelPausedFeaturesUpdatedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature>,Bytes)',\n            ChannelAssetsDeletedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,Bytes)',\n            ChannelFundsWithdrawn: '(PalletContentPermissionsContentActor,u64,u128,PalletContentChannelFundsDestination)',\n            ChannelRewardClaimedAndWithdrawn: '(PalletContentPermissionsContentActor,u64,u128,PalletContentChannelFundsDestination)',\n            VideoCreated: '(PalletContentPermissionsContentActor,u64,u64,PalletContentVideoCreationParametersRecord,BTreeSet<u64>)',\n            VideoUpdated: '(PalletContentPermissionsContentActor,u64,PalletContentVideoUpdateParametersRecord,BTreeSet<u64>)',\n            VideoDeleted: '(PalletContentPermissionsContentActor,u64)',\n            VideoDeletedByModerator: '(PalletContentPermissionsContentActor,u64,Bytes)',\n            VideoVisibilitySetByModerator: '(PalletContentPermissionsContentActor,u64,bool,Bytes)',\n            VideoAssetsDeletedByModerator: '(PalletContentPermissionsContentActor,u64,BTreeSet<u64>,bool,Bytes)',\n            ChannelPayoutsUpdated: '(PalletContentUpdateChannelPayoutsParametersRecord,Option<u64>,AccountId32)',\n            ChannelRewardUpdated: '(u128,u128,u64)',\n            EnglishAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesEnglishAuctionParamsRecord)',\n            OpenAuctionStarted: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesOpenAuctionParamsRecord,u64)',\n            NftIssued: '(PalletContentPermissionsContentActor,u64,PalletContentNftTypesNftIssuanceParametersRecord)',\n            NftDestroyed: '(PalletContentPermissionsContentActor,u64)',\n            AuctionBidMade: '(u64,u64,u128,Option<u64>)',\n            AuctionBidCanceled: '(u64,u64)',\n            AuctionCanceled: '(PalletContentPermissionsContentActor,u64)',\n            EnglishAuctionSettled: '(u64,AccountId32,u64)',\n            BidMadeCompletingAuction: '(u64,u64,Option<u64>)',\n            OpenAuctionBidAccepted: '(PalletContentPermissionsContentActor,u64,u64,u128)',\n            OfferStarted: '(u64,PalletContentPermissionsContentActor,u64,Option<u128>)',\n            OfferAccepted: 'u64',\n            OfferCanceled: '(u64,PalletContentPermissionsContentActor)',\n            NftSellOrderMade: '(u64,PalletContentPermissionsContentActor,u128)',\n            NftBought: '(u64,u64)',\n            BuyNowCanceled: '(u64,PalletContentPermissionsContentActor)',\n            BuyNowPriceUpdated: '(u64,PalletContentPermissionsContentActor,u128)',\n            NftSlingedBackToTheOriginalArtist: '(u64,PalletContentPermissionsContentActor)',\n            ChannelOwnerRemarked: '(u64,Bytes)',\n            ChannelAgentRemarked: '(PalletContentPermissionsContentActor,u64,Bytes)',\n            NftOwnerRemarked: '(PalletContentPermissionsContentActor,u64,Bytes)',\n            InitializedChannelTransfer: '(u64,PalletContentPermissionsContentActor,PalletContentPendingTransfer)',\n            CancelChannelTransfer: '(u64,PalletContentPermissionsContentActor)',\n            ChannelTransferAccepted: '(u64,PalletContentTransferCommitmentParametersBTreeMap)',\n            GlobalNftLimitUpdated: '(PalletContentNftLimitPeriod,u64)',\n            ChannelNftLimitUpdated: '(PalletContentPermissionsContentActor,PalletContentNftLimitPeriod,u64,u64)',\n            ToggledNftLimits: 'bool',\n            CreatorTokenIssued: '(PalletContentPermissionsContentActor,u64,u64)'\n        }\n    },\n    /**\n     * Lookup99: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>\n     **/\n    PalletContentPermissionsContentActor: {\n        _enum: {\n            Curator: '(u64,u64)',\n            Member: 'u64',\n            Lead: 'Null'\n        }\n    },\n    /**\n     * Lookup100: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletContentChannelRecord: {\n        owner: 'PalletContentChannelOwner',\n        numVideos: 'u64',\n        collaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        cumulativeRewardClaimed: 'u128',\n        privilegeLevel: 'u8',\n        pausedFeatures: 'BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature>',\n        transferStatus: 'PalletContentChannelTransferStatus',\n        dataObjects: 'BTreeSet<u64>',\n        dailyNftLimit: 'PalletContentLimitPerPeriod',\n        weeklyNftLimit: 'PalletContentLimitPerPeriod',\n        dailyNftCounter: 'PalletContentNftCounter',\n        weeklyNftCounter: 'PalletContentNftCounter',\n        creatorTokenId: 'Option<u64>',\n        channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'\n    },\n    /**\n     * Lookup104: pallet_content::types::iterable_enums::ChannelActionPermission\n     **/\n    PalletContentIterableEnumsChannelActionPermission: {\n        _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken']\n    },\n    /**\n     * Lookup111: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature\n     **/\n    PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {\n        _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']\n    },\n    /**\n     * Lookup114: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletCommonBloatBondRepayableBloatBond: {\n        repaymentRestrictedTo: 'Option<AccountId32>',\n        amount: 'u128'\n    },\n    /**\n     * Lookup115: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>\n     **/\n    PalletContentChannelOwner: {\n        _enum: {\n            Member: 'u64',\n            CuratorGroup: 'u64'\n        }\n    },\n    /**\n     * Lookup116: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>\n     **/\n    PalletContentChannelTransferStatus: {\n        _enum: {\n            NoActiveTransfer: 'Null',\n            PendingTransfer: 'PalletContentPendingTransfer'\n        }\n    },\n    /**\n     * Lookup117: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>\n     **/\n    PalletContentPendingTransfer: {\n        newOwner: 'PalletContentChannelOwner',\n        transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'\n    },\n    /**\n     * Lookup118: pallet_content::types::TransferCommitmentParameters<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>\n     **/\n    PalletContentTransferCommitmentParametersBoundedBTreeMap: {\n        newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        price: 'u128',\n        transferId: 'u64'\n    },\n    /**\n     * Lookup119: pallet_content::types::LimitPerPeriod<BlockNumber>\n     **/\n    PalletContentLimitPerPeriod: {\n        limit: 'u64',\n        blockNumberPeriod: 'u32'\n    },\n    /**\n     * Lookup120: pallet_content::types::NftCounter<BlockNumber>\n     **/\n    PalletContentNftCounter: {\n        counter: 'u64',\n        lastUpdated: 'u32'\n    },\n    /**\n     * Lookup121: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>\n     **/\n    PalletContentNftTypesEnglishAuctionParamsRecord: {\n        startingPrice: 'u128',\n        buyNowPrice: 'Option<u128>',\n        whitelist: 'BTreeSet<u64>',\n        startsAt: 'Option<u32>',\n        duration: 'u32',\n        extensionPeriod: 'u32',\n        minBidStep: 'u128'\n    },\n    /**\n     * Lookup123: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>\n     **/\n    PalletContentNftTypesOpenAuctionParamsRecord: {\n        startingPrice: 'u128',\n        buyNowPrice: 'Option<u128>',\n        startsAt: 'Option<u32>',\n        whitelist: 'BTreeSet<u64>',\n        bidLockDuration: 'u32'\n    },\n    /**\n     * Lookup124: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>\n     **/\n    PalletContentNftTypesNftIssuanceParametersRecord: {\n        royalty: 'Option<Perbill>',\n        nftMetadata: 'Bytes',\n        nonChannelOwner: 'Option<u64>',\n        initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'\n    },\n    /**\n     * Lookup125: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>\n     **/\n    PalletContentNftTypesInitTransactionalStatusRecord: {\n        _enum: {\n            Idle: 'Null',\n            BuyNow: 'u128',\n            InitiatedOfferToMember: '(u64,Option<u128>)',\n            EnglishAuction: 'PalletContentNftTypesEnglishAuctionParamsRecord',\n            OpenAuction: 'PalletContentNftTypesOpenAuctionParamsRecord'\n        }\n    },\n    /**\n     * Lookup127: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>\n     **/\n    PalletContentChannelCreationParametersRecord: {\n        assets: 'Option<PalletContentStorageAssetsRecord>',\n        meta: 'Option<Bytes>',\n        collaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        storageBuckets: 'BTreeSet<u64>',\n        distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>',\n        expectedChannelStateBloatBond: 'u128',\n        expectedDataObjectStateBloatBond: 'u128'\n    },\n    /**\n     * Lookup128: pallet_content::types::StorageAssetsRecord<Balance>\n     **/\n    PalletContentStorageAssetsRecord: {\n        objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',\n        expectedDataSizeFee: 'u128'\n    },\n    /**\n     * Lookup130: pallet_storage::DataObjectCreationParameters\n     **/\n    PalletStorageDataObjectCreationParameters: {\n        _alias: {\n            size_: 'size'\n        },\n        size_: 'u64',\n        ipfsContentId: 'Bytes'\n    },\n    /**\n     * Lookup131: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>\n     **/\n    PalletStorageDistributionBucketIdRecord: {\n        distributionBucketFamilyId: 'u64',\n        distributionBucketIndex: 'u64'\n    },\n    /**\n     * Lookup138: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>\n     **/\n    PalletContentChannelUpdateParametersRecord: {\n        assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',\n        newMeta: 'Option<Bytes>',\n        assetsToRemove: 'BTreeSet<u64>',\n        collaborators: 'Option<BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>>',\n        expectedDataObjectStateBloatBond: 'u128',\n        storageBucketsNumWitness: 'Option<u32>'\n    },\n    /**\n     * Lookup140: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>\n     **/\n    PalletContentVideoCreationParametersRecord: {\n        assets: 'Option<PalletContentStorageAssetsRecord>',\n        meta: 'Option<Bytes>',\n        autoIssueNft: 'Option<PalletContentNftTypesNftIssuanceParametersRecord>',\n        expectedVideoStateBloatBond: 'u128',\n        expectedDataObjectStateBloatBond: 'u128',\n        storageBucketsNumWitness: 'u32'\n    },\n    /**\n     * Lookup142: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>\n     **/\n    PalletContentVideoUpdateParametersRecord: {\n        assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',\n        newMeta: 'Option<Bytes>',\n        assetsToRemove: 'BTreeSet<u64>',\n        autoIssueNft: 'Option<PalletContentNftTypesNftIssuanceParametersRecord>',\n        expectedDataObjectStateBloatBond: 'u128',\n        storageBucketsNumWitness: 'Option<u32>'\n    },\n    /**\n     * Lookup145: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction\n     **/\n    PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {\n        _enum: {\n            HideVideo: 'Null',\n            HideChannel: 'Null',\n            ChangeChannelFeatureStatus: 'PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature',\n            DeleteVideo: 'Null',\n            DeleteChannel: 'Null',\n            DeleteVideoAssets: 'bool',\n            DeleteNonVideoChannelAssets: 'Null',\n            UpdateChannelNftLimits: 'Null'\n        }\n    },\n    /**\n     * Lookup149: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>\n     **/\n    PalletContentTransferCommitmentParametersBTreeMap: {\n        newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        price: 'u128',\n        transferId: 'u64'\n    },\n    /**\n     * Lookup150: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>\n     **/\n    PalletContentUpdateChannelPayoutsParametersRecord: {\n        commitment: 'Option<H256>',\n        payload: 'Option<PalletContentChannelPayoutsPayloadParametersRecord>',\n        minCashoutAllowed: 'Option<u128>',\n        maxCashoutAllowed: 'Option<u128>',\n        channelCashoutsEnabled: 'Option<bool>'\n    },\n    /**\n     * Lookup151: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>\n     **/\n    PalletContentChannelPayoutsPayloadParametersRecord: {\n        objectCreationParams: 'PalletStorageDataObjectCreationParameters',\n        expectedDataSizeFee: 'u128',\n        expectedDataObjectStateBloatBond: 'u128'\n    },\n    /**\n     * Lookup155: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>\n     **/\n    PalletContentChannelFundsDestination: {\n        _enum: {\n            AccountId: 'AccountId32',\n            CouncilBudget: 'Null'\n        }\n    },\n    /**\n     * Lookup156: pallet_content::types::NftLimitPeriod\n     **/\n    PalletContentNftLimitPeriod: {\n        _enum: ['Daily', 'Weekly']\n    },\n    /**\n     * Lookup157: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>\n     **/\n    PalletStorageRawEvent: {\n        _enum: {\n            StorageBucketCreated: '(u64,Option<u64>,bool,u64,u64)',\n            StorageBucketInvitationAccepted: '(u64,u64,AccountId32)',\n            StorageBucketsUpdatedForBag: '(PalletStorageBagIdType,BTreeSet<u64>,BTreeSet<u64>)',\n            DataObjectsUploaded: '(BTreeSet<u64>,PalletStorageUploadParametersRecord,u128)',\n            StorageOperatorMetadataSet: '(u64,u64,Bytes)',\n            StorageBucketVoucherLimitsSet: '(u64,u64,u64)',\n            PendingDataObjectsAccepted: '(u64,u64,PalletStorageBagIdType,BTreeSet<u64>)',\n            StorageBucketInvitationCancelled: 'u64',\n            StorageBucketOperatorInvited: '(u64,u64)',\n            StorageBucketOperatorRemoved: 'u64',\n            UploadingBlockStatusUpdated: 'bool',\n            DataObjectPerMegabyteFeeUpdated: 'u128',\n            StorageBucketsPerBagLimitUpdated: 'u32',\n            StorageBucketsVoucherMaxLimitsUpdated: '(u64,u64)',\n            DataObjectsMoved: '(PalletStorageBagIdType,PalletStorageBagIdType,BTreeSet<u64>)',\n            DataObjectsDeleted: '(AccountId32,PalletStorageBagIdType,BTreeSet<u64>)',\n            StorageBucketStatusUpdated: '(u64,bool)',\n            UpdateBlacklist: '(BTreeSet<Bytes>,BTreeSet<Bytes>)',\n            DynamicBagDeleted: 'PalletStorageDynamicBagIdType',\n            DynamicBagCreated: '(PalletStorageDynBagCreationParametersRecord,BTreeSet<u64>)',\n            VoucherChanged: '(u64,PalletStorageVoucher)',\n            StorageBucketDeleted: 'u64',\n            NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated: '(PalletStorageDynamicBagType,u32)',\n            DistributionBucketFamilyCreated: 'u64',\n            DistributionBucketFamilyDeleted: 'u64',\n            DistributionBucketCreated: '(u64,bool,PalletStorageDistributionBucketIdRecord)',\n            DistributionBucketStatusUpdated: '(PalletStorageDistributionBucketIdRecord,bool)',\n            DistributionBucketDeleted: 'PalletStorageDistributionBucketIdRecord',\n            DistributionBucketsUpdatedForBag: '(PalletStorageBagIdType,u64,BTreeSet<u64>,BTreeSet<u64>)',\n            DistributionBucketsPerBagLimitUpdated: 'u32',\n            DistributionBucketModeUpdated: '(PalletStorageDistributionBucketIdRecord,bool)',\n            FamiliesInDynamicBagCreationPolicyUpdated: '(PalletStorageDynamicBagType,BTreeMap<u64, u32>)',\n            DistributionBucketOperatorInvited: '(PalletStorageDistributionBucketIdRecord,u64)',\n            DistributionBucketInvitationCancelled: '(PalletStorageDistributionBucketIdRecord,u64)',\n            DistributionBucketInvitationAccepted: '(u64,PalletStorageDistributionBucketIdRecord)',\n            DistributionBucketMetadataSet: '(u64,PalletStorageDistributionBucketIdRecord,Bytes)',\n            DistributionBucketOperatorRemoved: '(PalletStorageDistributionBucketIdRecord,u64)',\n            DistributionBucketFamilyMetadataSet: '(u64,Bytes)',\n            DataObjectStateBloatBondValueUpdated: 'u128',\n            DataObjectsUpdated: '(PalletStorageUploadParametersRecord,BTreeSet<u64>,BTreeSet<u64>)',\n            StorageOperatorRemarked: '(u64,u64,Bytes)',\n            DistributionOperatorRemarked: '(u64,PalletStorageDistributionBucketIdRecord,Bytes)'\n        }\n    },\n    /**\n     * Lookup158: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletStorageUploadParametersRecord: {\n        bagId: 'PalletStorageBagIdType',\n        objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',\n        stateBloatBondSourceAccountId: 'AccountId32',\n        expectedDataSizeFee: 'u128',\n        expectedDataObjectStateBloatBond: 'u128'\n    },\n    /**\n     * Lookup159: pallet_storage::BagIdType<MemberId, ChannelId>\n     **/\n    PalletStorageBagIdType: {\n        _enum: {\n            Static: 'PalletStorageStaticBagId',\n            Dynamic: 'PalletStorageDynamicBagIdType'\n        }\n    },\n    /**\n     * Lookup160: pallet_storage::StaticBagId\n     **/\n    PalletStorageStaticBagId: {\n        _enum: {\n            Council: 'Null',\n            WorkingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'\n        }\n    },\n    /**\n     * Lookup161: pallet_storage::DynamicBagIdType<MemberId, ChannelId>\n     **/\n    PalletStorageDynamicBagIdType: {\n        _enum: {\n            Member: 'u64',\n            Channel: 'u64'\n        }\n    },\n    /**\n     * Lookup162: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>\n     **/\n    PalletStorageDynBagCreationParametersRecord: {\n        bagId: 'PalletStorageDynamicBagIdType',\n        objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',\n        stateBloatBondSourceAccountId: 'AccountId32',\n        expectedDataSizeFee: 'u128',\n        expectedDataObjectStateBloatBond: 'u128',\n        storageBuckets: 'BTreeSet<u64>',\n        distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'\n    },\n    /**\n     * Lookup165: pallet_storage::Voucher\n     **/\n    PalletStorageVoucher: {\n        sizeLimit: 'u64',\n        objectsLimit: 'u64',\n        sizeUsed: 'u64',\n        objectsUsed: 'u64'\n    },\n    /**\n     * Lookup166: pallet_storage::DynamicBagType\n     **/\n    PalletStorageDynamicBagType: {\n        _enum: ['Member', 'Channel']\n    },\n    /**\n     * Lookup170: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>>\n     **/\n    PalletProjectTokenEventsRawEvent: {\n        _enum: {\n            TokenAmountTransferred: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',\n            TokenAmountTransferredByIssuer: '(u64,u64,BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>,Bytes)',\n            PatronageRateDecreasedTo: '(u64,Perquintill)',\n            PatronageCreditClaimed: '(u64,u128,u64)',\n            RevenueSplitIssued: '(u64,u32,u32,u128)',\n            RevenueSplitFinalized: '(u64,AccountId32,u128)',\n            UserParticipatedInSplit: '(u64,u64,u128,u128,u32)',\n            RevenueSplitLeft: '(u64,u64,u128)',\n            MemberJoinedWhitelist: '(u64,u64,PalletProjectTokenTransferPolicy)',\n            AccountDustedBy: '(u64,u64,AccountId32,PalletProjectTokenTransferPolicy)',\n            TokenDeissued: 'u64',\n            TokenIssued: '(u64,PalletProjectTokenTokenIssuanceParameters)',\n            TokenSaleInitialized: '(u64,u32,PalletProjectTokenTokenSale,Option<Bytes>)',\n            UpcomingTokenSaleUpdated: '(u64,u32,Option<u32>,Option<u32>)',\n            TokensPurchasedOnSale: '(u64,u32,u128,u64)',\n            TokenSaleFinalized: '(u64,u32,u128,u128)',\n            TransferPolicyChangedToPermissionless: 'u64',\n            TokensBurned: '(u64,u64,u128)'\n        }\n    },\n    /**\n     * Lookup171: pallet_project_token::types::TransferPolicy<primitive_types::H256>\n     **/\n    PalletProjectTokenTransferPolicy: {\n        _enum: {\n            Permissionless: 'Null',\n            Permissioned: 'H256'\n        }\n    },\n    /**\n     * Lookup172: pallet_project_token::types::TokenIssuanceParameters<primitive_types::H256, pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>\n     **/\n    PalletProjectTokenTokenIssuanceParameters: {\n        initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',\n        symbol: 'H256',\n        transferPolicy: 'PalletProjectTokenTransferPolicyParams',\n        patronageRate: 'Permill',\n        revenueSplitRate: 'Permill'\n    },\n    /**\n     * Lookup173: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>\n     **/\n    PalletProjectTokenTokenAllocation: {\n        amount: 'u128',\n        vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'\n    },\n    /**\n     * Lookup174: pallet_project_token::types::VestingScheduleParams<BlockNumber>\n     **/\n    PalletProjectTokenVestingScheduleParams: {\n        linearVestingDuration: 'u32',\n        blocksBeforeCliff: 'u32',\n        cliffAmountPercentage: 'Permill'\n    },\n    /**\n     * Lookup177: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>\n     **/\n    PalletProjectTokenTransferPolicyParams: {\n        _enum: {\n            Permissionless: 'Null',\n            Permissioned: 'PalletProjectTokenWhitelistParams'\n        }\n    },\n    /**\n     * Lookup178: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>\n     **/\n    PalletProjectTokenWhitelistParams: {\n        commitment: 'H256',\n        payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'\n    },\n    /**\n     * Lookup179: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>\n     **/\n    PalletProjectTokenSingleDataObjectUploadParams: {\n        objectCreationParams: 'PalletStorageDataObjectCreationParameters',\n        expectedDataSizeFee: 'u128',\n        expectedDataObjectStateBloatBond: 'u128'\n    },\n    /**\n     * Lookup186: pallet_project_token::types::Validated<MemberId>\n     **/\n    PalletProjectTokenValidated: {\n        _enum: {\n            Existing: 'u64',\n            NonExisting: 'u64'\n        }\n    },\n    /**\n     * Lookup187: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>\n     **/\n    PalletProjectTokenValidatedPayment: {\n        payment: 'PalletProjectTokenPaymentWithVesting',\n        vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'\n    },\n    /**\n     * Lookup188: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>\n     **/\n    PalletProjectTokenPaymentWithVesting: {\n        amount: 'u128',\n        vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'\n    },\n    /**\n     * Lookup190: pallet_project_token::types::VestingSource\n     **/\n    PalletProjectTokenVestingSource: {\n        _enum: {\n            InitialIssuance: 'Null',\n            Sale: 'u32',\n            IssuerTransfer: 'u64'\n        }\n    },\n    /**\n     * Lookup194: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>\n     **/\n    PalletProjectTokenTokenSale: {\n        unitPrice: 'u128',\n        quantityLeft: 'u128',\n        fundsCollected: 'u128',\n        tokensSource: 'u64',\n        earningsDestination: 'Option<AccountId32>',\n        startBlock: 'u32',\n        duration: 'u32',\n        vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>',\n        capPerMember: 'Option<u128>',\n        autoFinalize: 'bool'\n    },\n    /**\n     * Lookup196: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>\n     **/\n    PalletProposalsEngineRawEvent: {\n        _enum: {\n            ProposalStatusUpdated: '(u32,PalletProposalsEngineProposalStatusesProposalStatus)',\n            ProposalDecisionMade: '(u32,PalletProposalsEngineProposalStatusesProposalDecision)',\n            ProposalExecuted: '(u32,PalletProposalsEngineProposalStatusesExecutionStatus)',\n            Voted: '(u64,u32,PalletProposalsEngineVoteKind,Bytes)',\n            ProposalCancelled: '(u64,u32)',\n            ProposerRemarked: '(u64,u32,Bytes)'\n        }\n    },\n    /**\n     * Lookup197: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>\n     **/\n    PalletProposalsEngineProposalStatusesProposalStatus: {\n        _enum: {\n            Active: 'Null',\n            PendingExecution: 'u32',\n            PendingConstitutionality: 'Null'\n        }\n    },\n    /**\n     * Lookup198: pallet_proposals_engine::types::proposal_statuses::ProposalDecision\n     **/\n    PalletProposalsEngineProposalStatusesProposalDecision: {\n        _enum: {\n            Canceled: 'Null',\n            CanceledByRuntime: 'Null',\n            Vetoed: 'Null',\n            Rejected: 'Null',\n            Slashed: 'Null',\n            Expired: 'Null',\n            Approved: 'PalletProposalsEngineProposalStatusesApprovedProposalDecision'\n        }\n    },\n    /**\n     * Lookup199: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision\n     **/\n    PalletProposalsEngineProposalStatusesApprovedProposalDecision: {\n        _enum: ['PendingExecution', 'PendingConstitutionality']\n    },\n    /**\n     * Lookup200: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus\n     **/\n    PalletProposalsEngineProposalStatusesExecutionStatus: {\n        _enum: {\n            Executed: 'Null',\n            ExecutionFailed: {\n                error: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup201: pallet_proposals_engine::types::VoteKind\n     **/\n    PalletProposalsEngineVoteKind: {\n        _enum: ['Approve', 'Reject', 'Slash', 'Abstain']\n    },\n    /**\n     * Lookup202: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>\n     **/\n    PalletProposalsDiscussionRawEvent: {\n        _enum: {\n            ThreadCreated: '(u64,u64)',\n            PostCreated: '(u64,u64,u64,Bytes,bool)',\n            PostUpdated: '(u64,u64,u64,Bytes)',\n            ThreadModeChanged: '(u64,PalletProposalsDiscussionThreadModeBTreeSet,u64)',\n            PostDeleted: '(u64,u64,u64,bool)'\n        }\n    },\n    /**\n     * Lookup203: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>\n     **/\n    PalletProposalsDiscussionThreadModeBTreeSet: {\n        _enum: {\n            Open: 'Null',\n            Closed: 'BTreeSet<u64>'\n        }\n    },\n    /**\n     * Lookup204: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>\n     **/\n    PalletProposalsCodexRawEvent: {\n        _enum: {\n            ProposalCreated: '(u32,PalletProposalsCodexGeneralProposalParams,PalletProposalsCodexProposalDetails,u64)'\n        }\n    },\n    /**\n     * Lookup205: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>\n     **/\n    PalletProposalsCodexGeneralProposalParams: {\n        memberId: 'u64',\n        title: 'Bytes',\n        description: 'Bytes',\n        stakingAccountId: 'Option<AccountId32>',\n        exactExecutionBlock: 'Option<u32>'\n    },\n    /**\n     * Lookup206: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>\n     **/\n    PalletProposalsCodexProposalDetails: {\n        _enum: {\n            Signal: 'Bytes',\n            RuntimeUpgrade: 'Bytes',\n            FundingRequest: 'Vec<PalletCommonFundingRequestParameters>',\n            SetMaxValidatorCount: 'u32',\n            CreateWorkingGroupLeadOpening: 'PalletProposalsCodexCreateOpeningParameters',\n            FillWorkingGroupLeadOpening: 'PalletProposalsCodexFillOpeningParameters',\n            UpdateWorkingGroupBudget: '(u128,PalletCommonWorkingGroupIterableEnumsWorkingGroup,PalletCommonBalanceKind)',\n            DecreaseWorkingGroupLeadStake: '(u64,u128,PalletCommonWorkingGroupIterableEnumsWorkingGroup)',\n            SlashWorkingGroupLead: '(u64,u128,PalletCommonWorkingGroupIterableEnumsWorkingGroup)',\n            SetWorkingGroupLeadReward: '(u64,Option<u128>,PalletCommonWorkingGroupIterableEnumsWorkingGroup)',\n            TerminateWorkingGroupLead: 'PalletProposalsCodexTerminateRoleParameters',\n            AmendConstitution: 'Bytes',\n            CancelWorkingGroupLeadOpening: '(u64,PalletCommonWorkingGroupIterableEnumsWorkingGroup)',\n            SetMembershipPrice: 'u128',\n            SetCouncilBudgetIncrement: 'u128',\n            SetCouncilorReward: 'u128',\n            SetInitialInvitationBalance: 'u128',\n            SetInitialInvitationCount: 'u32',\n            SetMembershipLeadInvitationQuota: 'u32',\n            SetReferralCut: 'u8',\n            VetoProposal: 'u32',\n            UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',\n            UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord'\n        }\n    },\n    /**\n     * Lookup208: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>\n     **/\n    PalletCommonFundingRequestParameters: {\n        account: 'AccountId32',\n        amount: 'u128'\n    },\n    /**\n     * Lookup209: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>\n     **/\n    PalletProposalsCodexCreateOpeningParameters: {\n        description: 'Bytes',\n        stakePolicy: 'PalletWorkingGroupStakePolicy',\n        rewardPerBlock: 'Option<u128>',\n        group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'\n    },\n    /**\n     * Lookup210: pallet_working_group::types::StakePolicy<BlockNumber, Balance>\n     **/\n    PalletWorkingGroupStakePolicy: {\n        stakeAmount: 'u128',\n        leavingUnstakingPeriod: 'u32'\n    },\n    /**\n     * Lookup211: pallet_proposals_codex::types::FillOpeningParameters\n     **/\n    PalletProposalsCodexFillOpeningParameters: {\n        openingId: 'u64',\n        applicationId: 'u64',\n        workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'\n    },\n    /**\n     * Lookup212: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>\n     **/\n    PalletProposalsCodexTerminateRoleParameters: {\n        workerId: 'u64',\n        slashingAmount: 'Option<u128>',\n        group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'\n    },\n    /**\n     * Lookup213: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>\n     **/\n    PalletWorkingGroupRawEventInstance1: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup217: pallet_working_group::types::OpeningType\n     **/\n    PalletWorkingGroupOpeningType: {\n        _enum: ['Leader', 'Regular']\n    },\n    /**\n     * Lookup218: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletWorkingGroupApplyOnOpeningParams: {\n        memberId: 'u64',\n        openingId: 'u64',\n        roleAccountId: 'AccountId32',\n        rewardAccountId: 'AccountId32',\n        description: 'Bytes',\n        stakeParameters: 'PalletWorkingGroupStakeParameters'\n    },\n    /**\n     * Lookup219: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletWorkingGroupStakeParameters: {\n        stake: 'u128',\n        stakingAccountId: 'AccountId32'\n    },\n    /**\n     * Lookup220: pallet_working_group::Instance1\n     **/\n    PalletWorkingGroupInstance1: 'Null',\n    /**\n     * Lookup221: pallet_working_group::types::RewardPaymentType\n     **/\n    PalletWorkingGroupRewardPaymentType: {\n        _enum: ['MissedReward', 'RegularReward']\n    },\n    /**\n     * Lookup222: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>\n     **/\n    PalletWorkingGroupRawEventInstance2: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup223: pallet_working_group::Instance2\n     **/\n    PalletWorkingGroupInstance2: 'Null',\n    /**\n     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>\n     **/\n    PalletWorkingGroupRawEventInstance3: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup225: pallet_working_group::Instance3\n     **/\n    PalletWorkingGroupInstance3: 'Null',\n    /**\n     * Lookup226: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>\n     **/\n    PalletWorkingGroupRawEventInstance4: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup227: pallet_working_group::Instance4\n     **/\n    PalletWorkingGroupInstance4: 'Null',\n    /**\n     * Lookup228: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>\n     **/\n    PalletWorkingGroupRawEventInstance5: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup229: pallet_working_group::Instance5\n     **/\n    PalletWorkingGroupInstance5: 'Null',\n    /**\n     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>\n     **/\n    PalletWorkingGroupRawEventInstance6: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup231: pallet_working_group::Instance6\n     **/\n    PalletWorkingGroupInstance6: 'Null',\n    /**\n     * Lookup232: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>\n     **/\n    PalletWorkingGroupRawEventInstance7: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup233: pallet_working_group::Instance7\n     **/\n    PalletWorkingGroupInstance7: 'Null',\n    /**\n     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>\n     **/\n    PalletWorkingGroupRawEventInstance8: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup235: pallet_working_group::Instance8\n     **/\n    PalletWorkingGroupInstance8: 'Null',\n    /**\n     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>\n     **/\n    PalletWorkingGroupRawEventInstance9: {\n        _enum: {\n            OpeningAdded: '(u64,Bytes,PalletWorkingGroupOpeningType,PalletWorkingGroupStakePolicy,Option<u128>)',\n            AppliedOnOpening: '(PalletWorkingGroupApplyOnOpeningParams,u64)',\n            OpeningFilled: '(u64,BTreeMap<u64, u64>,BTreeSet<u64>)',\n            LeaderSet: 'u64',\n            WorkerRoleAccountUpdated: '(u64,AccountId32)',\n            LeaderUnset: 'Null',\n            WorkerExited: 'u64',\n            WorkerStartedLeaving: '(u64,Option<Bytes>)',\n            TerminatedWorker: '(u64,Option<u128>,Option<Bytes>)',\n            TerminatedLeader: '(u64,Option<u128>,Option<Bytes>)',\n            StakeSlashed: '(u64,u128,u128,Option<Bytes>)',\n            StakeDecreased: '(u64,u128)',\n            StakeIncreased: '(u64,u128)',\n            ApplicationWithdrawn: 'u64',\n            OpeningCanceled: 'u64',\n            BudgetSet: 'u128',\n            WorkerRewardAccountUpdated: '(u64,AccountId32)',\n            WorkerRewardAmountUpdated: '(u64,Option<u128>)',\n            StatusTextChanged: '(H256,Option<Bytes>)',\n            BudgetSpending: '(AccountId32,u128,Option<Bytes>)',\n            RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',\n            NewMissedRewardLevelReached: '(u64,Option<u128>)',\n            WorkingGroupBudgetFunded: '(u64,u128,Bytes)',\n            LeadRemarked: 'Bytes',\n            WorkerRemarked: '(u64,Bytes)'\n        }\n    },\n    /**\n     * Lookup237: pallet_working_group::Instance9\n     **/\n    PalletWorkingGroupInstance9: 'Null',\n    /**\n     * Lookup238: frame_system::Phase\n     **/\n    FrameSystemPhase: {\n        _enum: {\n            ApplyExtrinsic: 'u32',\n            Finalization: 'Null',\n            Initialization: 'Null'\n        }\n    },\n    /**\n     * Lookup242: frame_system::LastRuntimeUpgradeInfo\n     **/\n    FrameSystemLastRuntimeUpgradeInfo: {\n        specVersion: 'Compact<u32>',\n        specName: 'Text'\n    },\n    /**\n     * Lookup245: frame_system::pallet::Call<T>\n     **/\n    FrameSystemCall: {\n        _enum: {\n            fill_block: {\n                ratio: 'Perbill',\n            },\n            remark: {\n                remark: 'Bytes',\n            },\n            set_heap_pages: {\n                pages: 'u64',\n            },\n            set_code: {\n                code: 'Bytes',\n            },\n            set_code_without_checks: {\n                code: 'Bytes',\n            },\n            set_storage: {\n                items: 'Vec<(Bytes,Bytes)>',\n            },\n            kill_storage: {\n                _alias: {\n                    keys_: 'keys',\n                },\n                keys_: 'Vec<Bytes>',\n            },\n            kill_prefix: {\n                prefix: 'Bytes',\n                subkeys: 'u32',\n            },\n            remark_with_event: {\n                remark: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup248: frame_system::limits::BlockWeights\n     **/\n    FrameSystemLimitsBlockWeights: {\n        baseBlock: 'u64',\n        maxBlock: 'u64',\n        perClass: 'FrameSupportWeightsPerDispatchClassWeightsPerClass'\n    },\n    /**\n     * Lookup249: frame_support::weights::PerDispatchClass<frame_system::limits::WeightsPerClass>\n     **/\n    FrameSupportWeightsPerDispatchClassWeightsPerClass: {\n        normal: 'FrameSystemLimitsWeightsPerClass',\n        operational: 'FrameSystemLimitsWeightsPerClass',\n        mandatory: 'FrameSystemLimitsWeightsPerClass'\n    },\n    /**\n     * Lookup250: frame_system::limits::WeightsPerClass\n     **/\n    FrameSystemLimitsWeightsPerClass: {\n        baseExtrinsic: 'u64',\n        maxExtrinsic: 'Option<u64>',\n        maxTotal: 'Option<u64>',\n        reserved: 'Option<u64>'\n    },\n    /**\n     * Lookup251: frame_system::limits::BlockLength\n     **/\n    FrameSystemLimitsBlockLength: {\n        max: 'FrameSupportWeightsPerDispatchClassU32'\n    },\n    /**\n     * Lookup252: frame_support::weights::PerDispatchClass<T>\n     **/\n    FrameSupportWeightsPerDispatchClassU32: {\n        normal: 'u32',\n        operational: 'u32',\n        mandatory: 'u32'\n    },\n    /**\n     * Lookup253: frame_support::weights::RuntimeDbWeight\n     **/\n    FrameSupportWeightsRuntimeDbWeight: {\n        read: 'u64',\n        write: 'u64'\n    },\n    /**\n     * Lookup254: sp_version::RuntimeVersion\n     **/\n    SpVersionRuntimeVersion: {\n        specName: 'Text',\n        implName: 'Text',\n        authoringVersion: 'u32',\n        specVersion: 'u32',\n        implVersion: 'u32',\n        apis: 'Vec<([u8;8],u32)>',\n        transactionVersion: 'u32',\n        stateVersion: 'u8'\n    },\n    /**\n     * Lookup260: frame_system::pallet::Error<T>\n     **/\n    FrameSystemError: {\n        _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']\n    },\n    /**\n     * Lookup261: pallet_utility::pallet::Call<T>\n     **/\n    PalletUtilityCall: {\n        _enum: {\n            batch: {\n                calls: 'Vec<Call>',\n            },\n            as_derivative: {\n                index: 'u16',\n                call: 'Call',\n            },\n            batch_all: {\n                calls: 'Vec<Call>',\n            },\n            dispatch_as: {\n                asOrigin: 'JoystreamNodeRuntimeOriginCaller',\n                call: 'Call',\n            },\n            force_batch: {\n                calls: 'Vec<Call>'\n            }\n        }\n    },\n    /**\n     * Lookup264: pallet_babe::pallet::Call<T>\n     **/\n    PalletBabeCall: {\n        _enum: {\n            report_equivocation: {\n                equivocationProof: 'SpConsensusSlotsEquivocationProof',\n                keyOwnerProof: 'SpSessionMembershipProof',\n            },\n            report_equivocation_unsigned: {\n                equivocationProof: 'SpConsensusSlotsEquivocationProof',\n                keyOwnerProof: 'SpSessionMembershipProof',\n            },\n            plan_config_change: {\n                config: 'SpConsensusBabeDigestsNextConfigDescriptor'\n            }\n        }\n    },\n    /**\n     * Lookup265: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>\n     **/\n    SpConsensusSlotsEquivocationProof: {\n        offender: 'SpConsensusBabeAppPublic',\n        slot: 'u64',\n        firstHeader: 'SpRuntimeHeader',\n        secondHeader: 'SpRuntimeHeader'\n    },\n    /**\n     * Lookup266: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>\n     **/\n    SpRuntimeHeader: {\n        parentHash: 'H256',\n        number: 'Compact<u32>',\n        stateRoot: 'H256',\n        extrinsicsRoot: 'H256',\n        digest: 'SpRuntimeDigest'\n    },\n    /**\n     * Lookup267: sp_runtime::traits::BlakeTwo256\n     **/\n    SpRuntimeBlakeTwo256: 'Null',\n    /**\n     * Lookup268: sp_consensus_babe::app::Public\n     **/\n    SpConsensusBabeAppPublic: 'SpCoreSr25519Public',\n    /**\n     * Lookup270: sp_session::MembershipProof\n     **/\n    SpSessionMembershipProof: {\n        session: 'u32',\n        trieNodes: 'Vec<Bytes>',\n        validatorCount: 'u32'\n    },\n    /**\n     * Lookup271: sp_consensus_babe::digests::NextConfigDescriptor\n     **/\n    SpConsensusBabeDigestsNextConfigDescriptor: {\n        _enum: {\n            __Unused0: 'Null',\n            V1: {\n                c: '(u64,u64)',\n                allowedSlots: 'SpConsensusBabeAllowedSlots'\n            }\n        }\n    },\n    /**\n     * Lookup272: sp_consensus_babe::AllowedSlots\n     **/\n    SpConsensusBabeAllowedSlots: {\n        _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n    },\n    /**\n     * Lookup273: pallet_timestamp::pallet::Call<T>\n     **/\n    PalletTimestampCall: {\n        _enum: {\n            set: {\n                now: 'Compact<u64>'\n            }\n        }\n    },\n    /**\n     * Lookup275: pallet_authorship::pallet::Call<T>\n     **/\n    PalletAuthorshipCall: {\n        _enum: {\n            set_uncles: {\n                newUncles: 'Vec<SpRuntimeHeader>'\n            }\n        }\n    },\n    /**\n     * Lookup277: pallet_balances::pallet::Call<T, I>\n     **/\n    PalletBalancesCall: {\n        _enum: {\n            transfer: {\n                dest: 'AccountId32',\n                value: 'Compact<u128>',\n            },\n            set_balance: {\n                who: 'AccountId32',\n                newFree: 'Compact<u128>',\n                newReserved: 'Compact<u128>',\n            },\n            force_transfer: {\n                source: 'AccountId32',\n                dest: 'AccountId32',\n                value: 'Compact<u128>',\n            },\n            transfer_keep_alive: {\n                dest: 'AccountId32',\n                value: 'Compact<u128>',\n            },\n            transfer_all: {\n                dest: 'AccountId32',\n                keepAlive: 'bool',\n            },\n            force_unreserve: {\n                who: 'AccountId32',\n                amount: 'u128'\n            }\n        }\n    },\n    /**\n     * Lookup278: pallet_election_provider_multi_phase::pallet::Call<T>\n     **/\n    PalletElectionProviderMultiPhaseCall: {\n        _enum: {\n            submit_unsigned: {\n                rawSolution: 'PalletElectionProviderMultiPhaseRawSolution',\n                witness: 'PalletElectionProviderMultiPhaseSolutionOrSnapshotSize',\n            },\n            set_minimum_untrusted_score: {\n                maybeNextScore: 'Option<SpNposElectionsElectionScore>',\n            },\n            set_emergency_election_result: {\n                supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',\n            },\n            submit: {\n                rawSolution: 'PalletElectionProviderMultiPhaseRawSolution',\n            },\n            governance_fallback: {\n                maybeMaxVoters: 'Option<u32>',\n                maybeMaxTargets: 'Option<u32>'\n            }\n        }\n    },\n    /**\n     * Lookup279: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>\n     **/\n    PalletElectionProviderMultiPhaseRawSolution: {\n        solution: 'JoystreamNodeRuntimeNposSolution16',\n        score: 'SpNposElectionsElectionScore',\n        round: 'u32'\n    },\n    /**\n     * Lookup280: joystream_node_runtime::NposSolution16\n     **/\n    JoystreamNodeRuntimeNposSolution16: {\n        votes1: 'Vec<(Compact<u32>,Compact<u16>)>',\n        votes2: 'Vec<(Compact<u32>,(Compact<u16>,Compact<PerU16>),Compact<u16>)>',\n        votes3: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);2],Compact<u16>)>',\n        votes4: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);3],Compact<u16>)>',\n        votes5: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);4],Compact<u16>)>',\n        votes6: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);5],Compact<u16>)>',\n        votes7: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);6],Compact<u16>)>',\n        votes8: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);7],Compact<u16>)>',\n        votes9: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);8],Compact<u16>)>',\n        votes10: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);9],Compact<u16>)>',\n        votes11: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);10],Compact<u16>)>',\n        votes12: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);11],Compact<u16>)>',\n        votes13: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);12],Compact<u16>)>',\n        votes14: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);13],Compact<u16>)>',\n        votes15: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);14],Compact<u16>)>',\n        votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'\n    },\n    /**\n     * Lookup331: sp_npos_elections::ElectionScore\n     **/\n    SpNposElectionsElectionScore: {\n        minimalStake: 'u128',\n        sumStake: 'u128',\n        sumStakeSquared: 'u128'\n    },\n    /**\n     * Lookup332: pallet_election_provider_multi_phase::SolutionOrSnapshotSize\n     **/\n    PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {\n        voters: 'Compact<u32>',\n        targets: 'Compact<u32>'\n    },\n    /**\n     * Lookup336: sp_npos_elections::Support<sp_core::crypto::AccountId32>\n     **/\n    SpNposElectionsSupport: {\n        total: 'u128',\n        voters: 'Vec<(AccountId32,u128)>'\n    },\n    /**\n     * Lookup338: pallet_staking::pallet::pallet::Call<T>\n     **/\n    PalletStakingPalletCall: {\n        _enum: {\n            bond: {\n                controller: 'AccountId32',\n                value: 'Compact<u128>',\n                payee: 'PalletStakingRewardDestination',\n            },\n            bond_extra: {\n                maxAdditional: 'Compact<u128>',\n            },\n            unbond: {\n                value: 'Compact<u128>',\n            },\n            withdraw_unbonded: {\n                numSlashingSpans: 'u32',\n            },\n            validate: {\n                prefs: 'PalletStakingValidatorPrefs',\n            },\n            nominate: {\n                targets: 'Vec<AccountId32>',\n            },\n            chill: 'Null',\n            set_payee: {\n                payee: 'PalletStakingRewardDestination',\n            },\n            set_controller: {\n                controller: 'AccountId32',\n            },\n            set_validator_count: {\n                _alias: {\n                    new_: 'new',\n                },\n                new_: 'Compact<u32>',\n            },\n            increase_validator_count: {\n                additional: 'Compact<u32>',\n            },\n            scale_validator_count: {\n                factor: 'Percent',\n            },\n            force_no_eras: 'Null',\n            force_new_era: 'Null',\n            set_invulnerables: {\n                invulnerables: 'Vec<AccountId32>',\n            },\n            force_unstake: {\n                stash: 'AccountId32',\n                numSlashingSpans: 'u32',\n            },\n            force_new_era_always: 'Null',\n            cancel_deferred_slash: {\n                era: 'u32',\n                slashIndices: 'Vec<u32>',\n            },\n            payout_stakers: {\n                validatorStash: 'AccountId32',\n                era: 'u32',\n            },\n            rebond: {\n                value: 'Compact<u128>',\n            },\n            set_history_depth: {\n                newHistoryDepth: 'Compact<u32>',\n                eraItemsDeleted: 'Compact<u32>',\n            },\n            reap_stash: {\n                stash: 'AccountId32',\n                numSlashingSpans: 'u32',\n            },\n            kick: {\n                who: 'Vec<AccountId32>',\n            },\n            set_staking_configs: {\n                minNominatorBond: 'PalletStakingPalletConfigOpU128',\n                minValidatorBond: 'PalletStakingPalletConfigOpU128',\n                maxNominatorCount: 'PalletStakingPalletConfigOpU32',\n                maxValidatorCount: 'PalletStakingPalletConfigOpU32',\n                chillThreshold: 'PalletStakingPalletConfigOpPercent',\n                minCommission: 'PalletStakingPalletConfigOpPerbill',\n            },\n            chill_other: {\n                controller: 'AccountId32',\n            },\n            force_apply_min_commission: {\n                validatorStash: 'AccountId32'\n            }\n        }\n    },\n    /**\n     * Lookup339: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>\n     **/\n    PalletStakingRewardDestination: {\n        _enum: {\n            Staked: 'Null',\n            Stash: 'Null',\n            Controller: 'Null',\n            Account: 'AccountId32',\n            None: 'Null'\n        }\n    },\n    /**\n     * Lookup343: pallet_staking::pallet::pallet::ConfigOp<T>\n     **/\n    PalletStakingPalletConfigOpU128: {\n        _enum: {\n            Noop: 'Null',\n            Set: 'u128',\n            Remove: 'Null'\n        }\n    },\n    /**\n     * Lookup344: pallet_staking::pallet::pallet::ConfigOp<T>\n     **/\n    PalletStakingPalletConfigOpU32: {\n        _enum: {\n            Noop: 'Null',\n            Set: 'u32',\n            Remove: 'Null'\n        }\n    },\n    /**\n     * Lookup345: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>\n     **/\n    PalletStakingPalletConfigOpPercent: {\n        _enum: {\n            Noop: 'Null',\n            Set: 'Percent',\n            Remove: 'Null'\n        }\n    },\n    /**\n     * Lookup346: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>\n     **/\n    PalletStakingPalletConfigOpPerbill: {\n        _enum: {\n            Noop: 'Null',\n            Set: 'Perbill',\n            Remove: 'Null'\n        }\n    },\n    /**\n     * Lookup347: pallet_session::pallet::Call<T>\n     **/\n    PalletSessionCall: {\n        _enum: {\n            set_keys: {\n                _alias: {\n                    keys_: 'keys',\n                },\n                keys_: 'JoystreamNodeRuntimeSessionKeys',\n                proof: 'Bytes',\n            },\n            purge_keys: 'Null'\n        }\n    },\n    /**\n     * Lookup348: joystream_node_runtime::SessionKeys\n     **/\n    JoystreamNodeRuntimeSessionKeys: {\n        grandpa: 'SpFinalityGrandpaAppPublic',\n        babe: 'SpConsensusBabeAppPublic',\n        imOnline: 'PalletImOnlineSr25519AppSr25519Public',\n        authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'\n    },\n    /**\n     * Lookup349: sp_authority_discovery::app::Public\n     **/\n    SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',\n    /**\n     * Lookup350: pallet_grandpa::pallet::Call<T>\n     **/\n    PalletGrandpaCall: {\n        _enum: {\n            report_equivocation: {\n                equivocationProof: 'SpFinalityGrandpaEquivocationProof',\n                keyOwnerProof: 'SpSessionMembershipProof',\n            },\n            report_equivocation_unsigned: {\n                equivocationProof: 'SpFinalityGrandpaEquivocationProof',\n                keyOwnerProof: 'SpSessionMembershipProof',\n            },\n            note_stalled: {\n                delay: 'u32',\n                bestFinalizedBlockNumber: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup351: sp_finality_grandpa::EquivocationProof<primitive_types::H256, N>\n     **/\n    SpFinalityGrandpaEquivocationProof: {\n        setId: 'u64',\n        equivocation: 'SpFinalityGrandpaEquivocation'\n    },\n    /**\n     * Lookup352: sp_finality_grandpa::Equivocation<primitive_types::H256, N>\n     **/\n    SpFinalityGrandpaEquivocation: {\n        _enum: {\n            Prevote: 'FinalityGrandpaEquivocationPrevote',\n            Precommit: 'FinalityGrandpaEquivocationPrecommit'\n        }\n    },\n    /**\n     * Lookup353: finality_grandpa::Equivocation<sp_finality_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_finality_grandpa::app::Signature>\n     **/\n    FinalityGrandpaEquivocationPrevote: {\n        roundNumber: 'u64',\n        identity: 'SpFinalityGrandpaAppPublic',\n        first: '(FinalityGrandpaPrevote,SpFinalityGrandpaAppSignature)',\n        second: '(FinalityGrandpaPrevote,SpFinalityGrandpaAppSignature)'\n    },\n    /**\n     * Lookup354: finality_grandpa::Prevote<primitive_types::H256, N>\n     **/\n    FinalityGrandpaPrevote: {\n        targetHash: 'H256',\n        targetNumber: 'u32'\n    },\n    /**\n     * Lookup355: sp_finality_grandpa::app::Signature\n     **/\n    SpFinalityGrandpaAppSignature: 'SpCoreEd25519Signature',\n    /**\n     * Lookup356: sp_core::ed25519::Signature\n     **/\n    SpCoreEd25519Signature: '[u8;64]',\n    /**\n     * Lookup359: finality_grandpa::Equivocation<sp_finality_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_finality_grandpa::app::Signature>\n     **/\n    FinalityGrandpaEquivocationPrecommit: {\n        roundNumber: 'u64',\n        identity: 'SpFinalityGrandpaAppPublic',\n        first: '(FinalityGrandpaPrecommit,SpFinalityGrandpaAppSignature)',\n        second: '(FinalityGrandpaPrecommit,SpFinalityGrandpaAppSignature)'\n    },\n    /**\n     * Lookup360: finality_grandpa::Precommit<primitive_types::H256, N>\n     **/\n    FinalityGrandpaPrecommit: {\n        targetHash: 'H256',\n        targetNumber: 'u32'\n    },\n    /**\n     * Lookup362: pallet_im_online::pallet::Call<T>\n     **/\n    PalletImOnlineCall: {\n        _enum: {\n            heartbeat: {\n                heartbeat: 'PalletImOnlineHeartbeat',\n                signature: 'PalletImOnlineSr25519AppSr25519Signature'\n            }\n        }\n    },\n    /**\n     * Lookup363: pallet_im_online::Heartbeat<BlockNumber>\n     **/\n    PalletImOnlineHeartbeat: {\n        blockNumber: 'u32',\n        networkState: 'SpCoreOffchainOpaqueNetworkState',\n        sessionIndex: 'u32',\n        authorityIndex: 'u32',\n        validatorsLen: 'u32'\n    },\n    /**\n     * Lookup364: sp_core::offchain::OpaqueNetworkState\n     **/\n    SpCoreOffchainOpaqueNetworkState: {\n        peerId: 'Bytes',\n        externalAddresses: 'Vec<Bytes>'\n    },\n    /**\n     * Lookup368: pallet_im_online::sr25519::app_sr25519::Signature\n     **/\n    PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',\n    /**\n     * Lookup369: sp_core::sr25519::Signature\n     **/\n    SpCoreSr25519Signature: '[u8;64]',\n    /**\n     * Lookup370: pallet_bags_list::pallet::Call<T, I>\n     **/\n    PalletBagsListCall: {\n        _enum: {\n            rebag: {\n                dislocated: 'AccountId32',\n            },\n            put_in_front_of: {\n                lighter: 'AccountId32'\n            }\n        }\n    },\n    /**\n     * Lookup371: pallet_vesting::pallet::Call<T>\n     **/\n    PalletVestingCall: {\n        _enum: {\n            vest: 'Null',\n            vest_other: {\n                target: 'AccountId32',\n            },\n            vested_transfer: {\n                target: 'AccountId32',\n                schedule: 'PalletVestingVestingInfo',\n            },\n            force_vested_transfer: {\n                source: 'AccountId32',\n                target: 'AccountId32',\n                schedule: 'PalletVestingVestingInfo',\n            },\n            merge_schedules: {\n                schedule1Index: 'u32',\n                schedule2Index: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup372: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>\n     **/\n    PalletVestingVestingInfo: {\n        locked: 'u128',\n        perBlock: 'u128',\n        startingBlock: 'u32'\n    },\n    /**\n     * Lookup373: pallet_multisig::pallet::Call<T>\n     **/\n    PalletMultisigCall: {\n        _enum: {\n            as_multi_threshold_1: {\n                otherSignatories: 'Vec<AccountId32>',\n                call: 'Call',\n            },\n            as_multi: {\n                threshold: 'u16',\n                otherSignatories: 'Vec<AccountId32>',\n                maybeTimepoint: 'Option<PalletMultisigTimepoint>',\n                call: 'WrapperKeepOpaque<Call>',\n                storeCall: 'bool',\n                maxWeight: 'u64',\n            },\n            approve_as_multi: {\n                threshold: 'u16',\n                otherSignatories: 'Vec<AccountId32>',\n                maybeTimepoint: 'Option<PalletMultisigTimepoint>',\n                callHash: '[u8;32]',\n                maxWeight: 'u64',\n            },\n            cancel_as_multi: {\n                threshold: 'u16',\n                otherSignatories: 'Vec<AccountId32>',\n                timepoint: 'PalletMultisigTimepoint',\n                callHash: '[u8;32]'\n            }\n        }\n    },\n    /**\n     * Lookup376: pallet_council::Call<T>\n     **/\n    PalletCouncilCall: {\n        _enum: {\n            announce_candidacy: {\n                membershipId: 'u64',\n                stakingAccountId: 'AccountId32',\n                rewardAccountId: 'AccountId32',\n                stake: 'u128',\n            },\n            release_candidacy_stake: {\n                membershipId: 'u64',\n            },\n            withdraw_candidacy: {\n                membershipId: 'u64',\n            },\n            set_candidacy_note: {\n                membershipId: 'u64',\n                note: 'Bytes',\n            },\n            set_budget: {\n                balance: 'u128',\n            },\n            plan_budget_refill: {\n                nextRefill: 'u32',\n            },\n            set_budget_increment: {\n                budgetIncrement: 'u128',\n            },\n            set_councilor_reward: {\n                councilorReward: 'u128',\n            },\n            funding_request: {\n                fundingRequests: 'Vec<PalletCommonFundingRequestParameters>',\n            },\n            fund_council_budget: {\n                memberId: 'u64',\n                amount: 'u128',\n                rationale: 'Bytes',\n            },\n            councilor_remark: {\n                councilorId: 'u64',\n                msg: 'Bytes',\n            },\n            candidate_remark: {\n                candidateId: 'u64',\n                msg: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup377: pallet_referendum::Call<T, I>\n     **/\n    PalletReferendumCall: {\n        _enum: {\n            vote: {\n                commitment: 'H256',\n                stake: 'u128',\n            },\n            reveal_vote: {\n                salt: 'Bytes',\n                voteOptionId: 'u64',\n            },\n            release_vote_stake: 'Null',\n            opt_out_of_voting: 'Null'\n        }\n    },\n    /**\n     * Lookup378: pallet_membership::Call<T>\n     **/\n    PalletMembershipCall: {\n        _enum: {\n            buy_membership: {\n                params: 'PalletMembershipBuyMembershipParameters',\n            },\n            update_profile: {\n                memberId: 'u64',\n                handle: 'Option<Bytes>',\n                metadata: 'Option<Bytes>',\n            },\n            update_accounts: {\n                memberId: 'u64',\n                newRootAccount: 'Option<AccountId32>',\n                newControllerAccount: 'Option<AccountId32>',\n            },\n            update_profile_verification: {\n                workerId: 'u64',\n                targetMemberId: 'u64',\n                isVerified: 'bool',\n            },\n            set_referral_cut: {\n                percentValue: 'u8',\n            },\n            transfer_invites: {\n                sourceMemberId: 'u64',\n                targetMemberId: 'u64',\n                numberOfInvites: 'u32',\n            },\n            invite_member: {\n                params: 'PalletMembershipInviteMembershipParameters',\n            },\n            gift_membership: {\n                params: 'PalletMembershipGiftMembershipParameters',\n            },\n            set_membership_price: {\n                newPrice: 'u128',\n            },\n            set_leader_invitation_quota: {\n                invitationQuota: 'u32',\n            },\n            set_initial_invitation_balance: {\n                newInitialBalance: 'u128',\n            },\n            set_initial_invitation_count: {\n                newInvitationCount: 'u32',\n            },\n            add_staking_account_candidate: {\n                memberId: 'u64',\n            },\n            remove_staking_account: {\n                memberId: 'u64',\n            },\n            confirm_staking_account: {\n                memberId: 'u64',\n                stakingAccountId: 'AccountId32',\n            },\n            member_remark: {\n                memberId: 'u64',\n                msg: 'Bytes',\n                payment: 'Option<(AccountId32,u128)>',\n            },\n            create_member: {\n                params: 'PalletMembershipCreateMemberParameters'\n            }\n        }\n    },\n    /**\n     * Lookup379: pallet_forum::Call<T>\n     **/\n    PalletForumCall: {\n        _enum: {\n            update_category_membership_of_moderator: {\n                moderatorId: 'u64',\n                categoryId: 'u64',\n                newValue: 'bool',\n            },\n            create_category: {\n                parentCategoryId: 'Option<u64>',\n                title: 'Bytes',\n                description: 'Bytes',\n            },\n            update_category_archival_status: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                newArchivalStatus: 'bool',\n            },\n            update_category_title: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                title: 'Bytes',\n            },\n            update_category_description: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                description: 'Bytes',\n            },\n            delete_category: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n            },\n            create_thread: {\n                forumUserId: 'u64',\n                categoryId: 'u64',\n                metadata: 'Bytes',\n                text: 'Bytes',\n            },\n            edit_thread_metadata: {\n                forumUserId: 'u64',\n                categoryId: 'u64',\n                threadId: 'u64',\n                newMetadata: 'Bytes',\n            },\n            delete_thread: {\n                forumUserId: 'u64',\n                categoryId: 'u64',\n                threadId: 'u64',\n                hide: 'bool',\n            },\n            move_thread_to_category: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                threadId: 'u64',\n                newCategoryId: 'u64',\n            },\n            moderate_thread: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                threadId: 'u64',\n                rationale: 'Bytes',\n            },\n            add_post: {\n                forumUserId: 'u64',\n                categoryId: 'u64',\n                threadId: 'u64',\n                text: 'Bytes',\n                editable: 'bool',\n            },\n            edit_post_text: {\n                forumUserId: 'u64',\n                categoryId: 'u64',\n                threadId: 'u64',\n                postId: 'u64',\n                newText: 'Bytes',\n            },\n            moderate_post: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                threadId: 'u64',\n                postId: 'u64',\n                rationale: 'Bytes',\n            },\n            delete_posts: {\n                forumUserId: 'u64',\n                posts: 'BTreeMap<PalletForumExtendedPostIdObject, bool>',\n                rationale: 'Bytes',\n            },\n            set_stickied_threads: {\n                actor: 'PalletForumPrivilegedActor',\n                categoryId: 'u64',\n                stickiedIds: 'BTreeSet<u64>'\n            }\n        }\n    },\n    /**\n     * Lookup380: pallet_constitution::Call<T>\n     **/\n    PalletConstitutionCall: {\n        _enum: {\n            amend_constitution: {\n                constitutionText: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup381: pallet_bounty::Call<T>\n     **/\n    PalletBountyCall: {\n        _enum: {\n            create_bounty: {\n                params: 'PalletBountyBountyParametersBTreeSet',\n                metadata: 'Bytes',\n            },\n            fund_bounty: {\n                funder: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n                amount: 'u128',\n            },\n            terminate_bounty: {\n                bountyId: 'u64',\n            },\n            switch_oracle: {\n                newOracle: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n            },\n            withdraw_funding: {\n                funder: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n            },\n            announce_work_entry: {\n                memberId: 'u64',\n                bountyId: 'u64',\n                stakingAccountId: 'AccountId32',\n                workDescription: 'Bytes',\n            },\n            submit_work: {\n                memberId: 'u64',\n                bountyId: 'u64',\n                entryId: 'u64',\n                workData: 'Bytes',\n            },\n            end_working_period: {\n                bountyId: 'u64',\n            },\n            submit_oracle_judgment: {\n                bountyId: 'u64',\n                judgment: 'BTreeMap<u64, PalletBountyOracleWorkEntryJudgment>',\n                rationale: 'Bytes',\n            },\n            withdraw_entrant_stake: {\n                memberId: 'u64',\n                bountyId: 'u64',\n                entryId: 'u64',\n            },\n            withdraw_oracle_reward: {\n                bountyId: 'u64',\n            },\n            contributor_remark: {\n                contributor: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n                msg: 'Bytes',\n            },\n            oracle_remark: {\n                oracle: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n                msg: 'Bytes',\n            },\n            entrant_remark: {\n                entrantId: 'u64',\n                bountyId: 'u64',\n                entryId: 'u64',\n                msg: 'Bytes',\n            },\n            creator_remark: {\n                creator: 'PalletBountyBountyActor',\n                bountyId: 'u64',\n                msg: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup383: pallet_content::Call<T>\n     **/\n    PalletContentCall: {\n        _enum: {\n            create_curator_group: {\n                isActive: 'bool',\n                permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>',\n            },\n            update_curator_group_permissions: {\n                curatorGroupId: 'u64',\n                permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>',\n            },\n            set_curator_group_status: {\n                curatorGroupId: 'u64',\n                isActive: 'bool',\n            },\n            add_curator_to_group: {\n                curatorGroupId: 'u64',\n                curatorId: 'u64',\n                permissions: 'BTreeSet<PalletContentIterableEnumsChannelActionPermission>',\n            },\n            remove_curator_from_group: {\n                curatorGroupId: 'u64',\n                curatorId: 'u64',\n            },\n            create_channel: {\n                channelOwner: 'PalletContentChannelOwner',\n                params: 'PalletContentChannelCreationParametersRecord',\n            },\n            update_channel: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                params: 'PalletContentChannelUpdateParametersRecord',\n            },\n            update_channel_privilege_level: {\n                channelId: 'u64',\n                newPrivilegeLevel: 'u8',\n            },\n            set_channel_paused_features_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                newPausedFeatures: 'BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature>',\n                rationale: 'Bytes',\n            },\n            delete_channel: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                channelBagWitness: 'PalletContentChannelBagWitness',\n                numObjectsToDelete: 'u64',\n            },\n            delete_channel_assets_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                assetsToRemove: 'BTreeSet<u64>',\n                storageBucketsNumWitness: 'u32',\n                rationale: 'Bytes',\n            },\n            delete_channel_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                channelBagWitness: 'PalletContentChannelBagWitness',\n                numObjectsToDelete: 'u64',\n                rationale: 'Bytes',\n            },\n            set_channel_visibility_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                isHidden: 'bool',\n                rationale: 'Bytes',\n            },\n            create_video: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                params: 'PalletContentVideoCreationParametersRecord',\n            },\n            update_video: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                params: 'PalletContentVideoUpdateParametersRecord',\n            },\n            delete_video: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                numObjectsToDelete: 'u64',\n                storageBucketsNumWitness: 'Option<u32>',\n            },\n            delete_video_assets_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                storageBucketsNumWitness: 'u32',\n                assetsToRemove: 'BTreeSet<u64>',\n                rationale: 'Bytes',\n            },\n            delete_video_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                storageBucketsNumWitness: 'Option<u32>',\n                numObjectsToDelete: 'u64',\n                rationale: 'Bytes',\n            },\n            set_video_visibility_as_moderator: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                isHidden: 'bool',\n                rationale: 'Bytes',\n            },\n            update_channel_payouts: {\n                params: 'PalletContentUpdateChannelPayoutsParametersRecord',\n                uploaderAccount: 'AccountId32',\n            },\n            claim_channel_reward: {\n                actor: 'PalletContentPermissionsContentActor',\n                proof: 'Vec<PalletCommonMerkleTreeProofElementRecord>',\n                item: 'PalletContentPullPaymentElement',\n            },\n            withdraw_from_channel_balance: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                amount: 'u128',\n            },\n            update_channel_state_bloat_bond: {\n                newChannelStateBloatBond: 'u128',\n            },\n            update_video_state_bloat_bond: {\n                newVideoStateBloatBond: 'u128',\n            },\n            claim_and_withdraw_channel_reward: {\n                actor: 'PalletContentPermissionsContentActor',\n                proof: 'Vec<PalletCommonMerkleTreeProofElementRecord>',\n                item: 'PalletContentPullPaymentElement',\n            },\n            issue_nft: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                params: 'PalletContentNftTypesNftIssuanceParametersRecord',\n            },\n            destroy_nft: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n            },\n            start_open_auction: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                auctionParams: 'PalletContentNftTypesOpenAuctionParamsRecord',\n            },\n            start_english_auction: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                auctionParams: 'PalletContentNftTypesEnglishAuctionParamsRecord',\n            },\n            cancel_english_auction: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n            },\n            cancel_open_auction: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n            },\n            cancel_offer: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n            },\n            cancel_buy_now: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n            },\n            update_buy_now_price: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                newPrice: 'u128',\n            },\n            make_open_auction_bid: {\n                participantId: 'u64',\n                videoId: 'u64',\n                bidAmount: 'u128',\n            },\n            make_english_auction_bid: {\n                participantId: 'u64',\n                videoId: 'u64',\n                bidAmount: 'u128',\n            },\n            cancel_open_auction_bid: {\n                participantId: 'u64',\n                videoId: 'u64',\n            },\n            settle_english_auction: {\n                videoId: 'u64',\n            },\n            pick_open_auction_winner: {\n                ownerId: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                winnerId: 'u64',\n                commit: 'u128',\n            },\n            offer_nft: {\n                videoId: 'u64',\n                ownerId: 'PalletContentPermissionsContentActor',\n                to: 'u64',\n                price: 'Option<u128>',\n            },\n            sling_nft_back: {\n                videoId: 'u64',\n                ownerId: 'PalletContentPermissionsContentActor',\n            },\n            accept_incoming_offer: {\n                videoId: 'u64',\n                witnessPrice: 'Option<u128>',\n            },\n            sell_nft: {\n                videoId: 'u64',\n                ownerId: 'PalletContentPermissionsContentActor',\n                price: 'u128',\n            },\n            buy_nft: {\n                videoId: 'u64',\n                participantId: 'u64',\n                witnessPrice: 'u128',\n            },\n            toggle_nft_limits: {\n                enabled: 'bool',\n            },\n            channel_owner_remark: {\n                channelId: 'u64',\n                msg: 'Bytes',\n            },\n            channel_agent_remark: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                msg: 'Bytes',\n            },\n            nft_owner_remark: {\n                actor: 'PalletContentPermissionsContentActor',\n                videoId: 'u64',\n                msg: 'Bytes',\n            },\n            initialize_channel_transfer: {\n                channelId: 'u64',\n                actor: 'PalletContentPermissionsContentActor',\n                transferParams: 'PalletContentInitTransferParameters',\n            },\n            cancel_channel_transfer: {\n                channelId: 'u64',\n                actor: 'PalletContentPermissionsContentActor',\n            },\n            accept_channel_transfer: {\n                channelId: 'u64',\n                commitmentParams: 'PalletContentTransferCommitmentParametersBTreeMap',\n            },\n            update_global_nft_limit: {\n                nftLimitPeriod: 'PalletContentNftLimitPeriod',\n                limit: 'u64',\n            },\n            update_channel_nft_limit: {\n                actor: 'PalletContentPermissionsContentActor',\n                nftLimitPeriod: 'PalletContentNftLimitPeriod',\n                channelId: 'u64',\n                limit: 'u64',\n            },\n            issue_creator_token: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                params: 'PalletProjectTokenTokenIssuanceParameters',\n            },\n            init_creator_token_sale: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                params: 'PalletProjectTokenTokenSaleParams',\n            },\n            update_upcoming_creator_token_sale: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                newStartBlock: 'Option<u32>',\n                newDuration: 'Option<u32>',\n            },\n            creator_token_issuer_transfer: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                outputs: 'PalletProjectTokenTransfersPaymentWithVesting',\n                metadata: 'Bytes',\n            },\n            make_creator_token_permissionless: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n            },\n            reduce_creator_token_patronage_rate_to: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                targetRate: 'Permill',\n            },\n            claim_creator_token_patronage_credit: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n            },\n            issue_revenue_split: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n                start: 'Option<u32>',\n                duration: 'u32',\n            },\n            finalize_revenue_split: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n            },\n            finalize_creator_token_sale: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64',\n            },\n            deissue_creator_token: {\n                actor: 'PalletContentPermissionsContentActor',\n                channelId: 'u64'\n            }\n        }\n    },\n    /**\n     * Lookup384: pallet_content::types::ChannelBagWitness\n     **/\n    PalletContentChannelBagWitness: {\n        storageBucketsNum: 'u32',\n        distributionBucketsNum: 'u32'\n    },\n    /**\n     * Lookup386: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>\n     **/\n    PalletCommonMerkleTreeProofElementRecord: {\n        _alias: {\n            hash_: 'hash'\n        },\n        hash_: 'H256',\n        side: 'PalletCommonMerkleTreeSide'\n    },\n    /**\n     * Lookup387: pallet_common::merkle_tree::Side\n     **/\n    PalletCommonMerkleTreeSide: {\n        _enum: ['Left', 'Right']\n    },\n    /**\n     * Lookup388: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>\n     **/\n    PalletContentPullPaymentElement: {\n        channelId: 'u64',\n        cumulativeRewardEarned: 'u128',\n        reason: 'H256'\n    },\n    /**\n     * Lookup389: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>\n     **/\n    PalletContentInitTransferParameters: {\n        newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        price: 'u128',\n        newOwner: 'PalletContentChannelOwner'\n    },\n    /**\n     * Lookup390: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>\n     **/\n    PalletProjectTokenTokenSaleParams: {\n        unitPrice: 'u128',\n        upperBoundQuantity: 'u128',\n        startsAt: 'Option<u32>',\n        duration: 'u32',\n        vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>',\n        capPerMember: 'Option<u128>',\n        metadata: 'Option<Bytes>'\n    },\n    /**\n     * Lookup391: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>\n     **/\n    PalletProjectTokenTransfersPaymentWithVesting: 'BTreeMap<u64, PalletProjectTokenPaymentWithVesting>',\n    /**\n     * Lookup395: pallet_storage::Call<T>\n     **/\n    PalletStorageCall: {\n        _enum: {\n            delete_storage_bucket: {\n                storageBucketId: 'u64',\n            },\n            update_uploading_blocked_status: {\n                newStatus: 'bool',\n            },\n            update_data_size_fee: {\n                newDataSizeFee: 'u128',\n            },\n            update_storage_buckets_per_bag_limit: {\n                newLimit: 'u32',\n            },\n            update_storage_buckets_voucher_max_limits: {\n                newObjectsSize: 'u64',\n                newObjectsNumber: 'u64',\n            },\n            update_data_object_state_bloat_bond: {\n                stateBloatBond: 'u128',\n            },\n            update_number_of_storage_buckets_in_dynamic_bag_creation_policy: {\n                dynamicBagType: 'PalletStorageDynamicBagType',\n                numberOfStorageBuckets: 'u32',\n            },\n            update_blacklist: {\n                removeHashes: 'BTreeSet<Bytes>',\n                addHashes: 'BTreeSet<Bytes>',\n            },\n            create_storage_bucket: {\n                inviteWorker: 'Option<u64>',\n                acceptingNewBags: 'bool',\n                sizeLimit: 'u64',\n                objectsLimit: 'u64',\n            },\n            update_storage_buckets_for_bag: {\n                bagId: 'PalletStorageBagIdType',\n                addBuckets: 'BTreeSet<u64>',\n                removeBuckets: 'BTreeSet<u64>',\n            },\n            cancel_storage_bucket_operator_invite: {\n                storageBucketId: 'u64',\n            },\n            invite_storage_bucket_operator: {\n                storageBucketId: 'u64',\n                operatorId: 'u64',\n            },\n            remove_storage_bucket_operator: {\n                storageBucketId: 'u64',\n            },\n            update_storage_bucket_status: {\n                storageBucketId: 'u64',\n                acceptingNewBags: 'bool',\n            },\n            set_storage_bucket_voucher_limits: {\n                storageBucketId: 'u64',\n                newObjectsSizeLimit: 'u64',\n                newObjectsNumberLimit: 'u64',\n            },\n            accept_storage_bucket_invitation: {\n                workerId: 'u64',\n                storageBucketId: 'u64',\n                transactorAccountId: 'AccountId32',\n            },\n            set_storage_operator_metadata: {\n                workerId: 'u64',\n                storageBucketId: 'u64',\n                metadata: 'Bytes',\n            },\n            accept_pending_data_objects: {\n                workerId: 'u64',\n                storageBucketId: 'u64',\n                bagId: 'PalletStorageBagIdType',\n                dataObjects: 'BTreeSet<u64>',\n            },\n            create_distribution_bucket_family: 'Null',\n            delete_distribution_bucket_family: {\n                familyId: 'u64',\n            },\n            create_distribution_bucket: {\n                familyId: 'u64',\n                acceptingNewBags: 'bool',\n            },\n            update_distribution_bucket_status: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                acceptingNewBags: 'bool',\n            },\n            delete_distribution_bucket: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n            },\n            update_distribution_buckets_for_bag: {\n                bagId: 'PalletStorageBagIdType',\n                familyId: 'u64',\n                addBucketsIndices: 'BTreeSet<u64>',\n                removeBucketsIndices: 'BTreeSet<u64>',\n            },\n            update_distribution_buckets_per_bag_limit: {\n                newLimit: 'u32',\n            },\n            update_distribution_bucket_mode: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                distributing: 'bool',\n            },\n            update_families_in_dynamic_bag_creation_policy: {\n                dynamicBagType: 'PalletStorageDynamicBagType',\n                families: 'BTreeMap<u64, u32>',\n            },\n            invite_distribution_bucket_operator: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                operatorWorkerId: 'u64',\n            },\n            cancel_distribution_bucket_operator_invite: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                operatorWorkerId: 'u64',\n            },\n            remove_distribution_bucket_operator: {\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                operatorWorkerId: 'u64',\n            },\n            set_distribution_bucket_family_metadata: {\n                familyId: 'u64',\n                metadata: 'Bytes',\n            },\n            accept_distribution_bucket_invitation: {\n                workerId: 'u64',\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n            },\n            set_distribution_operator_metadata: {\n                workerId: 'u64',\n                bucketId: 'PalletStorageDistributionBucketIdRecord',\n                metadata: 'Bytes',\n            },\n            storage_operator_remark: {\n                workerId: 'u64',\n                storageBucketId: 'u64',\n                msg: 'Bytes',\n            },\n            distribution_operator_remark: {\n                workerId: 'u64',\n                distributionBucketId: 'PalletStorageDistributionBucketIdRecord',\n                msg: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup396: pallet_project_token::Call<T>\n     **/\n    PalletProjectTokenCall: {\n        _enum: {\n            transfer: {\n                srcMemberId: 'u64',\n                tokenId: 'u64',\n                outputs: 'PalletProjectTokenTransfersPayment',\n                metadata: 'Bytes',\n            },\n            burn: {\n                tokenId: 'u64',\n                memberId: 'u64',\n                amount: 'u128',\n            },\n            dust_account: {\n                tokenId: 'u64',\n                memberId: 'u64',\n            },\n            join_whitelist: {\n                memberId: 'u64',\n                tokenId: 'u64',\n                proof: 'PalletProjectTokenMerkleProof',\n            },\n            purchase_tokens_on_sale: {\n                tokenId: 'u64',\n                memberId: 'u64',\n                amount: 'u128',\n            },\n            participate_in_split: {\n                tokenId: 'u64',\n                memberId: 'u64',\n                amount: 'u128',\n            },\n            exit_revenue_split: {\n                tokenId: 'u64',\n                memberId: 'u64'\n            }\n        }\n    },\n    /**\n     * Lookup397: pallet_project_token::types::Transfers<MemberId, pallet_project_token::types::Payment<Balance>>\n     **/\n    PalletProjectTokenTransfersPayment: 'BTreeMap<u64, PalletProjectTokenPayment>',\n    /**\n     * Lookup398: pallet_project_token::types::Payment<Balance>\n     **/\n    PalletProjectTokenPayment: {\n        amount: 'u128'\n    },\n    /**\n     * Lookup402: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>\n     **/\n    PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',\n    /**\n     * Lookup405: pallet_project_token::types::MerkleSide\n     **/\n    PalletProjectTokenMerkleSide: {\n        _enum: ['Right', 'Left']\n    },\n    /**\n     * Lookup406: pallet_proposals_engine::Call<T>\n     **/\n    PalletProposalsEngineCall: {\n        _enum: {\n            vote: {\n                voterId: 'u64',\n                proposalId: 'u32',\n                vote: 'PalletProposalsEngineVoteKind',\n                rationale: 'Bytes',\n            },\n            cancel_proposal: {\n                proposerId: 'u64',\n                proposalId: 'u32',\n            },\n            veto_proposal: {\n                proposalId: 'u32',\n            },\n            proposer_remark: {\n                proposalId: 'u32',\n                proposerId: 'u64',\n                msg: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup407: pallet_proposals_discussion::Call<T>\n     **/\n    PalletProposalsDiscussionCall: {\n        _enum: {\n            add_post: {\n                postAuthorId: 'u64',\n                threadId: 'u64',\n                text: 'Bytes',\n                editable: 'bool',\n            },\n            delete_post: {\n                deleterId: 'u64',\n                postId: 'u64',\n                threadId: 'u64',\n                hide: 'bool',\n            },\n            update_post: {\n                threadId: 'u64',\n                postId: 'u64',\n                text: 'Bytes',\n            },\n            change_thread_mode: {\n                memberId: 'u64',\n                threadId: 'u64',\n                mode: 'PalletProposalsDiscussionThreadModeBTreeSet'\n            }\n        }\n    },\n    /**\n     * Lookup408: pallet_proposals_codex::Call<T>\n     **/\n    PalletProposalsCodexCall: {\n        _enum: {\n            create_proposal: {\n                generalProposalParameters: 'PalletProposalsCodexGeneralProposalParams',\n                proposalDetails: 'PalletProposalsCodexProposalDetails'\n            }\n        }\n    },\n    /**\n     * Lookup409: pallet_working_group::Call<T, I>\n     **/\n    PalletWorkingGroupCall: {\n        _enum: {\n            add_opening: {\n                description: 'Bytes',\n                openingType: 'PalletWorkingGroupOpeningType',\n                stakePolicy: 'PalletWorkingGroupStakePolicy',\n                rewardPerBlock: 'Option<u128>',\n            },\n            apply_on_opening: {\n                p: 'PalletWorkingGroupApplyOnOpeningParams',\n            },\n            fill_opening: {\n                openingId: 'u64',\n                successfulApplicationIds: 'BTreeSet<u64>',\n            },\n            update_role_account: {\n                workerId: 'u64',\n                newRoleAccountId: 'AccountId32',\n            },\n            leave_role: {\n                workerId: 'u64',\n                rationale: 'Option<Bytes>',\n            },\n            terminate_role: {\n                workerId: 'u64',\n                penalty: 'Option<u128>',\n                rationale: 'Option<Bytes>',\n            },\n            slash_stake: {\n                workerId: 'u64',\n                penalty: 'u128',\n                rationale: 'Option<Bytes>',\n            },\n            decrease_stake: {\n                workerId: 'u64',\n                stakeBalanceDelta: 'u128',\n            },\n            increase_stake: {\n                workerId: 'u64',\n                stakeBalanceDelta: 'u128',\n            },\n            withdraw_application: {\n                applicationId: 'u64',\n            },\n            cancel_opening: {\n                openingId: 'u64',\n            },\n            set_budget: {\n                newBudget: 'u128',\n            },\n            update_reward_account: {\n                workerId: 'u64',\n                newRewardAccountId: 'AccountId32',\n            },\n            update_reward_amount: {\n                workerId: 'u64',\n                rewardPerBlock: 'Option<u128>',\n            },\n            set_status_text: {\n                statusText: 'Option<Bytes>',\n            },\n            spend_from_budget: {\n                accountId: 'AccountId32',\n                amount: 'u128',\n                rationale: 'Option<Bytes>',\n            },\n            fund_working_group_budget: {\n                memberId: 'u64',\n                amount: 'u128',\n                rationale: 'Bytes',\n            },\n            lead_remark: {\n                msg: 'Bytes',\n            },\n            worker_remark: {\n                workerId: 'u64',\n                msg: 'Bytes'\n            }\n        }\n    },\n    /**\n     * Lookup418: joystream_node_runtime::OriginCaller\n     **/\n    JoystreamNodeRuntimeOriginCaller: {\n        _enum: {\n            system: 'FrameSupportDispatchRawOrigin',\n            Void: 'SpCoreVoid'\n        }\n    },\n    /**\n     * Lookup419: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>\n     **/\n    FrameSupportDispatchRawOrigin: {\n        _enum: {\n            Root: 'Null',\n            Signed: 'AccountId32',\n            None: 'Null'\n        }\n    },\n    /**\n     * Lookup420: sp_core::Void\n     **/\n    SpCoreVoid: 'Null',\n    /**\n     * Lookup421: pallet_utility::pallet::Error<T>\n     **/\n    PalletUtilityError: {\n        _enum: ['TooManyCalls']\n    },\n    /**\n     * Lookup428: sp_consensus_babe::digests::PreDigest\n     **/\n    SpConsensusBabeDigestsPreDigest: {\n        _enum: {\n            __Unused0: 'Null',\n            Primary: 'SpConsensusBabeDigestsPrimaryPreDigest',\n            SecondaryPlain: 'SpConsensusBabeDigestsSecondaryPlainPreDigest',\n            SecondaryVRF: 'SpConsensusBabeDigestsSecondaryVRFPreDigest'\n        }\n    },\n    /**\n     * Lookup429: sp_consensus_babe::digests::PrimaryPreDigest\n     **/\n    SpConsensusBabeDigestsPrimaryPreDigest: {\n        authorityIndex: 'u32',\n        slot: 'u64',\n        vrfOutput: '[u8;32]',\n        vrfProof: '[u8;64]'\n    },\n    /**\n     * Lookup430: sp_consensus_babe::digests::SecondaryPlainPreDigest\n     **/\n    SpConsensusBabeDigestsSecondaryPlainPreDigest: {\n        authorityIndex: 'u32',\n        slot: 'u64'\n    },\n    /**\n     * Lookup431: sp_consensus_babe::digests::SecondaryVRFPreDigest\n     **/\n    SpConsensusBabeDigestsSecondaryVRFPreDigest: {\n        authorityIndex: 'u32',\n        slot: 'u64',\n        vrfOutput: '[u8;32]',\n        vrfProof: '[u8;64]'\n    },\n    /**\n     * Lookup433: sp_consensus_babe::BabeEpochConfiguration\n     **/\n    SpConsensusBabeBabeEpochConfiguration: {\n        c: '(u64,u64)',\n        allowedSlots: 'SpConsensusBabeAllowedSlots'\n    },\n    /**\n     * Lookup434: pallet_babe::pallet::Error<T>\n     **/\n    PalletBabeError: {\n        _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']\n    },\n    /**\n     * Lookup436: pallet_authorship::UncleEntryItem<BlockNumber, primitive_types::H256, sp_core::crypto::AccountId32>\n     **/\n    PalletAuthorshipUncleEntryItem: {\n        _enum: {\n            InclusionHeight: 'u32',\n            Uncle: '(H256,Option<AccountId32>)'\n        }\n    },\n    /**\n     * Lookup437: pallet_authorship::pallet::Error<T>\n     **/\n    PalletAuthorshipError: {\n        _enum: ['InvalidUncleParent', 'UnclesAlreadySet', 'TooManyUncles', 'GenesisUncle', 'TooHighUncle', 'UncleAlreadyIncluded', 'OldUncle']\n    },\n    /**\n     * Lookup439: pallet_balances::BalanceLock<Balance>\n     **/\n    PalletBalancesBalanceLock: {\n        id: '[u8;8]',\n        amount: 'u128',\n        reasons: 'PalletBalancesReasons'\n    },\n    /**\n     * Lookup440: pallet_balances::Reasons\n     **/\n    PalletBalancesReasons: {\n        _enum: ['Fee', 'Misc', 'All']\n    },\n    /**\n     * Lookup443: pallet_balances::ReserveData<ReserveIdentifier, Balance>\n     **/\n    PalletBalancesReserveData: {\n        id: '[u8;8]',\n        amount: 'u128'\n    },\n    /**\n     * Lookup445: pallet_balances::Releases\n     **/\n    PalletBalancesReleases: {\n        _enum: ['V1_0_0', 'V2_0_0']\n    },\n    /**\n     * Lookup446: pallet_balances::pallet::Error<T, I>\n     **/\n    PalletBalancesError: {\n        _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']\n    },\n    /**\n     * Lookup448: pallet_transaction_payment::Releases\n     **/\n    PalletTransactionPaymentReleases: {\n        _enum: ['V1Ancient', 'V2']\n    },\n    /**\n     * Lookup449: pallet_election_provider_multi_phase::Phase<Bn>\n     **/\n    PalletElectionProviderMultiPhasePhase: {\n        _enum: {\n            Off: 'Null',\n            Signed: 'Null',\n            Unsigned: '(bool,u32)',\n            Emergency: 'Null'\n        }\n    },\n    /**\n     * Lookup451: pallet_election_provider_multi_phase::ReadySolution<sp_core::crypto::AccountId32>\n     **/\n    PalletElectionProviderMultiPhaseReadySolution: {\n        supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',\n        score: 'SpNposElectionsElectionScore',\n        compute: 'PalletElectionProviderMultiPhaseElectionCompute'\n    },\n    /**\n     * Lookup452: pallet_election_provider_multi_phase::RoundSnapshot<T>\n     **/\n    PalletElectionProviderMultiPhaseRoundSnapshot: {\n        voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',\n        targets: 'Vec<AccountId32>'\n    },\n    /**\n     * Lookup460: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>\n     **/\n    PalletElectionProviderMultiPhaseSignedSignedSubmission: {\n        who: 'AccountId32',\n        deposit: 'u128',\n        rawSolution: 'PalletElectionProviderMultiPhaseRawSolution',\n        callFee: 'u128'\n    },\n    /**\n     * Lookup461: pallet_election_provider_multi_phase::pallet::Error<T>\n     **/\n    PalletElectionProviderMultiPhaseError: {\n        _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed']\n    },\n    /**\n     * Lookup462: pallet_staking::StakingLedger<T>\n     **/\n    PalletStakingStakingLedger: {\n        stash: 'AccountId32',\n        total: 'Compact<u128>',\n        active: 'Compact<u128>',\n        unlocking: 'Vec<PalletStakingUnlockChunk>',\n        claimedRewards: 'Vec<u32>'\n    },\n    /**\n     * Lookup464: pallet_staking::UnlockChunk<Balance>\n     **/\n    PalletStakingUnlockChunk: {\n        value: 'Compact<u128>',\n        era: 'Compact<u32>'\n    },\n    /**\n     * Lookup466: pallet_staking::Nominations<T>\n     **/\n    PalletStakingNominations: {\n        targets: 'Vec<AccountId32>',\n        submittedIn: 'u32',\n        suppressed: 'bool'\n    },\n    /**\n     * Lookup467: pallet_staking::ActiveEraInfo\n     **/\n    PalletStakingActiveEraInfo: {\n        index: 'u32',\n        start: 'Option<u64>'\n    },\n    /**\n     * Lookup469: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>\n     **/\n    PalletStakingEraRewardPoints: {\n        total: 'u32',\n        individual: 'BTreeMap<AccountId32, u32>'\n    },\n    /**\n     * Lookup473: pallet_staking::Forcing\n     **/\n    PalletStakingForcing: {\n        _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    /**\n     * Lookup475: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>\n     **/\n    PalletStakingUnappliedSlash: {\n        validator: 'AccountId32',\n        own: 'u128',\n        others: 'Vec<(AccountId32,u128)>',\n        reporters: 'Vec<AccountId32>',\n        payout: 'u128'\n    },\n    /**\n     * Lookup477: pallet_staking::slashing::SlashingSpans\n     **/\n    PalletStakingSlashingSlashingSpans: {\n        spanIndex: 'u32',\n        lastStart: 'u32',\n        lastNonzeroSlash: 'u32',\n        prior: 'Vec<u32>'\n    },\n    /**\n     * Lookup478: pallet_staking::slashing::SpanRecord<Balance>\n     **/\n    PalletStakingSlashingSpanRecord: {\n        slashed: 'u128',\n        paidOut: 'u128'\n    },\n    /**\n     * Lookup481: pallet_staking::Releases\n     **/\n    PalletStakingReleases: {\n        _enum: ['V1_0_0Ancient', 'V2_0_0', 'V3_0_0', 'V4_0_0', 'V5_0_0', 'V6_0_0', 'V7_0_0', 'V8_0_0', 'V9_0_0']\n    },\n    /**\n     * Lookup482: pallet_staking::pallet::pallet::Error<T>\n     **/\n    PalletStakingPalletError: {\n        _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BondingRestricted']\n    },\n    /**\n     * Lookup486: sp_core::crypto::KeyTypeId\n     **/\n    SpCoreCryptoKeyTypeId: '[u8;4]',\n    /**\n     * Lookup487: pallet_session::pallet::Error<T>\n     **/\n    PalletSessionError: {\n        _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']\n    },\n    /**\n     * Lookup489: pallet_grandpa::StoredState<N>\n     **/\n    PalletGrandpaStoredState: {\n        _enum: {\n            Live: 'Null',\n            PendingPause: {\n                scheduledAt: 'u32',\n                delay: 'u32',\n            },\n            Paused: 'Null',\n            PendingResume: {\n                scheduledAt: 'u32',\n                delay: 'u32'\n            }\n        }\n    },\n    /**\n     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>\n     **/\n    PalletGrandpaStoredPendingChange: {\n        scheduledAt: 'u32',\n        delay: 'u32',\n        nextAuthorities: 'Vec<(SpFinalityGrandpaAppPublic,u64)>',\n        forced: 'Option<u32>'\n    },\n    /**\n     * Lookup492: pallet_grandpa::pallet::Error<T>\n     **/\n    PalletGrandpaError: {\n        _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']\n    },\n    /**\n     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>\n     **/\n    PalletImOnlineBoundedOpaqueNetworkState: {\n        peerId: 'Bytes',\n        externalAddresses: 'Vec<Bytes>'\n    },\n    /**\n     * Lookup502: pallet_im_online::pallet::Error<T>\n     **/\n    PalletImOnlineError: {\n        _enum: ['InvalidKey', 'DuplicatedHeartbeat']\n    },\n    /**\n     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>\n     **/\n    SpStakingOffenceOffenceDetails: {\n        offender: '(AccountId32,PalletStakingExposure)',\n        reporters: 'Vec<AccountId32>'\n    },\n    /**\n     * Lookup506: pallet_bags_list::list::Node<T, I>\n     **/\n    PalletBagsListListNode: {\n        id: 'AccountId32',\n        prev: 'Option<AccountId32>',\n        next: 'Option<AccountId32>',\n        bagUpper: 'u64',\n        score: 'u64'\n    },\n    /**\n     * Lookup507: pallet_bags_list::list::Bag<T, I>\n     **/\n    PalletBagsListListBag: {\n        head: 'Option<AccountId32>',\n        tail: 'Option<AccountId32>'\n    },\n    /**\n     * Lookup508: pallet_bags_list::pallet::Error<T, I>\n     **/\n    PalletBagsListError: {\n        _enum: {\n            List: 'PalletBagsListListListError'\n        }\n    },\n    /**\n     * Lookup509: pallet_bags_list::list::ListError\n     **/\n    PalletBagsListListListError: {\n        _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']\n    },\n    /**\n     * Lookup512: pallet_vesting::Releases\n     **/\n    PalletVestingReleases: {\n        _enum: ['V0', 'V1']\n    },\n    /**\n     * Lookup513: pallet_vesting::pallet::Error<T>\n     **/\n    PalletVestingError: {\n        _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']\n    },\n    /**\n     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32>\n     **/\n    PalletMultisigMultisig: {\n        when: 'PalletMultisigTimepoint',\n        deposit: 'u128',\n        depositor: 'AccountId32',\n        approvals: 'Vec<AccountId32>'\n    },\n    /**\n     * Lookup517: pallet_multisig::pallet::Error<T>\n     **/\n    PalletMultisigError: {\n        _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']\n    },\n    /**\n     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>\n     **/\n    PalletCouncilCouncilStageUpdate: {\n        stage: 'PalletCouncilCouncilStage',\n        changedAt: 'u32'\n    },\n    /**\n     * Lookup519: pallet_council::CouncilStage<BlockNumber>\n     **/\n    PalletCouncilCouncilStage: {\n        _enum: {\n            Announcing: 'PalletCouncilCouncilStageAnnouncing',\n            Election: 'PalletCouncilCouncilStageElection',\n            Idle: 'PalletCouncilCouncilStageIdle'\n        }\n    },\n    /**\n     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>\n     **/\n    PalletCouncilCouncilStageAnnouncing: {\n        candidatesCount: 'u32',\n        endsAt: 'u32'\n    },\n    /**\n     * Lookup521: pallet_council::CouncilStageElection\n     **/\n    PalletCouncilCouncilStageElection: {\n        candidatesCount: 'u32'\n    },\n    /**\n     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>\n     **/\n    PalletCouncilCouncilStageIdle: {\n        endsAt: 'u32'\n    },\n    /**\n     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>\n     **/\n    PalletCouncilCouncilMember: {\n        stakingAccountId: 'AccountId32',\n        rewardAccountId: 'AccountId32',\n        membershipId: 'u64',\n        stake: 'u128',\n        lastPaymentBlock: 'u32',\n        unpaidReward: 'u128'\n    },\n    /**\n     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>\n     **/\n    PalletCouncilCandidate: {\n        stakingAccountId: 'AccountId32',\n        rewardAccountId: 'AccountId32',\n        cycleId: 'u64',\n        stake: 'u128',\n        votePower: 'u128',\n        noteHash: 'Option<H256>'\n    },\n    /**\n     * Lookup527: pallet_council::Error<T>\n     **/\n    PalletCouncilError: {\n        _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']\n    },\n    /**\n     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>\n     **/\n    PalletReferendumReferendumStage: {\n        _enum: {\n            Inactive: 'Null',\n            Voting: 'PalletReferendumReferendumStageVoting',\n            Revealing: 'PalletReferendumReferendumStageRevealing'\n        }\n    },\n    /**\n     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>\n     **/\n    PalletReferendumReferendumStageVoting: {\n        started: 'u32',\n        winningTargetCount: 'u32',\n        currentCycleId: 'u64',\n        endsAt: 'u32'\n    },\n    /**\n     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, frame_support::storage::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>\n     **/\n    PalletReferendumReferendumStageRevealing: {\n        started: 'u32',\n        winningTargetCount: 'u32',\n        intermediateWinners: 'Vec<PalletReferendumOptionResult>',\n        currentCycleId: 'u64',\n        endsAt: 'u32'\n    },\n    /**\n     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>\n     **/\n    PalletReferendumCastVote: {\n        commitment: 'H256',\n        cycleId: 'u64',\n        stake: 'u128',\n        voteFor: 'Option<u64>'\n    },\n    /**\n     * Lookup533: pallet_referendum::Error<T, I>\n     **/\n    PalletReferendumError: {\n        _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']\n    },\n    /**\n     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>\n     **/\n    PalletMembershipMembershipObject: {\n        handleHash: 'H256',\n        rootAccount: 'AccountId32',\n        controllerAccount: 'AccountId32',\n        verified: 'bool',\n        invites: 'u32'\n    },\n    /**\n     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>\n     **/\n    PalletMembershipStakingAccountMemberBinding: {\n        memberId: 'u64',\n        confirmed: 'bool'\n    },\n    /**\n     * Lookup536: pallet_membership::Error<T>\n     **/\n    PalletMembershipError: {\n        _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']\n    },\n    /**\n     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletForumCategory: {\n        titleHash: 'H256',\n        descriptionHash: 'H256',\n        archived: 'bool',\n        numDirectSubcategories: 'u32',\n        numDirectThreads: 'u32',\n        numDirectModerators: 'u32',\n        parentCategoryId: 'Option<u64>',\n        stickyThreadIds: 'BTreeSet<u64>'\n    },\n    /**\n     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletForumThread: {\n        categoryId: 'u64',\n        authorId: 'u64',\n        cleanupPayOff: 'PalletCommonBloatBondRepayableBloatBond',\n        numberOfEditablePosts: 'u64'\n    },\n    /**\n     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletForumPost: {\n        threadId: 'u64',\n        textHash: 'H256',\n        authorId: 'u64',\n        cleanupPayOff: 'PalletCommonBloatBondRepayableBloatBond',\n        lastEdited: 'u32'\n    },\n    /**\n     * Lookup541: pallet_forum::Error<T>\n     **/\n    PalletForumError: {\n        _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']\n    },\n    /**\n     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>\n     **/\n    PalletConstitutionConstitutionInfo: {\n        textHash: 'H256'\n    },\n    /**\n     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletBountyBountyRecord: {\n        creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',\n        totalFunding: 'u128',\n        milestone: 'PalletBountyBountyMilestone',\n        activeWorkEntryCount: 'u32',\n        hasUnpaidOracleReward: 'bool'\n    },\n    /**\n     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletBountyBountyParametersBoundedBTreeSet: {\n        oracle: 'PalletBountyBountyActor',\n        contractType: 'PalletBountyAssuranceContractTypeBoundedBTreeSet',\n        creator: 'PalletBountyBountyActor',\n        cherry: 'u128',\n        oracleReward: 'u128',\n        entrantStake: 'u128',\n        fundingType: 'PalletBountyFundingType'\n    },\n    /**\n     * Lookup546: pallet_bounty::AssuranceContractType<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletBountyAssuranceContractTypeBoundedBTreeSet: {\n        _enum: {\n            Open: 'Null',\n            Closed: 'BTreeSet<u64>'\n        }\n    },\n    /**\n     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>\n     **/\n    PalletBountyBountyMilestone: {\n        _enum: {\n            Created: {\n                createdAt: 'u32',\n                hasContributions: 'bool',\n            },\n            BountyMaxFundingReached: 'Null',\n            WorkSubmitted: 'Null',\n            Terminated: 'Null',\n            JudgmentSubmitted: {\n                successfulBounty: 'bool'\n            }\n        }\n    },\n    /**\n     * Lookup549: pallet_bounty::Contribution<T>\n     **/\n    PalletBountyContribution: {\n        amount: 'u128',\n        funderStateBloatBondAmount: 'u128'\n    },\n    /**\n     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>\n     **/\n    PalletBountyEntryRecord: {\n        memberId: 'u64',\n        stakingAccountId: 'AccountId32',\n        submittedAt: 'u32',\n        workSubmitted: 'bool'\n    },\n    /**\n     * Lookup551: pallet_bounty::Error<T>\n     **/\n    PalletBountyError: {\n        _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']\n    },\n    /**\n     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletContentVideoRecord: {\n        inChannel: 'u64',\n        nftStatus: 'Option<PalletContentNftTypesOwnedNft>',\n        dataObjects: 'BTreeSet<u64>',\n        videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'\n    },\n    /**\n     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>\n     **/\n    PalletContentNftTypesOwnedNft: {\n        owner: 'PalletContentNftTypesNftOwner',\n        transactionalStatus: 'PalletContentNftTypesTransactionalStatusRecord',\n        creatorRoyalty: 'Option<Perbill>',\n        openAuctionsNonce: 'u64'\n    },\n    /**\n     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>>\n     **/\n    PalletContentNftTypesTransactionalStatusRecord: {\n        _enum: {\n            Idle: 'Null',\n            InitiatedOfferToMember: '(u64,Option<u128>)',\n            EnglishAuction: 'PalletContentNftTypesEnglishAuctionRecord',\n            OpenAuction: 'PalletContentNftTypesOpenAuctionRecord',\n            BuyNow: 'u128'\n        }\n    },\n    /**\n     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletContentNftTypesEnglishAuctionRecord: {\n        startingPrice: 'u128',\n        buyNowPrice: 'Option<u128>',\n        whitelist: 'BTreeSet<u64>',\n        end: 'u32',\n        start: 'u32',\n        extensionPeriod: 'u32',\n        minBidStep: 'u128',\n        topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'\n    },\n    /**\n     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>\n     **/\n    PalletContentNftTypesEnglishAuctionBid: {\n        amount: 'u128',\n        bidderId: 'u64'\n    },\n    /**\n     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletContentNftTypesOpenAuctionRecord: {\n        startingPrice: 'u128',\n        buyNowPrice: 'Option<u128>',\n        whitelist: 'BTreeSet<u64>',\n        bidLockDuration: 'u32',\n        auctionId: 'u64',\n        start: 'u32'\n    },\n    /**\n     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>\n     **/\n    PalletContentNftTypesNftOwner: {\n        _enum: {\n            ChannelOwner: 'Null',\n            Member: 'u64'\n        }\n    },\n    /**\n     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>\n     **/\n    PalletContentPermissionsCuratorGroupCuratorGroupRecord: {\n        curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',\n        active: 'bool',\n        permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'\n    },\n    /**\n     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>\n     **/\n    PalletContentNftTypesOpenAuctionBidRecord: {\n        amount: 'u128',\n        madeAtBlock: 'u32',\n        auctionId: 'u64'\n    },\n    /**\n     * Lookup572: pallet_content::errors::Error<T>\n     **/\n    PalletContentErrorsError: {\n        _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales']\n    },\n    /**\n     * Lookup573: pallet_storage::BagRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>\n     **/\n    PalletStorageBagRecord: {\n        storedBy: 'BTreeSet<u64>',\n        distributedBy: 'BTreeSet<PalletStorageDistributionBucketIdRecord>',\n        objectsTotalSize: 'u64',\n        objectsNumber: 'u64'\n    },\n    /**\n     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>\n     **/\n    PalletStorageStorageBucketRecord: {\n        operatorStatus: 'PalletStorageStorageBucketOperatorStatus',\n        acceptingNewBags: 'bool',\n        voucher: 'PalletStorageVoucher',\n        assignedBags: 'u64'\n    },\n    /**\n     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>\n     **/\n    PalletStorageStorageBucketOperatorStatus: {\n        _enum: {\n            Missing: 'Null',\n            InvitedStorageWorker: 'u64',\n            StorageWorker: '(u64,AccountId32)'\n        }\n    },\n    /**\n     * Lookup579: pallet_storage::DynamicBagCreationPolicy<frame_support::storage::bounded_btree_map::BoundedBTreeMap<K, V, S>>\n     **/\n    PalletStorageDynamicBagCreationPolicy: {\n        numberOfStorageBuckets: 'u32',\n        families: 'BTreeMap<u64, u32>'\n    },\n    /**\n     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletStorageDataObject: {\n        _alias: {\n            size_: 'size'\n        },\n        accepted: 'bool',\n        stateBloatBond: 'PalletCommonBloatBondRepayableBloatBond',\n        size_: 'u64',\n        ipfsContentId: 'Bytes'\n    },\n    /**\n     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>\n     **/\n    PalletStorageDistributionBucketFamilyRecord: {\n        nextDistributionBucketIndex: 'u64'\n    },\n    /**\n     * Lookup584: pallet_storage::DistributionBucketRecord<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletStorageDistributionBucketRecord: {\n        acceptingNewBags: 'bool',\n        distributing: 'bool',\n        pendingInvitations: 'BTreeSet<u64>',\n        operators: 'BTreeSet<u64>',\n        assignedBags: 'u64'\n    },\n    /**\n     * Lookup587: pallet_storage::Error<T>\n     **/\n    PalletStorageError: {\n        _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']\n    },\n    /**\n     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, frame_support::storage::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>\n     **/\n    PalletProjectTokenAccountData: {\n        vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',\n        amount: 'u128',\n        splitStakingStatus: 'Option<PalletProjectTokenStakingStatus>',\n        bloatBond: 'PalletCommonBloatBondRepayableBloatBond',\n        nextVestingTransferId: 'u64',\n        lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'\n    },\n    /**\n     * Lookup589: pallet_project_token::types::StakingStatus<Balance>\n     **/\n    PalletProjectTokenStakingStatus: {\n        splitId: 'u32',\n        amount: 'u128'\n    },\n    /**\n     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>\n     **/\n    PalletProjectTokenVestingSchedule: {\n        linearVestingStartBlock: 'u32',\n        linearVestingDuration: 'u32',\n        cliffAmount: 'u128',\n        postCliffTotalAmount: 'u128',\n        burnedAmount: 'u128'\n    },\n    /**\n     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>\n     **/\n    PalletProjectTokenTokenData: {\n        totalSupply: 'u128',\n        tokensIssued: 'u128',\n        nextSaleId: 'u32',\n        sale: 'Option<PalletProjectTokenTokenSale>',\n        transferPolicy: 'PalletProjectTokenTransferPolicy',\n        symbol: 'H256',\n        patronageInfo: 'PalletProjectTokenPatronageData',\n        accountsNumber: 'u64',\n        revenueSplitRate: 'Permill',\n        revenueSplit: 'PalletProjectTokenRevenueSplitState',\n        nextRevenueSplitId: 'u32'\n    },\n    /**\n     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>\n     **/\n    PalletProjectTokenRevenueSplitState: {\n        _enum: {\n            Inactive: 'Null',\n            Active: 'PalletProjectTokenRevenueSplitInfo'\n        }\n    },\n    /**\n     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>\n     **/\n    PalletProjectTokenRevenueSplitInfo: {\n        allocation: 'u128',\n        timeline: 'PalletProjectTokenTimeline',\n        dividendsClaimed: 'u128'\n    },\n    /**\n     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>\n     **/\n    PalletProjectTokenTimeline: {\n        start: 'u32',\n        duration: 'u32'\n    },\n    /**\n     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>\n     **/\n    PalletProjectTokenPatronageData: {\n        rate: 'Perquintill',\n        unclaimedPatronageTallyAmount: 'u128',\n        lastUnclaimedPatronageTallyBlock: 'u32'\n    },\n    /**\n     * Lookup605: pallet_project_token::errors::Error<T>\n     **/\n    PalletProjectTokenErrorsError: {\n        _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TargetPatronageRateIsHigherThanCurrentRate', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount']\n    },\n    /**\n     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>\n     **/\n    PalletProposalsEngineProposal: {\n        parameters: 'PalletProposalsEngineProposalParameters',\n        proposerId: 'u64',\n        activatedAt: 'u32',\n        status: 'PalletProposalsEngineProposalStatusesProposalStatus',\n        votingResults: 'PalletProposalsEngineVotingResults',\n        exactExecutionBlock: 'Option<u32>',\n        nrOfCouncilConfirmations: 'u32',\n        stakingAccountId: 'Option<AccountId32>'\n    },\n    /**\n     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>\n     **/\n    PalletProposalsEngineProposalParameters: {\n        votingPeriod: 'u32',\n        gracePeriod: 'u32',\n        approvalQuorumPercentage: 'u32',\n        approvalThresholdPercentage: 'u32',\n        slashingQuorumPercentage: 'u32',\n        slashingThresholdPercentage: 'u32',\n        requiredStake: 'Option<u128>',\n        constitutionality: 'u32'\n    },\n    /**\n     * Lookup608: pallet_proposals_engine::types::VotingResults\n     **/\n    PalletProposalsEngineVotingResults: {\n        abstentions: 'u32',\n        approvals: 'u32',\n        rejections: 'u32',\n        slashes: 'u32'\n    },\n    /**\n     * Lookup611: pallet_proposals_engine::Error<T>\n     **/\n    PalletProposalsEngineError: {\n        _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']\n    },\n    /**\n     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletProposalsDiscussionDiscussionThread: {\n        activatedAt: 'u32',\n        authorId: 'u64',\n        mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'\n    },\n    /**\n     * Lookup614: pallet_proposals_discussion::types::ThreadMode<frame_support::storage::bounded_btree_set::BoundedBTreeSet<T, S>>\n     **/\n    PalletProposalsDiscussionThreadModeBoundedBTreeSet: {\n        _enum: {\n            Open: 'Null',\n            Closed: 'BTreeSet<u64>'\n        }\n    },\n    /**\n     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>\n     **/\n    PalletProposalsDiscussionDiscussionPost: {\n        authorId: 'u64',\n        cleanupPayOff: 'PalletCommonBloatBondRepayableBloatBond',\n        lastEdited: 'u32'\n    },\n    /**\n     * Lookup616: pallet_proposals_discussion::Error<T>\n     **/\n    PalletProposalsDiscussionError: {\n        _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']\n    },\n    /**\n     * Lookup617: pallet_proposals_codex::Error<T>\n     **/\n    PalletProposalsCodexError: {\n        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']\n    },\n    /**\n     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>\n     **/\n    PalletWorkingGroupOpening: {\n        openingType: 'PalletWorkingGroupOpeningType',\n        created: 'u32',\n        descriptionHash: 'H256',\n        stakePolicy: 'PalletWorkingGroupStakePolicy',\n        rewardPerBlock: 'Option<u128>',\n        creationStake: 'u128'\n    },\n    /**\n     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>\n     **/\n    PalletWorkingGroupJobApplication: {\n        roleAccountId: 'AccountId32',\n        rewardAccountId: 'AccountId32',\n        stakingAccountId: 'AccountId32',\n        memberId: 'u64',\n        descriptionHash: 'H256',\n        openingId: 'u64'\n    },\n    /**\n     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>\n     **/\n    PalletWorkingGroupGroupWorker: {\n        memberId: 'u64',\n        roleAccountId: 'AccountId32',\n        stakingAccountId: 'AccountId32',\n        rewardAccountId: 'AccountId32',\n        startedLeavingAt: 'Option<u32>',\n        jobUnstakingPeriod: 'u32',\n        rewardPerBlock: 'Option<u128>',\n        missedReward: 'Option<u128>',\n        createdAt: 'u32'\n    },\n    /**\n     * Lookup621: pallet_working_group::errors::Error<T, I>\n     **/\n    PalletWorkingGroupErrorsError: {\n        _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']\n    },\n    /**\n     * Lookup631: sp_runtime::MultiSignature\n     **/\n    SpRuntimeMultiSignature: {\n        _enum: {\n            Ed25519: 'SpCoreEd25519Signature',\n            Sr25519: 'SpCoreSr25519Signature',\n            Ecdsa: 'SpCoreEcdsaSignature'\n        }\n    },\n    /**\n     * Lookup632: sp_core::ecdsa::Signature\n     **/\n    SpCoreEcdsaSignature: '[u8;65]',\n    /**\n     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>\n     **/\n    FrameSystemExtensionsCheckNonZeroSender: 'Null',\n    /**\n     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>\n     **/\n    FrameSystemExtensionsCheckSpecVersion: 'Null',\n    /**\n     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>\n     **/\n    FrameSystemExtensionsCheckTxVersion: 'Null',\n    /**\n     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>\n     **/\n    FrameSystemExtensionsCheckGenesis: 'Null',\n    /**\n     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>\n     **/\n    FrameSystemExtensionsCheckNonce: 'Compact<u32>',\n    /**\n     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>\n     **/\n    FrameSystemExtensionsCheckWeight: 'Null',\n    /**\n     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>\n     **/\n    PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',\n    /**\n     * Lookup644: joystream_node_runtime::Runtime\n     **/\n    JoystreamNodeRuntimeRuntime: 'Null'\n};\n","import './augment/types-lookup';\nimport './augment/registry';\nimport './augment/augment-api';\nimport { TypeRegistry, } from '@polkadot/types';\nimport defs from './augment/lookup';\nexport const registry = new TypeRegistry();\nregistry.register(defs);\nexport function createType(typeName, value) {\n    return registry.createType(typeName, value);\n}\nexport function keysOf(typeName) {\n    return registry.createType(typeName).defKeys;\n}\nexport async function entriesByIds(apiMethod) {\n    const entries = (await apiMethod.entries()).map(([storageKey, value]) => [\n        storageKey.args[0],\n        value,\n    ]);\n    return entries.sort((a, b) => a[0].toNumber() - b[0].toNumber());\n}\nexport const JOYSTREAM_ADDRESS_PREFIX = 126;\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE: In the case where the network was hard-spooned and multiple genesisHashes\n// are provided, it needs to be in reverse order, i.e. most-recent first, oldest\n// last. This make lookups for the current a simple genesisHash[0]\n// (See Kusama as an example)\nexport const knownGenesis = {\n  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],\n  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],\n  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],\n  bifrost: ['0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'],\n  centrifuge: ['0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82', '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],\n  composable: ['0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'],\n  'dock-mainnet': ['0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae', '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],\n  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],\n  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],\n  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],\n  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n  ],\n  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],\n  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],\n  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n  ],\n  'nodle-para': ['0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'],\n  parallel: ['0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'],\n  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],\n  polkadex: ['0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'],\n  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],\n  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],\n  rococo: ['0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e', '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],\n  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],\n  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],\n  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],\n  statemint: ['0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'],\n  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'],\n  westend: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'],\n  xxnetwork: ['0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa']\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// these are icon overrides\nexport const knownIcon = {\n  centrifuge: 'polkadot',\n  kusama: 'polkadot',\n  polkadot: 'polkadot',\n  sora: 'polkadot',\n  statemine: 'polkadot',\n  statemint: 'polkadot',\n  westmint: 'polkadot'\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts\n// and maps to the known slip44 (minus the `0x8` hard derivation flag)\n//\n// NOTE: Any network here needs to have a genesisHash attached in the ./genesis.ts config\nexport const knownLedger = {\n  acala: 0x00000313,\n  astar: 0x0000032a,\n  bifrost: 0x00000314,\n  centrifuge: 0x000002eb,\n  composable: 0x00000162,\n  'dock-mainnet': 0x00000252,\n  edgeware: 0x0000020b,\n  equilibrium: 0x05f5e0fd,\n  genshiro: 0x05f5e0fc,\n  karura: 0x000002ae,\n  kusama: 0x000001b2,\n  'nodle-para': 0x000003eb,\n  parallel: 0x00000162,\n  polkadex: 0x0000031f,\n  polkadot: 0x00000162,\n  polymesh: 0x00000253,\n  sora: 0x00000269,\n  statemine: 0x000001b2,\n  // common-good on Kusama, shares derivation\n  statemint: 0x00000162,\n  // common-good on Polkadot, shares derivation\n  xxnetwork: 0x000007a3\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// testnets should not allow selection\nexport const knownTestnet = {\n  '': true,\n  // this is the default non-network entry\n  'cess-testnet': true,\n  'dock-testnet': true,\n  jupiter: true,\n  'mathchain-testnet': true,\n  subspace_testnet: true,\n  'zero-alphaville': true\n};","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactToU8a, u8aConcatStrict, u8aToHex } from '@polkadot/util';\nimport { compareArray } from \"../utils/compareArray.js\";\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\n\nexport class AbstractArray extends Array {\n  constructor(registry, length) {\n    super(length);\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // We need to loop through all entries since they may have a variable length themselves,\n    // e.g. when a Vec or Compact is contained withing, it has a variable length based on data\n    let total = compactToU8a(this.length).length;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareArray(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner(),\n      outer: [compactToU8a(this.length)]\n    };\n  }\n\n  inspectInner() {\n    const inner = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      inner[i] = this[i].inspect();\n    }\n\n    return inner;\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return Array.from(this);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toHuman(isExtended);\n    }\n\n    return result;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toJSON();\n    }\n\n    return result;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  /**\n   * @description Returns the string representation of the value\n   */\n  toString() {\n    const result = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      result[i] = this[i].toString();\n    }\n\n    return `[${result.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.toU8aInner();\n    return isBare ? u8aConcatStrict(encoded) : u8aConcatStrict([compactToU8a(this.length), ...encoded]);\n  }\n\n  toU8aInner(isBare) {\n    const encoded = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++) {\n      encoded[i] = this[i].toU8a(isBare);\n    }\n\n    return encoded;\n  } // Below are methods that we override. When we do a `new Vec(...).map()`,\n  // we want it to return an Array. We only override the methods that return a\n  // new instance.\n\n  /**\n   * @description Concatenates two arrays\n   */\n\n\n  concat(other) {\n    return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);\n  }\n  /**\n   * @description Filters the array with the callback\n   */\n\n\n  filter(callbackfn, thisArg) {\n    return this.toArray().filter(callbackfn, thisArg);\n  }\n  /**\n   * @description Maps the array with the callback\n   */\n\n\n  map(callbackfn, thisArg) {\n    return this.toArray().map(callbackfn, thisArg);\n  }\n  /**\n   * @description Checks if the array includes a specific value\n   */\n\n\n  includes(check) {\n    return this.some(value => value.eq(check));\n  }\n  /**\n   * @description Returns a slice of an array\n   */\n\n\n  slice(start, end) {\n    return this.toArray().slice(start, end);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Base\n * @description A type extends the Base class, when it holds a value\n */\nexport class AbstractBase {\n  #raw;\n\n  constructor(registry, value, initialU8aLength) {\n    this.#raw = value;\n    this.initialU8aLength = initialU8aLength;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#raw.inspect();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.#raw.toU8a(isBare);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Base';\n  }\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, BN_BILLION, BN_HUNDRED, BN_MILLION, BN_QUINTILL, bnToBn, bnToHex, bnToU8a, formatBalance, formatNumber, hexToBn, isBn, isHex, isNumber, isString, isU8a, u8aToBn, u8aToNumber } from '@polkadot/util';\nexport const DEFAULT_UINT_BITS = 64; // Maximum allowed integer for JS is 2^53 - 1, set limit at 52\n// In this case however, we always print any >32 as hex\n\nconst MAX_NUMBER_BITS = 52;\nconst MUL_P = new BN(10000);\nconst FORMATTERS = [['Perquintill', BN_QUINTILL], ['Perbill', BN_BILLION], ['Permill', BN_MILLION], ['Percent', BN_HUNDRED]];\n\nfunction toPercentage(value, divisor) {\n  return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;\n}\n/** @internal */\n\n\nfunction decodeAbstractInt(value, isNegative) {\n  if (isNumber(value)) {\n    if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {\n      throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');\n    }\n\n    return value;\n  } else if (isString(value)) {\n    if (isHex(value, -1, true)) {\n      return hexToBn(value, {\n        isLe: false,\n        isNegative\n      }).toString();\n    }\n\n    if (value.includes('.') || value.includes(',') || value.includes('e')) {\n      throw new Error('String should not contain decimal points or scientific notation');\n    }\n\n    return value;\n  } else if (isBn(value)) {\n    return value.toString();\n  }\n\n  return bnToBn(value).toString();\n}\n/**\n * @name AbstractInt\n * @ignore\n * @noInheritDoc\n */\n\n\nexport class AbstractInt extends BN {\n  #bitLength;\n\n  constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {\n    // Construct via a string/number, which will be passed in the BN constructor.\n    // It would be ideal to actually return a BN, but there is an issue:\n    // https://github.com/indutny/bn.js/issues/206\n    super( // shortcut isU8a as used in SCALE decoding\n    isU8a(value) ? bitLength <= 48 ? u8aToNumber(value.subarray(0, bitLength / 8), {\n      isNegative: isSigned\n    }) : u8aToBn(value.subarray(0, bitLength / 8), {\n      isLe: true,\n      isNegative: isSigned\n    }).toString() : decodeAbstractInt(value, isSigned));\n    this.registry = registry;\n    this.#bitLength = bitLength;\n    this.encodedLength = this.#bitLength / 8;\n    this.isUnsigned = !isSigned;\n    const isNegative = this.isNeg();\n    const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);\n\n    if (isNegative && !isSigned) {\n      throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);\n    } else if (super.bitLength() > maxBits) {\n      throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);\n    }\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is a zero value (align elsewhere)\n   */\n\n\n  get isEmpty() {\n    return this.isZero();\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#bitLength;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  eq(other) {\n    // Here we are actually overriding the built-in .eq to take care of both\n    // number and BN inputs (no `.eqn` needed) - numbers will be converted\n    return super.eq(isHex(other) ? hexToBn(other.toString(), {\n      isLe: false,\n      isNegative: !this.isUnsigned\n    }) : bnToBn(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description True if this value is the max of the type\n   */\n\n\n  isMax() {\n    const u8a = this.toU8a().filter(b => b === 0xff);\n    return u8a.length === this.#bitLength / 8;\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return BigInt(this.toString());\n  }\n  /**\n   * @description Returns the BN representation of the number. (Compatibility)\n   */\n\n\n  toBn() {\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isLe = false) {\n    // For display/JSON, this is BE, for compare, use isLe\n    return bnToHex(this, {\n      bitLength: this.bitLength(),\n      isLe,\n      isNegative: !this.isUnsigned\n    });\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toHuman(isExpanded) {\n    const rawType = this.toRawType();\n\n    if (rawType === 'Balance') {\n      return this.isMax() ? 'everything' // FIXME In the case of multiples we need some way of detecting which instance this belongs\n      // to. as it stands we will always format (incorrectly) against the first token defined\n      : formatBalance(this, {\n        decimals: this.registry.chainDecimals[0],\n        withSi: true,\n        withUnit: this.registry.chainTokens[0]\n      });\n    }\n\n    const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];\n    return divisor ? toPercentage(this, divisor) : formatNumber(this);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON(onlyHex = false) {\n    // FIXME this return type should by string | number, however BN returns string\n    // Options here are\n    //   - super.bitLength() - the actual used bits\n    //   - this.#bitLength - the type bits (this should be used, however contracts RPC is problematic)\n    return onlyHex || super.bitLength() > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    // NOTE In the case of balances, which have a special meaning on the UI\n    // and can be interpreted differently, return a specific value for it so\n    // underlying it always matches (no matter which length it actually is)\n    return this instanceof this.registry.createClassUnsafe('Balance') ? 'Balance' : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   * @param base The base to use for the conversion\n   */\n\n\n  toString(base) {\n    // only included here since we do not inherit docs\n    return super.toString(base);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this, {\n      bitLength: this.bitLength(),\n      isLe: true,\n      isNegative: !this.isUnsigned\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a, compactFromU8aLim, compactToU8a, isU8a } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction decodeCompact(registry, Type, value) {\n  if (isU8a(value)) {\n    const [decodedLength, bn] = (value[0] & 0b11) < 0b11 ? compactFromU8aLim(value) : compactFromU8a(value);\n    return [new Type(registry, bn), decodedLength];\n  } else if (value instanceof Compact) {\n    const raw = value.unwrap();\n    return raw instanceof Type ? [raw, 0] : [new Type(registry, raw), 0];\n  } else if (value instanceof Type) {\n    return [value, 0];\n  }\n\n  return [new Type(registry, value), 0];\n}\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\n\n\nexport class Compact {\n  #Type;\n  #raw;\n\n  constructor(registry, Type, value = 0, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    this.registry = registry;\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    const [raw, decodedLength] = decodeCompact(registry, this.#Type, value);\n    this.initialU8aLength = decodedLength;\n    this.#raw = raw;\n  }\n\n  static with(Type) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Compact {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.#raw.bitLength();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.#raw.eq(other instanceof Compact ? other.#raw : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return this.#raw.toBigInt();\n  }\n  /**\n   * @description Returns the BN representation of the number\n   */\n\n\n  toBn() {\n    return this.#raw.toBn();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return this.#raw.toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.#raw.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Compact<${this.registry.getClassName(this.#Type) || this.#raw.toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return compactToU8a(this.#raw.toBn());\n  }\n  /**\n   * @description Returns the embedded [[UInt]] or [[Moment]] value\n   */\n\n\n  unwrap() {\n    return this.#raw;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name DoNotConstruct\n * @description\n * An unknown type that fails on construction with the type info\n */\nexport class DoNotConstruct {\n  #neverError;\n\n  constructor(registry, typeName = 'DoNotConstruct') {\n    this.registry = registry;\n    this.#neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);\n    throw this.#neverError;\n  }\n\n  static with(typeName) {\n    return class extends DoNotConstruct {\n      constructor(registry) {\n        super(registry, typeName);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    throw this.#neverError;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw this.#neverError;\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    throw this.#neverError;\n  }\n\n  eq() {\n    throw this.#neverError;\n  }\n\n  inspect() {\n    throw this.#neverError;\n  }\n\n  toHex() {\n    throw this.#neverError;\n  }\n\n  toHuman() {\n    throw this.#neverError;\n  }\n\n  toJSON() {\n    throw this.#neverError;\n  }\n\n  toRawType() {\n    throw this.#neverError;\n  }\n\n  toString() {\n    throw this.#neverError;\n  }\n\n  toU8a() {\n    throw this.#neverError;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isNumber, isObject, isString, isU8a, objectProperties, stringCamelCase, stringify, stringPascalCase, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { mapToTypeMap, typesToMap } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\"; // export interface, this is used in Enum.with, so required as public by TS\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction isRustEnum(def) {\n  const defValues = Object.values(def);\n\n  if (defValues.some(v => isNumber(v))) {\n    if (!defValues.every(v => isNumber(v) && v >= 0 && v <= 255)) {\n      throw new Error('Invalid number-indexed enum definition');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction extractDef(registry, _def) {\n  const def = {};\n  let isBasic;\n  let isIndexed;\n\n  if (Array.isArray(_def)) {\n    for (let i = 0; i < _def.length; i++) {\n      def[_def[i]] = {\n        Type: Null,\n        index: i\n      };\n    }\n\n    isBasic = true;\n    isIndexed = false;\n  } else if (isRustEnum(_def)) {\n    const [Types, keys] = mapToTypeMap(registry, _def);\n\n    for (let i = 0; i < keys.length; i++) {\n      def[keys[i]] = {\n        Type: Types[i],\n        index: i\n      };\n    }\n\n    isBasic = !Object.values(def).some(({\n      Type\n    }) => Type !== Null);\n    isIndexed = false;\n  } else {\n    const entries = Object.entries(_def);\n\n    for (let i = 0; i < entries.length; i++) {\n      const [key, index] = entries[i];\n      def[key] = {\n        Type: Null,\n        index\n      };\n    }\n\n    isBasic = true;\n    isIndexed = true;\n  }\n\n  return {\n    def,\n    isBasic,\n    isIndexed\n  };\n}\n\nfunction getEntryType(def, checkIdx) {\n  const values = Object.values(def);\n\n  for (let i = 0; i < values.length; i++) {\n    const {\n      Type,\n      index\n    } = values[i];\n\n    if (index === checkIdx) {\n      return Type;\n    }\n  }\n\n  throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);\n}\n\nfunction createFromU8a(registry, def, index, value) {\n  const Type = getEntryType(def, index);\n  return {\n    index,\n    value: new Type(registry, value)\n  };\n}\n\nfunction createFromValue(registry, def, index = 0, value) {\n  const Type = getEntryType(def, index);\n  return {\n    index,\n    value: value instanceof Type ? value : new Type(registry, value)\n  };\n}\n\nfunction decodeFromJSON(registry, def, key, value) {\n  // JSON comes in the form of { \"<type (camelCase)>\": \"<value for type>\" }, here we\n  // additionally force to lower to ensure forward compat\n  const keys = Object.keys(def).map(k => k.toLowerCase());\n  const keyLower = key.toLowerCase();\n  const index = keys.indexOf(keyLower);\n\n  if (index === -1) {\n    throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);\n  }\n\n  try {\n    return createFromValue(registry, def, Object.values(def)[index].index, value);\n  } catch (error) {\n    throw new Error(`Enum(${key}):: ${error.message}`);\n  }\n}\n\nfunction decodeEnum(registry, def, value, index) {\n  // NOTE We check the index path first, before looking at values - this allows treating\n  // the optional indexes before anything else, more-specific > less-specific\n  if (isNumber(index)) {\n    return createFromValue(registry, def, index, value);\n  } else if (isU8a(value) || isHex(value)) {\n    const u8a = u8aToU8a(value); // nested, we don't want to match isObject below\n\n    if (u8a.length) {\n      return createFromU8a(registry, def, u8a[0], u8a.subarray(1));\n    }\n  } else if (value instanceof Enum) {\n    return createFromValue(registry, def, value.index, value.value);\n  } else if (isNumber(value)) {\n    return createFromValue(registry, def, value);\n  } else if (isString(value)) {\n    return decodeFromJSON(registry, def, value.toString());\n  } else if (isObject(value)) {\n    const key = Object.keys(value)[0];\n    return decodeFromJSON(registry, def, key, value[key]);\n  } // Worst-case scenario, return the first with default\n\n\n  return createFromValue(registry, def, Object.values(def)[0].index);\n}\n/**\n * @name Enum\n * @description\n * This implements an enum, that based on the value wraps a different type. It is effectively\n * an extension to enum where the value type is determined by the actual index.\n */\n\n\nexport class Enum {\n  #def;\n  #entryIndex;\n  #indexes;\n  #isBasic;\n  #isIndexed;\n  #raw;\n\n  constructor(registry, Types, value, index, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const {\n      def,\n      isBasic,\n      isIndexed\n    } = definition || setDefinition(extractDef(registry, Types)); // shortcut isU8a as used in SCALE decoding\n\n    const decoded = isU8a(value) && value.length && !isNumber(index) ? createFromU8a(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);\n    this.registry = registry;\n    this.#def = def;\n    this.#isBasic = isBasic;\n    this.#isIndexed = isIndexed;\n    this.#indexes = Object.values(def).map(({\n      index\n    }) => index);\n    this.#entryIndex = this.#indexes.indexOf(decoded.index);\n    this.#raw = decoded.value;\n\n    if (this.#raw.initialU8aLength) {\n      this.initialU8aLength = 1 + this.#raw.initialU8aLength;\n    }\n  }\n\n  static with(Types) {\n    const keys = Array.isArray(Types) ? Types : Object.keys(Types);\n    const asKeys = new Array(keys.length);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      const name = stringPascalCase(keys[i]);\n      asKeys[i] = `as${name}`;\n      isKeys[i] = `is${name}`;\n    }\n\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Enum {\n      constructor(registry, value, index) {\n        super(registry, Types, value, index, {\n          definition,\n          setDefinition\n        });\n        objectProperties(this, isKeys, (_, i) => this.type === keys[i]);\n        objectProperties(this, asKeys, (k, i) => {\n          if (!this[isKeys[i]]) {\n            throw new Error(`Cannot convert '${this.type}' via ${k}`);\n          }\n\n          return this.value;\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The index of the enum value\n   */\n\n\n  get index() {\n    return this.#indexes[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get inner() {\n    return this.#raw;\n  }\n  /**\n   * @description true if this is a basic enum (no values)\n   */\n\n\n  get isBasic() {\n    return this.#isBasic;\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.#raw.isEmpty;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof Null;\n  }\n  /**\n   * @description Checks if the Enum points to a [[Null]] type\n   * @deprecated use isNone\n   */\n\n\n  get isNull() {\n    return this.isNone;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defIndexes() {\n    return this.#indexes;\n  }\n  /**\n   * @description The available keys for this enum\n   */\n\n\n  get defKeys() {\n    return Object.keys(this.#def);\n  }\n  /**\n   * @description The name of the type this enum value represents\n   */\n\n\n  get type() {\n    return this.defKeys[this.#entryIndex];\n  }\n  /**\n   * @description The value of the enum\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // cater for the case where we only pass the enum index\n    if (isU8a(other)) {\n      return !this.toU8a().some((entry, index) => entry !== other[index]);\n    } else if (isNumber(other)) {\n      return this.toNumber() === other;\n    } else if (this.#isBasic && isString(other)) {\n      return this.type === other;\n    } else if (isHex(other)) {\n      return this.toHex() === other;\n    } else if (other instanceof Enum) {\n      return this.index === other.index && this.value.eq(other.value);\n    } else if (isObject(other)) {\n      return this.value.eq(other[this.type]);\n    } // compare the actual wrapper value\n\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.#isBasic) {\n      return {\n        outer: [new Uint8Array([this.index])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#isBasic || this.isNone ? this.type : {\n      [this.type]: this.#raw.toHuman(isExtended)\n    };\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.#isBasic ? this.type : {\n      [stringCamelCase(this.type)]: this.#raw.toJSON()\n    };\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return this.index;\n  }\n  /**\n   * @description Returns a raw struct representation of the enum types\n   */\n\n\n  _toRawStruct() {\n    if (this.#isBasic) {\n      return this.#isIndexed ? this.defKeys.reduce((out, key, index) => {\n        out[key] = this.#indexes[index];\n        return out;\n      }, {}) : this.defKeys;\n    }\n\n    const entries = Object.entries(this.#def);\n    return typesToMap(this.registry, entries.reduce((out, [key, {\n      Type\n    }], i) => {\n      out[0][i] = Type;\n      out[1][i] = key;\n      return out;\n    }, [new Array(entries.length), new Array(entries.length)]));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _enum: this._toRawStruct()\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.isNone ? this.type : stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? this.#raw.toU8a(isBare) : u8aConcatStrict([new Uint8Array([this.index]), this.#raw.toU8a(isBare)]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/Int.js\";\n/**\n * @name Int\n * @description\n * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class Int extends AbstractInt {\n  constructor(registry, value = 0, bitLength) {\n    super(registry, value, bitLength, true);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends Int {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\nexport class Null {\n  encodedLength = 0;\n  isEmpty = true;\n  // Added for compatibility reasons, e.g. see Option\n  initialU8aLength = 0;\n\n  constructor(registry) {\n    this.registry = registry;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || isNull(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {};\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isCodec, isNull, isU8a, isUndefined, u8aToHex } from '@polkadot/util';\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Null } from \"./Null.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nclass None extends Null {\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return 'None';\n  }\n\n}\n/** @internal */\n\n\nfunction decodeOption(registry, Type, value) {\n  if (value instanceof Type) {\n    // don't re-create, use as it (which also caters for derived types)\n    return value;\n  } else if (value instanceof Option) {\n    if (value.value instanceof Type) {\n      // same instance, return it\n      return value.value;\n    } else if (value.isNone) {\n      // internal is None, we are also none\n      return new None(registry);\n    } // convert the actual value into known\n\n\n    return new Type(registry, value.value);\n  } else if (isNull(value) || isUndefined(value) || value === '0x' || value instanceof None) {\n    // anyhting empty we pass as-is\n    return new None(registry);\n  } else if (isU8a(value)) {\n    // the isU8a check happens last in the if-tree - since the wrapped value\n    // may be an instance of it, so Type and Option checks go in first\n    return !value.length || value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1));\n  }\n\n  return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\n\n\nexport class Option {\n  #Type;\n  #raw;\n\n  constructor(registry, typeName, value, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const Type = definition || setDefinition(typeToConstructor(registry, typeName));\n    const decoded = isU8a(value) && value.length && !isCodec(value) ? value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);\n    this.registry = registry;\n    this.#Type = Type;\n    this.#raw = decoded;\n\n    if (decoded && decoded.initialU8aLength) {\n      this.initialU8aLength = 1 + decoded.initialU8aLength;\n    }\n  }\n\n  static with(Type) {\n    let definition;\n\n    const setDefinition = d => {\n      definition = d;\n      return d;\n    };\n\n    return class extends Option {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // boolean byte (has value, doesn't have) along with wrapped length\n    return 1 + this.#raw.encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isEmpty() {\n    return this.isNone;\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isNone() {\n    return this.#raw instanceof None;\n  }\n  /**\n   * @description Checks if the Option has a value\n   */\n\n\n  get isSome() {\n    return !this.isNone;\n  }\n  /**\n   * @description The actual value for the Option\n   */\n\n\n  get value() {\n    return this.#raw;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Option) {\n      return this.isSome === other.isSome && this.value.eq(other.value);\n    }\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    if (this.isNone) {\n      return {\n        outer: [new Uint8Array([0])]\n      };\n    }\n\n    const {\n      inner,\n      outer = []\n    } = this.#raw.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([1]), ...outer]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // This attempts to align with the JSON encoding - actually in this case\n    // the isSome value is correct, however the `isNone` may be problematic\n    return this.isNone ? '0x' : u8aToHex(this.toU8a().subarray(1));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#raw.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.isNone ? null : this.#raw.toJSON();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    const wrapped = this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType();\n    return isBare ? wrapped : `Option<${wrapped}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#raw.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return this.#raw.toU8a(true);\n    }\n\n    const u8a = new Uint8Array(this.encodedLength);\n\n    if (this.isSome) {\n      u8a.set([1]);\n      u8a.set(this.#raw.toU8a(), 1);\n    }\n\n    return u8a;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available), throws if null\n   */\n\n\n  unwrap() {\n    if (this.isNone) {\n      throw new Error('Option: unwrapping a None value');\n    }\n\n    return this.#raw;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOr(defaultValue) {\n    return this.isSome ? this.unwrap() : defaultValue;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOrDefault() {\n    return this.isSome ? this.unwrap() : new this.#Type(this.registry);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from \"./Enum.js\";\n/**\n * @name Result\n * @description\n * A Result maps to the Rust Result type, that can either wrap a success or error value\n */\n\nexport class Result extends Enum {\n  constructor(registry, Ok, Err, value) {\n    // NOTE This is order-dependent, Ok (with index 0) needs to be first\n    // eslint-disable-next-line sort-keys\n    super(registry, {\n      Ok,\n      Err\n    }, value);\n  }\n\n  static with(Types) {\n    return class extends Result {\n      constructor(registry, value) {\n        super(registry, Types.Ok, Types.Err, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the wrapper Err value (if isErr)\n   */\n\n\n  get asErr() {\n    if (!this.isErr) {\n      throw new Error('Cannot extract Err value from Ok result, check isErr first');\n    }\n\n    return this.value;\n  }\n  /**\n   * @deprecated Use asErr\n   */\n\n\n  get asError() {\n    return this.asErr;\n  }\n  /**\n   * @description Returns the wrapper Ok value (if isOk)\n   */\n\n\n  get asOk() {\n    if (!this.isOk) {\n      throw new Error('Cannot extract Ok value from Err result, check isOk first');\n    }\n\n    return this.value;\n  }\n  /**\n   * @description Checks if the Result has no value\n   */\n\n\n  get isEmpty() {\n    return this.isOk && this.value.isEmpty;\n  }\n  /**\n   * @description Checks if the Result wraps an Err value\n   */\n\n\n  get isErr() {\n    return !this.isOk;\n  }\n  /**\n   * @deprecated Use isErr\n   */\n\n\n  get isError() {\n    return this.isErr;\n  }\n  /**\n   * @description Checks if the Result wraps an Ok value\n   */\n\n\n  get isOk() {\n    return this.index === 0;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const Types = this._toRawStruct();\n\n    return `Result<${Types.Ok},${Types.Err}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, isHex, isString, isU8a, stringify, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8a, mapToTypeMap, typeToConstructor } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/** @internal */\n\n\nfunction decodeTuple(registry, result, value, Classes) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeU8a(registry, result, u8aToU8a(value), Classes);\n  }\n\n  const Types = Classes[0];\n\n  for (let i = 0; i < Types.length; i++) {\n    try {\n      const entry = value === null || value === void 0 ? void 0 : value[i];\n      result[i] = entry instanceof Types[i] ? entry : new Types[i](registry, entry);\n    } catch (error) {\n      throw new Error(`Tuple: failed on ${i}:: ${error.message}`);\n    }\n  }\n\n  return [result, 0];\n}\n/**\n * @name Tuple\n * @description\n * A Tuple defines an anonymous fixed-length array, where each element has its\n * own type. It extends the base JS `Array` object.\n */\n\n\nexport class Tuple extends AbstractArray {\n  #Types;\n\n  constructor(registry, Types, value, {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const Classes = definition || setDefinition(Array.isArray(Types) ? [Types.map(t => typeToConstructor(registry, t)), []] : isFunction(Types) || isString(Types) ? [[typeToConstructor(registry, Types)], []] : mapToTypeMap(registry, Types));\n    super(registry, Classes[0].length);\n    this.initialU8aLength = (isU8a(value) ? decodeU8a(registry, this, value, Classes) : decodeTuple(registry, this, value, Classes))[1];\n    this.#Types = Classes;\n  }\n\n  static with(Types) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Tuple {\n      constructor(registry, value) {\n        super(registry, Types, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description The types definition of the tuple\n   */\n\n\n  get Types() {\n    return this.#Types[1].length ? this.#Types[1] : this.#Types[0].map(T => new T(this.registry).toRawType());\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    const types = this.#Types[0].map(T => this.registry.getClassName(T) || new T(this.registry).toRawType());\n    return `(${types.join(',')})`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    // Overwrite the default toString representation of Array.\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return u8aConcatStrict(this.toU8aInner(isBare));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractInt } from \"../abstract/Int.js\";\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\nexport class UInt extends AbstractInt {\n  static with(bitLength, typeName) {\n    return class extends UInt {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, isU8a, logger, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n\nfunction decodeVecLength(value) {\n  if (Array.isArray(value)) {\n    return [value, value.length, 0];\n  }\n\n  const u8a = u8aToU8a(value);\n  const [startAt, length] = compactFromU8aLim(u8a);\n\n  if (length > MAX_LENGTH) {\n    throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  }\n\n  return [u8a, length, startAt];\n}\n\nexport function decodeVec(registry, result, value, startAt, Type) {\n  if (Array.isArray(value)) {\n    const count = result.length;\n\n    for (let i = 0; i < count; i++) {\n      const entry = value[i];\n\n      try {\n        result[i] = entry instanceof Type ? entry : new Type(registry, entry);\n      } catch (error) {\n        l.error(`Unable to decode on index ${i}`, error.message);\n        throw error;\n      }\n    }\n\n    return [0, 0];\n  }\n\n  return decodeU8aVec(registry, result, u8aToU8a(value), startAt, Type);\n}\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\n\nexport class Vec extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, value = [], {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const [decodeFrom, length, startAt] = decodeVecLength(value);\n    super(registry, length);\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    this.initialU8aLength = (isU8a(decodeFrom) ? decodeU8aVec(registry, this, decodeFrom, startAt, this.#Type) : decodeVec(registry, this, decodeFrom, startAt, this.#Type))[0];\n  }\n\n  static with(Type) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Vec {\n      constructor(registry, value) {\n        super(registry, Type, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return this.#Type.name;\n  }\n  /**\n   * @description Finds the index of the value in the array\n   */\n\n\n  indexOf(_other) {\n    // convert type first, this removes overhead from the eq\n    const other = _other instanceof this.#Type ? _other : new this.#Type(this.registry, _other);\n\n    for (let i = 0; i < this.length; i++) {\n      if (other.eq(this[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Vec<${this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aConcatStrict } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { decodeU8aVec, typeToConstructor } from \"../utils/index.js\";\nimport { decodeVec } from \"./Vec.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/**\n * @name VecFixed\n * @description\n * This manages codec arrays of a fixed length\n */\n\n\nexport class VecFixed extends AbstractArray {\n  #Type;\n\n  constructor(registry, Type, length, value = [], {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    super(registry, length);\n    this.#Type = definition || setDefinition(typeToConstructor(registry, Type));\n    this.initialU8aLength = (isU8a(value) ? decodeU8aVec(registry, this, value, 0, this.#Type) : decodeVec(registry, this, value, 0, this.#Type))[1];\n  }\n\n  static with(Type, length) {\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends VecFixed {\n      constructor(registry, value) {\n        super(registry, Type, length, value, {\n          definition,\n          setDefinition\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The type for the items\n   */\n\n\n  get Type() {\n    return new this.#Type(this.registry).toRawType();\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      total += this[i].encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      inner: this.inspectInner()\n    };\n  }\n\n  toU8a() {\n    // we override, we don't add the length prefix for ourselves, and at the same time we\n    // ignore isBare on entries, since they should be properly encoded at all times\n    const encoded = this.toU8aInner();\n    return encoded.length ? u8aConcatStrict(encoded) : new Uint8Array([]);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[${this.Type};${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class BTreeMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends BTreeMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value, 'BTreeMap');\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isHex, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareSet, decodeU8aVec, sortSet, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('BTreeSet');\n/** @internal */\n\nfunction decodeSetFromU8a(registry, ValClass, u8a) {\n  const output = new Set();\n  const [offset, count] = compactFromU8aLim(u8a);\n  const result = new Array(count);\n  const [decodedLength] = decodeU8aVec(registry, result, u8a, offset, ValClass);\n\n  for (let i = 0; i < count; i++) {\n    output.add(result[i]);\n  }\n\n  return [ValClass, output, decodedLength];\n}\n/** @internal */\n\n\nfunction decodeSetFromSet(registry, ValClass, value) {\n  const output = new Set();\n  value.forEach(val => {\n    try {\n      output.add(val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  });\n  return [ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Set<any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonSet\n * @internal\n */\n\n\nfunction decodeSet(registry, valType, value) {\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (!value) {\n    return [ValClass, new Set(), 0];\n  } else if (isU8a(value) || isHex(value)) {\n    return decodeSetFromU8a(registry, ValClass, u8aToU8a(value));\n  } else if (Array.isArray(value) || value instanceof Set) {\n    return decodeSetFromSet(registry, ValClass, value);\n  }\n\n  throw new Error('BTreeSet: cannot decode type');\n}\n\nexport class BTreeSet extends Set {\n  #ValClass;\n\n  constructor(registry, valType, rawValue) {\n    const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);\n    super(sortSet(values));\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#ValClass = ValClass;\n  }\n\n  static with(valType) {\n    return class extends BTreeSet {\n      constructor(registry, value) {\n        super(registry, valType, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const v of this.values()) {\n      len += v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()].map(v => v.toString());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareSet(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const v of this.values()) {\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toHuman(isExtended));\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = [];\n\n    for (const v of this.values()) {\n      json.push(v.toJSON());\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `BTreeSet<${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const v of this.values()) {\n      encoded.push(v.toU8a(isBare));\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isString, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeBitVecU8a(value) {\n  if (!value || !value.length) {\n    return [0, new Uint8Array()];\n  } // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded\n\n\n  const [offset, length] = compactFromU8aLim(value);\n  const total = offset + Math.ceil(length / 8);\n\n  if (total > value.length) {\n    throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  }\n\n  return [length, value.subarray(offset, total)];\n}\n/** @internal */\n\n\nfunction decodeBitVec(value) {\n  if (Array.isArray(value) || isString(value)) {\n    const u8a = u8aToU8a(value);\n    return [u8a.length / 8, u8a];\n  }\n\n  return decodeBitVecU8a(value);\n}\n/**\n * @name BitVec\n * @description\n * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this\n * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes\n */\n\n\nexport class BitVec extends Raw {\n  #decodedLength;\n  #isMsb; // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming\n  // we are dealing with Lsb, which is the default (as of writing) BitVec format used\n  // in the Polkadot code (this only affects the toHuman displays)\n\n  constructor(registry, value, isMsb = false) {\n    const [decodedLength, u8a] = decodeBitVec(value);\n    super(registry, u8a);\n    this.#decodedLength = decodedLength;\n    this.#isMsb = isMsb;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.#decodedLength).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [compactToU8a(this.#decodedLength), super.toU8a()]\n    };\n  }\n\n  toHuman() {\n    return `0b${[...this.toU8a(true)].map(d => `00000000${d.toString(2)}`.slice(-8)).map(s => this.#isMsb ? s : s.split('').reverse().join('')).join('_')}`;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'BitVec';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const bitVec = super.toU8a();\n    return isBare ? bitVec : u8aConcatStrict([compactToU8a(this.#decodedLength), bitVec]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactFromU8aLim, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\"; // Bytes are used for things like on-chain code, so it has a healthy limit\n\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\n\nfunction decodeBytesU8a(value) {\n  if (!value.length) {\n    return [new Uint8Array(), 0];\n  } // handle all other Uint8Array inputs, these do have a length prefix\n\n\n  const [offset, length] = compactFromU8aLim(value);\n  const total = offset + length;\n\n  if (length > MAX_LENGTH) {\n    throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n  } else if (total > value.length) {\n    throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n  }\n\n  return [value.subarray(offset, total), total];\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\n\n\nexport class Bytes extends Raw {\n  constructor(registry, value) {\n    const [u8a, decodedLength] = isU8a(value) && !(value instanceof Raw) ? decodeBytesU8a(value) : Array.isArray(value) || isString(value) ? [u8aToU8a(value), 0] : [value, 0];\n    super(registry, u8a, decodedLength);\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length + compactToU8a(this.length).length;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect(isBare) {\n    const clength = compactToU8a(this.length);\n    return {\n      outer: isBare ? [super.toU8a()] : this.length ? [clength, super.toU8a()] : [clength]\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Bytes';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return isBare ? super.toU8a(isBare) : compactAddLength(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { CodecMap } from \"./Map.js\";\nexport class HashMap extends CodecMap {\n  static with(keyType, valType) {\n    return class extends HashMap {\n      constructor(registry, value) {\n        super(registry, keyType, valType, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8aLim, compactToU8a, isHex, isObject, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from \"../abstract/Array.js\";\nimport { Enum } from \"../base/Enum.js\";\nimport { Struct } from \"../native/Struct.js\";\nimport { compareMap, decodeU8a, sortMap, typeToConstructor } from \"../utils/index.js\";\nconst l = logger('Map');\n/** @internal */\n\nfunction decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {\n  const output = new Map();\n  const [offset, count] = compactFromU8aLim(u8a);\n  const types = [];\n\n  for (let i = 0; i < count; i++) {\n    types.push(KeyClass, ValClass);\n  }\n\n  const [values, decodedLength] = decodeU8a(registry, new Array(types.length), u8a.subarray(offset), [types, []]);\n\n  for (let i = 0; i < values.length; i += 2) {\n    output.set(values[i], values[i + 1]);\n  }\n\n  return [KeyClass, ValClass, output, offset + decodedLength];\n}\n/** @internal */\n\n\nfunction decodeMapFromMap(registry, KeyClass, ValClass, value) {\n  const output = new Map();\n\n  for (const [key, val] of value.entries()) {\n    const isComplex = KeyClass.prototype instanceof AbstractArray || KeyClass.prototype instanceof Struct || KeyClass.prototype instanceof Enum;\n\n    try {\n      output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));\n    } catch (error) {\n      l.error('Failed to decode key or value:', error.message);\n      throw error;\n    }\n  }\n\n  return [KeyClass, ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param KeyClass - Type of the map key\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Map<any, any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonMap\n * @internal\n */\n\n\nfunction decodeMap(registry, keyType, valType, value) {\n  const KeyClass = typeToConstructor(registry, keyType);\n  const ValClass = typeToConstructor(registry, valType);\n\n  if (!value) {\n    return [KeyClass, ValClass, new Map(), 0];\n  } else if (isU8a(value) || isHex(value)) {\n    return decodeMapFromU8a(registry, KeyClass, ValClass, u8aToU8a(value));\n  } else if (value instanceof Map) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, value);\n  } else if (isObject(value)) {\n    return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));\n  }\n\n  throw new Error('Map: cannot decode type');\n}\n\nexport class CodecMap extends Map {\n  #KeyClass;\n  #ValClass;\n  #type;\n\n  constructor(registry, keyType, valType, rawValue, type = 'HashMap') {\n    const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);\n    super(type === 'BTreeMap' ? sortMap(decoded) : decoded);\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n    this.#KeyClass = KeyClass;\n    this.#ValClass = ValClass;\n    this.#type = type;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let len = compactToU8a(this.size).length;\n\n    for (const [k, v] of this.entries()) {\n      len += k.encodedLength + v.encodedLength;\n    }\n\n    return len;\n  }\n  /**\n   * @description Returns a hash of the value\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push(k.inspect());\n      inner.push(v.inspect());\n    }\n\n    return {\n      inner,\n      outer: [compactToU8a(this.size)]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k.toString()] = v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#type}<${this.registry.getClassName(this.#KeyClass) || new this.#KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = new Array();\n\n    if (!isBare) {\n      encoded.push(compactToU8a(this.size));\n    }\n\n    for (const [k, v] of this.entries()) {\n      encoded.push(k.toU8a(isBare), v.toU8a(isBare));\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Option } from \"../base/Option.js\";\nimport { bool as Bool } from \"../native/Bool.js\";\n\nfunction decodeU8a(registry, value) {\n  // Encoded as -\n  //  - 0 = None\n  //  - 1 = True\n  //  - 2 = False\n  return value[0] === 0 ? null : new Bool(registry, value[0] === 1);\n}\n/**\n * @name OptionBool\n * @description A specific implementation of Option<bool> than allows for single-byte encoding\n */\n\n\nexport class OptionBool extends Option {\n  constructor(registry, value) {\n    super(registry, Bool, isU8a(value) || isHex(value) ? decodeU8a(registry, u8aToU8a(value)) : value);\n    this.initialU8aLength = 1;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return this.isSome ? !this.value.valueOf() : false;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.isSome ? this.value.valueOf() : false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    return isBare ? 'bool' : 'Option<bool>';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return super.toU8a(true);\n    }\n\n    return this.isSome ? new Uint8Array([this.isTrue ? 1 : 2]) : new Uint8Array([0]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Tuple } from \"../base/Tuple.js\";\n\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n  #rangeName;\n\n  constructor(registry, Type, value, {\n    rangeName = 'Range'\n  } = {}) {\n    super(registry, [Type, Type], value);\n    this.#rangeName = rangeName;\n  }\n\n  static with(Type) {\n    return class extends Range {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description Returns the starting range value\n   */\n\n\n  get start() {\n    return this[0];\n  }\n  /**\n   * @description Returns the ending range value\n   */\n\n\n  get end() {\n    return this[1];\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#rangeName}<${this.start.toRawType()}>`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Range } from \"./Range.js\";\nexport class RangeInclusive extends Range {\n  constructor(registry, Type, value) {\n    super(registry, Type, value, {\n      rangeName: 'RangeInclusive'\n    });\n  }\n\n  static with(Type) {\n    return class extends RangeInclusive {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Text } from \"../native/Text.js\";\nimport { sanitize } from \"../utils/index.js\";\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\nexport class Type extends Text {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride(sanitize(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\n/** @internal */\n\nfunction decodeU8aFixed(value, bitLength) {\n  const u8a = u8aToU8a(value);\n  const byteLength = bitLength / 8;\n\n  if (!u8a.length) {\n    return [new Uint8Array(byteLength), 0];\n  }\n\n  if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n    throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n  }\n\n  return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\n\n\nexport class U8aFixed extends Raw {\n  constructor(registry, value = new Uint8Array(), bitLength = 256) {\n    const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n    super(registry, u8a, decodedLength);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends U8aFixed {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `[u8;${this.length}]`;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a } from '@polkadot/util';\nimport { Raw } from \"../native/Raw.js\";\nimport { typeToConstructor } from \"../utils/index.js\";\nimport { Bytes } from \"./Bytes.js\";\n\nfunction decodeRaw(registry, typeName, value) {\n  const Type = typeToConstructor(registry, typeName);\n\n  if (isU8a(value) || isHex(value)) {\n    try {\n      const [, u8a] = isHex(value) || value instanceof Raw ? [0, value] : compactStripLength(value);\n      return [Type, new Type(registry, u8a), value];\n    } catch {\n      return [Type, null, value];\n    }\n  }\n\n  const instance = new Type(registry, value);\n  return [Type, instance, compactAddLength(instance.toU8a())];\n}\n\nexport class WrapperKeepOpaque extends Bytes {\n  #Type;\n  #decoded;\n  #opaqueName;\n\n  constructor(registry, typeName, value, {\n    opaqueName = 'WrapperKeepOpaque'\n  } = {}) {\n    const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n    super(registry, u8a);\n    this.#Type = Type;\n    this.#decoded = decoded;\n    this.#opaqueName = opaqueName;\n  }\n\n  static with(Type) {\n    return class extends WrapperKeepOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description Checks if the wrapper is decodable\n   */\n\n\n  get isDecoded() {\n    return !!this.#decoded;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return this.#decoded ? {\n      inner: [this.#decoded.inspect()],\n      outer: [compactToU8a(this.length)]\n    } : {\n      outer: [compactToU8a(this.length), this.toU8a(true)]\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.#decoded ? this.#decoded.toHuman(isExtended) : super.toHuman();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `${this.#opaqueName}<${this.registry.getClassName(this.#Type) || (this.#decoded ? this.#decoded.toRawType() : new this.#Type(this.registry).toRawType())}>`;\n  }\n  /**\n   * @description Converts the Object to to a string (either decoded or bytes)\n   */\n\n\n  toString() {\n    return this.#decoded ? this.#decoded.toString() : super.toString();\n  }\n  /**\n   * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n   */\n\n\n  unwrap() {\n    if (!this.#decoded) {\n      throw new Error(`${this.#opaqueName}: unwrapping an undecodable value`);\n    }\n\n    return this.#decoded;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { WrapperKeepOpaque } from \"./WrapperKeepOpaque.js\";\nexport class WrapperOpaque extends WrapperKeepOpaque {\n  constructor(registry, typeName, value) {\n    super(registry, typeName, value, {\n      opaqueName: 'WrapperOpaque'\n    });\n  }\n\n  static with(Type) {\n    return class extends WrapperOpaque {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)\n   */\n\n\n  get inner() {\n    return this.unwrap();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\n\nexport class bool extends Boolean {\n  constructor(registry, value = false) {\n    super(isU8a(value) ? value[0] === 1 : value instanceof Boolean ? value.valueOf() : !!value);\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 1;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value (true when it wraps false/default)\n   */\n\n\n  get isEmpty() {\n    return this.isFalse;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isFalse() {\n    return !this.isTrue;\n  }\n  /**\n   * @description Checks if the value is an empty value (always false)\n   */\n\n\n  get isTrue() {\n    return this.valueOf();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.valueOf();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'bool';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toJSON().toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array([this.valueOf() ? 1 : 0]);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction, objectProperties, stringify } from '@polkadot/util';\nimport { compareMap } from \"../utils/index.js\";\n/** @internal */\n\nfunction decodeJson(value) {\n  return Object.entries(value || {});\n}\n/**\n * @name Json\n * @description\n * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it\n * implements a Codec, it is limited in that it can only be used with input objects via RPC,\n * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys\n * @noInheritDoc\n */\n\n\nexport class Json extends Map {\n  constructor(registry, value) {\n    const decoded = decodeJson(value);\n    super(decoded);\n    this.registry = registry;\n    objectProperties(this, decoded.map(([k]) => k), k => this.get(k));\n  }\n  /**\n   * @description Always 0, never encodes as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return [...this.keys()].length === 0;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  inspect() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n\n\n  toHex() {\n    throw new Error('Unimplemented');\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = isFunction(value.toHuman) ? value.toHuman() : value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return [...this.entries()].reduce((json, [key, value]) => {\n      json[key] = value;\n      return json;\n    }, {});\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Json';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Unimplemented, will throw\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    throw new Error('Unimplemented');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isAscii, isUndefined, isUtf8, u8aToHex, u8aToString, u8aToU8a } from '@polkadot/util';\n/**\n * @name Raw\n * @description\n * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ\n * from other implementations where it will consume the full Uint8Array as passed to it.\n * As such it is meant to be subclassed where the wrapper takes care of the\n * actual lengths instead of used directly.\n * @noInheritDoc\n */\n\nexport class Raw extends Uint8Array {\n  constructor(registry, value, initialU8aLength) {\n    super(u8aToU8a(value));\n    this.registry = registry;\n    this.initialU8aLength = initialU8aLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Returns true if the wrapped value contains only ASCII printable characters\n   */\n\n\n  get isAscii() {\n    return isAscii(this);\n  }\n  /**\n   * @description Returns true if the type wraps an empty/default all-0 value\n   */\n\n\n  get isEmpty() {\n    return !this.length || isUndefined(this.find(b => !!b));\n  }\n  /**\n   * @description Returns true if the wrapped value contains only utf8 characters\n   */\n\n\n  get isUtf8() {\n    return isUtf8(this);\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return this.length * 8;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Uint8Array) {\n      return this.length === other.length && !this.some((b, index) => b !== other[index]);\n    }\n\n    return this.eq(u8aToU8a(other));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Create a new slice from the actual buffer. (compat)\n   * @param start The position to start at\n   * @param end The position to end at\n   */\n\n\n  slice(start, end) {\n    // Like subarray below, we have to follow this approach since we are extending the TypeArray.\n    // This happens especially when it comes to further extensions, the length may be an override\n    return Uint8Array.from(this).slice(start, end);\n  }\n  /**\n   * @description Create a new subarray from the actual buffer. (compat)\n   * @param begin The position to start at\n   * @param end The position to end at\n   */\n\n\n  subarray(begin, end) {\n    return Uint8Array.from(this).subarray(begin, end);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    if (this.isAscii) {\n      const text = this.toUtf8(); // ensure we didn't end up with multibyte codepoints\n\n      if (isAscii(text)) {\n        return text;\n      }\n    }\n\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Raw';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return Uint8Array.from(this);\n  }\n  /**\n   * @description Returns the wrapped data as a UTF-8 string\n   */\n\n\n  toUtf8() {\n    if (!this.isUtf8) {\n      throw new Error('The character sequence is not a valid Utf8 string');\n    }\n\n    return u8aToString(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, bnToBn, bnToU8a, isBn, isNumber, isString, isU8a, isUndefined, objectProperties, stringify, stringPascalCase, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareArray } from \"../utils/index.js\";\n\nfunction encodeSet(setValues, values) {\n  const encoded = new BN(0);\n\n  for (let i = 0; i < values.length; i++) {\n    encoded.ior(bnToBn(setValues[values[i]] || 0));\n  }\n\n  return encoded;\n}\n/** @internal */\n\n\nfunction decodeSetArray(setValues, values) {\n  const result = new Array(values.length);\n\n  for (let i = 0; i < values.length; i++) {\n    const key = values[i];\n\n    if (isUndefined(setValues[key])) {\n      throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n    }\n\n    result[i] = key;\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSetNumber(setValues, _value) {\n  const bn = bnToBn(_value);\n  const keys = Object.keys(setValues);\n  const result = [];\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n\n    if (bn.and(bnToBn(setValues[key])).eq(bnToBn(setValues[key]))) {\n      result.push(key);\n    }\n  }\n\n  const computed = encodeSet(setValues, result);\n\n  if (!bn.eq(computed)) {\n    throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSet(setValues, value = 0, bitLength) {\n  if (bitLength % 8 !== 0) {\n    throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);\n  }\n\n  const byteLength = bitLength / 8;\n\n  if (isU8a(value)) {\n    return value.length === 0 ? [] : decodeSetNumber(setValues, u8aToBn(value.subarray(0, byteLength), {\n      isLe: true\n    }));\n  } else if (isString(value)) {\n    return decodeSet(setValues, u8aToU8a(value), byteLength);\n  } else if (value instanceof Set || Array.isArray(value)) {\n    const input = Array.isArray(value) ? value : [...value.values()];\n    return decodeSetArray(setValues, input);\n  }\n\n  return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\n\n\nexport class CodecSet extends Set {\n  #allowed;\n  #byteLength;\n\n  constructor(registry, setValues, value, bitLength = 8) {\n    super(decodeSet(setValues, value, bitLength));\n    this.registry = registry;\n    this.#allowed = setValues;\n    this.#byteLength = bitLength / 8;\n  }\n\n  static with(values, bitLength) {\n    const keys = Object.keys(values);\n    const isKeys = new Array(keys.length);\n\n    for (let i = 0; i < keys.length; i++) {\n      isKeys[i] = `is${stringPascalCase(keys[i])}`;\n    }\n\n    return class extends CodecSet {\n      constructor(registry, value) {\n        super(registry, values, value, bitLength);\n        objectProperties(this, isKeys, (_, i) => this.strings.includes(keys[i]));\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.#byteLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description true is the Set contains no values\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()];\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  get valueEncoded() {\n    return encodeSet(this.#allowed, this.strings);\n  }\n  /**\n   * @description adds a value to the Set (extended to allow for validity checking)\n   */\n\n\n  add = key => {\n    // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n    // we have the isUndefined(this._setValues) in here as well, add is used internally\n    // in the Set constructor (so it is undefined at this point, and should allow)\n    if (this.#allowed && isUndefined(this.#allowed[key])) {\n      throw new Error(`Set: Invalid key '${key}' on add`);\n    }\n\n    super.add(key);\n    return this;\n  };\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n  eq(other) {\n    if (Array.isArray(other)) {\n      // we don't actually care about the order, sort the values\n      return compareArray(this.strings.sort(), other.sort());\n    } else if (other instanceof Set) {\n      return this.eq([...other.values()]);\n    } else if (isNumber(other) || isBn(other)) {\n      return this.valueEncoded.eq(bnToBn(other));\n    }\n\n    return false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return {\n      outer: [this.toU8a()]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.strings;\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  toNumber() {\n    return this.valueEncoded.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify({\n      _set: this.#allowed\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return `[${this.strings.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return bnToU8a(this.valueEncoded, {\n      bitLength: this.#byteLength * 8,\n      isLe: true\n    });\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBoolean, isFunction, isHex, isObject, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareMap, decodeU8aStruct, mapToTypeMap, typesToMap } from \"../utils/index.js\";\n\nfunction noopSetDefinition(d) {\n  return d;\n}\n/** @internal */\n\n\nfunction decodeStructFromObject(registry, [Types, keys], value, jsonMap) {\n  let jsonObj;\n  const typeofArray = Array.isArray(value);\n  const typeofMap = value instanceof Map;\n\n  if (!typeofArray && !typeofMap && !isObject(value)) {\n    throw new Error(`Struct: Cannot decode value ${stringify(value)} (typeof ${typeof value}), expected an input object, map or array`);\n  } else if (typeofArray && value.length !== keys.length) {\n    throw new Error(`Struct: Unable to map ${stringify(value)} array to object with known keys ${keys.join(', ')}`);\n  }\n\n  const raw = new Array(keys.length);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const jsonKey = jsonMap.get(key) || key;\n    const Type = Types[i];\n    let assign;\n\n    try {\n      if (typeofArray) {\n        assign = value[i];\n      } else if (typeofMap) {\n        assign = jsonKey && value.get(jsonKey);\n      } else {\n        assign = jsonKey && value[jsonKey];\n\n        if (isUndefined(assign)) {\n          if (isUndefined(jsonObj)) {\n            const entries = Object.entries(value);\n            jsonObj = {};\n\n            for (let e = 0; e < entries.length; e++) {\n              jsonObj[stringCamelCase(entries[e][0])] = entries[e][1];\n            }\n          }\n\n          assign = jsonKey && jsonObj[jsonKey];\n        }\n      }\n\n      raw[i] = [key, assign instanceof Type ? assign : new Type(registry, assign)];\n    } catch (error) {\n      let type = Type.name;\n\n      try {\n        type = new Type(registry).toRawType();\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n    }\n  }\n\n  return [raw, 0];\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\n\n\nexport class Struct extends Map {\n  #jsonMap;\n  #Types;\n\n  constructor(registry, Types, value, jsonMap = new Map(), {\n    definition,\n    setDefinition = noopSetDefinition\n  } = {}) {\n    const typeMap = definition || setDefinition(mapToTypeMap(registry, Types));\n    const [decoded, decodedLength] = isU8a(value) || isHex(value) ? decodeU8aStruct(registry, new Array(typeMap[0].length), u8aToU8a(value), typeMap) : value instanceof Struct ? [value, 0] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);\n    super(decoded);\n    this.initialU8aLength = decodedLength;\n    this.registry = registry;\n    this.#jsonMap = jsonMap;\n    this.#Types = typeMap;\n  }\n\n  static with(Types, jsonMap) {\n    const keys = Object.keys(Types);\n    let definition; // eslint-disable-next-line no-return-assign\n\n    const setDefinition = d => definition = d;\n\n    return class extends Struct {\n      constructor(registry, value) {\n        super(registry, Types, value, jsonMap, {\n          definition,\n          setDefinition\n        });\n        objectProperties(this, keys, k => this.get(k));\n      }\n\n    };\n  }\n  /**\n   * @description The available keys for this struct\n   */\n\n\n  get defKeys() {\n    return this.#Types[1];\n  }\n\n  getT(key) {\n    return this.get(key);\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    for (const v of this.values()) {\n      if (!v.isEmpty) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @description Returns the Type description of the structure\n   */\n\n\n  get Type() {\n    const result = {};\n    const [Types, keys] = this.#Types;\n\n    for (let i = 0; i < keys.length; i++) {\n      result[keys[i]] = new Types[i](this.registry).toRawType();\n    }\n\n    return result;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    let total = 0;\n\n    for (const v of this.values()) {\n      total += v.encodedLength;\n    }\n\n    return total;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return compareMap(this, other);\n  }\n  /**\n   * @description Returns a specific names entry in the structure\n   * @param name The name of the entry to retrieve\n   */\n\n\n  get(name) {\n    return super.get(name);\n  }\n  /**\n   * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n   */\n\n\n  getAtIndex(index) {\n    return this.toArray()[index];\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect(isBare) {\n    const inner = new Array();\n\n    for (const [k, v] of this.entries()) {\n      inner.push({ ...v.inspect(!isBare || isBoolean(isBare) ? isBare : isBare[k]),\n        name: stringCamelCase(k)\n      });\n    }\n\n    return {\n      inner\n    };\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return [...this.values()];\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      json[k] = v && v.toHuman(isExtended);\n    }\n\n    return json;\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    const json = {};\n\n    for (const [k, v] of this.entries()) {\n      const jsonKey = this.#jsonMap.get(k) || k;\n      json[jsonKey] = v && v.toJSON();\n    }\n\n    return json;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return stringify(typesToMap(this.registry, this.#Types));\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return stringify(this.toJSON());\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = [];\n\n    for (const [k, v] of this.entries()) {\n      if (v && isFunction(v.toU8a)) {\n        encoded.push(v.toU8a(!isBare || isBoolean(isBare) ? isBare : isBare[k]));\n      }\n    }\n\n    return u8aConcatStrict(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactAddLength, compactFromU8aLim, compactToU8a, hexToU8a, isHex, isString, isU8a, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { Raw } from \"./Raw.js\";\nconst MAX_LENGTH = 128 * 1024;\n/** @internal */\n\nfunction decodeText(value) {\n  if (isU8a(value)) {\n    if (!value.length) {\n      return ['', 0];\n    } // for Raw, the internal buffer does not have an internal length\n    // (the same applies in e.g. Bytes, where length is added at encoding-time)\n\n\n    if (value instanceof Raw) {\n      return [u8aToString(value), 0];\n    }\n\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + length;\n\n    if (length > MAX_LENGTH) {\n      throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    } else if (total > value.length) {\n      throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n\n    return [u8aToString(value.subarray(offset, total)), total];\n  } else if (isHex(value)) {\n    return [u8aToString(hexToU8a(value)), 0];\n  }\n\n  return [value ? value.toString() : '', 0];\n}\n/**\n * @name Text\n * @description\n * This is a string wrapper, along with the length. It is used both for strings as well\n * as items such as documentation. It simply extends the standard JS `String` built-in\n * object, inheriting all methods exposed from `String`.\n * @noInheritDoc\n */\n\n\nexport class Text extends String {\n  #override = null;\n\n  constructor(registry, value) {\n    const [str, decodedLength] = decodeText(value);\n    super(str);\n    this.registry = registry;\n    this.initialU8aLength = decodedLength;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return isString(other) ? this.toString() === other.toString() : false;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = stringToU8a(super.toString());\n    return {\n      outer: value.length ? [compactToU8a(value.length), value] : [compactToU8a(value.length)]\n    };\n  }\n  /**\n   * @description Set an override value for this\n   */\n\n\n  setOverride(override) {\n    this.#override = override;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // like with Vec<u8>, when we are encoding to hex, we don't actually add\n    // the length prefix (it is already implied by the actual string length)\n    return u8aToHex(this.toU8a(true));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Text';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.#override || super.toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    // NOTE Here we use the super toString (we are not taking overrides into account,\n    // rather encoding the original value the string was constructed with)\n    const encoded = stringToU8a(super.toString());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i128\n * @description\n * A 128-bit signed integer\n */\n\nexport class i128 extends Int.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i16\n * @description\n * A 16-bit signed integer\n */\n\nexport class i16 extends Int.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i256\n * @description\n * A 256-bit signed integer\n */\n\nexport class i256 extends Int.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i32\n * @description\n * A 32-bit signed integer\n */\n\nexport class i32 extends Int.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i64\n * @description\n * A 64-bit signed integer\n */\n\nexport class i64 extends Int.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i64';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Int } from \"../base/Int.js\";\n/**\n * @name i8\n * @description\n * An 8-bit signed integer\n */\n\nexport class i8 extends Int.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __IntType = 'i8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u128\n * @description\n * A 128-bit unsigned integer\n */\n\nexport class u128 extends UInt.with(128) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u128';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u16\n * @description\n * A 16-bit unsigned integer\n */\n\nexport class u16 extends UInt.with(16) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u16';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u256\n * @description\n * A 256-bit unsigned integer\n */\n\nexport class u256 extends UInt.with(256) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u256';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u32\n * @description\n * A 32-bit unsigned integer\n */\n\nexport class u32 extends UInt.with(32) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u32';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u64\n * @description\n * A 64-bit unsigned integer\n */\n\nexport class u64 extends UInt.with(64) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u64';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { UInt } from \"../base/UInt.js\";\n/**\n * @name u8\n * @description\n * An 8-bit unsigned integer\n */\n\nexport class u8 extends UInt.with(8) {\n  // NOTE without this, we cannot properly determine extensions\n  __UIntType = 'u8';\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from \"./U32.js\";\n/**\n * @name USize\n * @description\n * A System default unsigned number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it created consensus mismatches.\n */\n\nexport class usize extends u32 {\n  constructor(registry, value) {\n    super(registry, value);\n    throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\"; // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Codec[] that the first has to be as well\n\nexport function compareArray(a, b) {\n  if (Array.isArray(b)) {\n    return a.length === b.length && isUndefined(a.find((v, index) => hasEq(v) ? !v.eq(b[index]) : v !== b[index]));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from \"./util.js\";\n\nfunction hasMismatch(a, b) {\n  return isUndefined(a) || (hasEq(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => notEntry(e) || hasMismatch(a.get(e[0]), e[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nexport function compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if (isObject(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isObject } from '@polkadot/util';\n\nfunction compareSetArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(e => !a.has(e));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Set<string, Codec> that the first has to be as well\n\n\nexport function compareSet(a, b) {\n  if (Array.isArray(b)) {\n    return compareSetArray(a, b);\n  } else if (b instanceof Set) {\n    return compareSetArray(a, [...b.values()]);\n  } else if (isObject(b)) {\n    return compareSetArray(a, Object.values(b));\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\n/** @internal */\n\nfunction formatFailure(registry, {\n  message\n}, u8a, i, count, Type, key) {\n  let type = '';\n\n  try {\n    type = `: ${new Type(registry).toRawType()}`;\n  } catch {// ignore\n  }\n\n  return `decodeU8a: failed at ${u8aToHex(u8a.subarray(0, 16))}…${key ? ` on ${key}` : ''} (index ${i}/${count})${type}:: ${message}`;\n}\n/**\n * @internal\n *\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param result - The result array (will be returned with values pushed)\n * @param types - The array of CodecClass to decode the U8a against.\n */\n\n\nexport function decodeU8a(registry, result, u8a, [Types, keys]) {\n  const count = result.length;\n  let offset = 0;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Types[i](registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = value;\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n  }\n\n  return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\n\nexport function decodeU8aStruct(registry, result, u8a, [Types, keys]) {\n  const count = result.length;\n  let offset = 0;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Types[i](registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = [keys[i], value];\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n  }\n\n  return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\n\nexport function decodeU8aVec(registry, result, u8a, startAt, Type) {\n  const count = result.length;\n  let offset = startAt;\n  let i = 0;\n\n  try {\n    while (i < count) {\n      const value = new Type(registry, u8a.subarray(offset));\n      offset += value.initialU8aLength || value.encodedLength;\n      result[i] = value;\n      i++;\n    }\n  } catch (error) {\n    throw new Error(formatFailure(registry, error, u8a.subarray(offset), i, count, Type));\n  }\n\n  return [offset, offset - startAt];\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { typeToConstructor } from \"./typeToConstructor.js\";\n/**\n * @description takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`\n */\n\nexport function mapToTypeMap(registry, input) {\n  const entries = Object.entries(input);\n  const count = entries.length;\n  const output = [new Array(count), new Array(count)];\n\n  for (let i = 0; i < count; i++) {\n    output[1][i] = entries[i][0];\n    output[0][i] = typeToConstructor(registry, entries[i][1]);\n  }\n\n  return output;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];\nconst ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);\nconst BOX_PRECEDING = ['<', '(', '[', '\"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple\n\nconst mappings = [// alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport\nalias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false), alias('VecDeque<', 'Vec<', false), // <T::Balance as HasCompact>\ncleanupCompact(), // Change BoundedVec<Type, Size> to Vec<Type>\nremoveExtensions('Bounded', true), // Change WeakVec<Type> to Vec<Type>\nremoveExtensions('Weak', false), // Remove all the trait prefixes\nremoveTraits(), // remove PairOf<T> -> (T, T)\nremovePairOf(), // remove boxing, `Box<Proposal>` -> `Proposal`\nremoveWrap('Box<'), // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`\nremoveGenerics(), // alias String -> Text (compat with jsonrpc methods)\nalias('String', 'Text'), // alias Vec<u8> -> Bytes\nalias('Vec<u8>', 'Bytes'), alias('&\\\\[u8\\\\]', 'Bytes'), alias(\"&'static\\\\[u8\\\\]\", 'Bytes'), // alias RawAddress -> Address\nalias('RawAddress', 'Address'), // lookups, mapped to Address/AccountId as appropriate in runtime\nalias('Lookup::Source', 'LookupSource'), alias('Lookup::Target', 'LookupTarget'), // HACK duplication between contracts & primitives, however contracts prefixed with exec\nalias('exec::StorageKey', 'ContractStorageKey'), // flattens tuples with one value, `(AccountId)` -> `AccountId`\nflattenSingleTuple(), // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal\nremoveColons(), // remove all trailing spaces - this should always be the last\ntrim()]; // given a string, trim it\n\nexport function trim() {\n  return value => value.trim();\n} // given a starting index, find the closing >\n\nexport function findClosing(value, start) {\n  let depth = 0;\n\n  for (let index = start; index < value.length; index++) {\n    if (value[index] === '>') {\n      if (!depth) {\n        return index;\n      }\n\n      depth--;\n    } else if (value[index] === '<') {\n      depth++;\n    }\n  }\n\n  throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);\n}\nexport function alias(src, dest, withChecks = true) {\n  const from = new RegExp(`(^${src}|${BOX_PRECEDING.map(box => `\\\\${box}${src}`).join('|')})`, 'g');\n\n  const to = src => {\n    from.lastIndex = 0;\n    return withChecks && BOX_PRECEDING.includes(src[0]) ? `${src[0]}${dest}` : dest;\n  };\n\n  return value => value.replace(from, to);\n}\nexport function cleanupCompact() {\n  return value => {\n    if (value.includes(' as HasCompact')) {\n      for (let index = 0; index < value.length; index++) {\n        if (value[index] === '<') {\n          const end = findClosing(value, index + 1) - 14;\n\n          if (value.substring(end, end + 14) === ' as HasCompact') {\n            value = `Compact<${value.substring(index + 1, end)}>`;\n          }\n        }\n      }\n    }\n\n    return value;\n  };\n}\nexport function flattenSingleTuple() {\n  const from1 = /,\\)/g;\n  const from2 = /\\(([^,]+)\\)/;\n  return value => {\n    from1.lastIndex = 0;\n    return value // tuples may have trailing commas, e.g. (u32, BlockNumber, )\n    .replace(from1, ')') // change (u32) -> u32\n    .replace(from2, '$1');\n  };\n}\n\nfunction replaceTagWith(value, matcher, replacer) {\n  let index = -1;\n\n  while (true) {\n    index = value.indexOf(matcher, index + 1);\n\n    if (index === -1) {\n      return value;\n    }\n\n    const start = index + matcher.length;\n    const end = findClosing(value, start);\n    value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;\n  }\n} // remove the Bounded* or Weak* wrappers\n\n\nexport function removeExtensions(type, isSized) {\n  return value => {\n    for (let i = 0; i < BOUNDED.length; i++) {\n      const tag = BOUNDED[i];\n      value = replaceTagWith(value, `${type}${tag}<`, v => {\n        const parts = v.split(',').map(s => s.trim()).filter(s => s);\n\n        if (isSized) {\n          parts.pop();\n        }\n\n        return `${tag}<${parts.join(',')}>`;\n      });\n    }\n\n    return value;\n  };\n}\nexport function removeColons() {\n  return value => {\n    let index = 0;\n\n    while (index !== -1) {\n      index = value.indexOf('::');\n\n      if (index === 0) {\n        value = value.substring(2);\n      } else if (index !== -1) {\n        let start = index;\n\n        while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {\n          start--;\n        }\n\n        value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;\n      }\n    }\n\n    return value;\n  };\n}\nexport function removeGenerics() {\n  return value => {\n    for (let index = 0; index < value.length; index++) {\n      if (value[index] === '<') {\n        // check against the allowed wrappers, be it Vec<..>, Option<...> ...\n        const box = ALLOWED_BOXES.find(box => {\n          const start = index - box.length;\n          return start >= 0 && value.substring(start, index) === box && ( // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>\n          start === 0 || BOX_PRECEDING.includes(value[start - 1]));\n        }); // we have not found anything, unwrap generic innards\n\n        if (!box) {\n          const end = findClosing(value, index + 1);\n          value = `${value.substring(0, index)}${value.substring(end + 1)}`;\n        }\n      }\n    }\n\n    return value;\n  };\n} // remove the PairOf wrappers\n\nexport function removePairOf() {\n  const replacer = v => `(${v},${v})`;\n\n  return value => replaceTagWith(value, 'PairOf<', replacer);\n} // remove the type traits\n\nexport function removeTraits() {\n  const from1 = /\\s/g;\n  const from2 = /(T|Self)::/g;\n  const from3 = /<(T|Self)asTrait>::/g;\n  const from4 = /<Tas[a-z]+::Trait>::/g;\n  const from5 = /<LookupasStaticLookup>/g;\n  const from6 = /::Type/g;\n  return value => {\n    from1.lastIndex = 0;\n    from2.lastIndex = 0;\n    from3.lastIndex = 0;\n    from4.lastIndex = 0;\n    from5.lastIndex = 0;\n    from6.lastIndex = 0;\n    return value // remove all whitespaces\n    .replace(from1, '') // anything `T::<type>` to end up as `<type>`\n    .replace(from2, '') // replace `<T as Trait>::` (whitespaces were removed above)\n    .replace(from3, '') // replace `<T as something::Trait>::` (whitespaces were removed above)\n    .replace(from4, '') // replace <Lookup as StaticLookup>\n    .replace(from5, 'Lookup') // replace `<...>::Type`\n    .replace(from6, '');\n  };\n} // remove wrapping values, i.e. Box<Proposal> -> Proposal\n\nexport function removeWrap(check) {\n  const replacer = v => v;\n\n  return value => replaceTagWith(value, check, replacer);\n}\nconst sanitizeMap = new Map();\nexport function sanitize(value) {\n  const startValue = value.toString();\n  const memoized = sanitizeMap.get(startValue);\n\n  if (memoized) {\n    return memoized;\n  }\n\n  let result = startValue;\n\n  for (let i = 0; i < mappings.length; i++) {\n    result = mappings[i](result);\n  }\n\n  sanitizeMap.set(startValue, result);\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn, isBigInt, isBn, isFunction, isNumber, stringify } from '@polkadot/util';\n\n/** @internal **/\nfunction isArrayLike(arg) {\n  return arg instanceof Uint8Array || Array.isArray(arg);\n}\n/** @internal **/\n\n\nfunction isCodec(arg) {\n  return isFunction(arg && arg.toU8a);\n}\n/** @internal **/\n\n\nfunction isEnum(arg) {\n  return isCodec(arg) && isNumber(arg.index) && isCodec(arg.value);\n}\n/** @internal */\n\n\nfunction isNumberLike(arg) {\n  return isNumber(arg) || isBn(arg) || isBigInt(arg);\n}\n/** @internal */\n\n\nfunction sortArray(a, b) {\n  // Vec, Tuple, Bytes etc.\n  let sortRes = 0;\n  const minLen = Math.min(a.length, b.length);\n\n  for (let i = 0; i < minLen; ++i) {\n    sortRes = sortAsc(a[i], b[i]);\n\n    if (sortRes !== 0) {\n      return sortRes;\n    }\n  }\n\n  return a.length - b.length;\n}\n/**\n* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)\n*/\n\n\nexport function sortAsc(a, b) {\n  if (isNumberLike(a) && isNumberLike(b)) {\n    return bnToBn(a).cmp(bnToBn(b));\n  } else if (a instanceof Map && b instanceof Map) {\n    return sortAsc(Array.from(a.values()), Array.from(b.values()));\n  } else if (isEnum(a) && isEnum(b)) {\n    return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);\n  } else if (isArrayLike(a) && isArrayLike(b)) {\n    return sortArray(a, b);\n  } else if (isCodec(a) && isCodec(b)) {\n    // Text, Bool etc.\n    return sortAsc(a.toU8a(true), b.toU8a(true));\n  }\n\n  throw new Error(`Attempting to sort unrecognized values: ${stringify(a)} (typeof ${typeof a}) <-> ${stringify(b)} (typeof ${typeof b})`);\n}\nexport function sortSet(set) {\n  return new Set(Array.from(set).sort(sortAsc));\n}\nexport function sortMap(map) {\n  return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString } from '@polkadot/util';\nexport function typeToConstructor(registry, type) {\n  return isString(type) ? registry.createClassUnsafe(type) : type;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function typesToMap(registry, [Types, keys]) {\n  const result = {};\n\n  for (let i = 0; i < keys.length; i++) {\n    result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-codec authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from '@polkadot/util';\nexport function hasEq(o) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return isFunction(o.eq);\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BTreeMap, BTreeSet, Bytes, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Null, Option, Range, RangeInclusive, Result, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\nimport { isNumber, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { getTypeDef } from \"../util/getTypeDef.js\";\n\nfunction getTypeDefType({\n  lookupName,\n  type\n}) {\n  return lookupName || type;\n}\n\nfunction getSubDefArray(value) {\n  if (!Array.isArray(value.sub)) {\n    throw new Error(`Expected subtype as TypeDef[] in ${stringify(value)}`);\n  }\n\n  return value.sub;\n}\n\nfunction getSubDef(value) {\n  if (!value.sub || Array.isArray(value.sub)) {\n    throw new Error(`Expected subtype as TypeDef in ${stringify(value)}`);\n  }\n\n  return value.sub;\n}\n\nfunction getSubType(value) {\n  return getTypeDefType(getSubDef(value));\n} // create a maps of type string CodecClasss from the input\n\n\nfunction getTypeClassMap(value) {\n  const subs = getSubDefArray(value);\n  const map = {};\n\n  for (let i = 0; i < subs.length; i++) {\n    map[subs[i].name] = getTypeDefType(subs[i]);\n  }\n\n  return map;\n} // create an array of type string CodecClasss from the input\n\n\nfunction getTypeClassArray(value) {\n  return getSubDefArray(value).map(getTypeDefType);\n}\n\nfunction createInt(Clazz, {\n  displayName,\n  length\n}) {\n  if (!isNumber(length)) {\n    throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);\n  }\n\n  return Clazz.with(length, displayName);\n}\n\nfunction createHashMap(Clazz, value) {\n  const [keyType, valueType] = getTypeClassArray(value);\n  return Clazz.with(keyType, valueType);\n}\n\nfunction createWithSub(Clazz, value) {\n  return Clazz.with(getSubType(value));\n}\n\nconst infoMapping = {\n  [TypeDefInfo.BTreeMap]: (registry, value) => createHashMap(BTreeMap, value),\n  [TypeDefInfo.BTreeSet]: (registry, value) => createWithSub(BTreeSet, value),\n  [TypeDefInfo.Compact]: (registry, value) => createWithSub(Compact, value),\n  [TypeDefInfo.DoNotConstruct]: (registry, value) => DoNotConstruct.with(value.displayName || value.type),\n  [TypeDefInfo.Enum]: (registry, value) => {\n    const subs = getSubDefArray(value);\n    return Enum.with(subs.every(({\n      type\n    }) => type === 'Null') ? subs.reduce((out, {\n      index,\n      name\n    }, count) => {\n      out[name] = index || count;\n      return out;\n    }, {}) : getTypeClassMap(value));\n  },\n  [TypeDefInfo.HashMap]: (registry, value) => createHashMap(HashMap, value),\n  [TypeDefInfo.Int]: (registry, value) => createInt(Int, value),\n  // We have circular deps between Linkage & Struct\n  [TypeDefInfo.Linkage]: (registry, value) => {\n    const type = `Option<${getSubType(value)}>`; // eslint-disable-next-line sort-keys\n\n    const Clazz = Struct.with({\n      previous: type,\n      next: type\n    }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n    Clazz.prototype.toRawType = function () {\n      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n      return `Linkage<${this.next.toRawType(true)}>`;\n    };\n\n    return Clazz;\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, _) => Null,\n  [TypeDefInfo.Option]: (registry, value) => {\n    if (!value.sub || Array.isArray(value.sub)) {\n      throw new Error('Expected type information for Option');\n    } // NOTE This is opt-in (unhandled), not by default\n    // if (value.sub.type === 'bool') {\n    //   return OptionBool;\n    // }\n\n\n    return createWithSub(Option, value);\n  },\n  [TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),\n  [TypeDefInfo.Range]: (registry, value) => createWithSub(Range, value),\n  [TypeDefInfo.RangeInclusive]: (registry, value) => createWithSub(RangeInclusive, value),\n  [TypeDefInfo.Result]: (registry, value) => {\n    const [Ok, Err] = getTypeClassArray(value); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return Result.with({\n      Err,\n      Ok\n    });\n  },\n  [TypeDefInfo.Set]: (registry, value) => CodecSet.with(getSubDefArray(value).reduce((result, {\n    index,\n    name\n  }) => {\n    result[name] = index;\n    return result;\n  }, {}), value.length),\n  [TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),\n  [TypeDefInfo.Struct]: (registry, value) => Struct.with(getTypeClassMap(value), value.alias),\n  [TypeDefInfo.Tuple]: (registry, value) => Tuple.with(getTypeClassArray(value)),\n  [TypeDefInfo.UInt]: (registry, value) => createInt(UInt, value),\n  [TypeDefInfo.Vec]: (registry, {\n    sub\n  }) => {\n    if (!sub || Array.isArray(sub)) {\n      throw new Error('Expected type information for vector');\n    }\n\n    return sub.type === 'u8' ? Bytes : Vec.with(getTypeDefType(sub));\n  },\n  [TypeDefInfo.VecFixed]: (registry, {\n    displayName,\n    length,\n    sub\n  }) => {\n    if (!isNumber(length) || !sub || Array.isArray(sub)) {\n      throw new Error('Expected length & type information for fixed vector');\n    }\n\n    return sub.type === 'u8' ? U8aFixed.with(length * 8, displayName) : VecFixed.with(getTypeDefType(sub), length);\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, value) => createWithSub(WrapperKeepOpaque, value),\n  [TypeDefInfo.WrapperOpaque]: (registry, value) => createWithSub(WrapperOpaque, value)\n};\nexport function constructTypeClass(registry, typeDef) {\n  try {\n    const Type = infoMapping[typeDef.info](registry, typeDef);\n\n    if (!Type) {\n      throw new Error('No class created');\n    } // don't clobber any existing\n\n\n    if (!Type.__fallbackType && typeDef.fallbackType) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore ...this is the only place we we actually assign this...\n      Type.__fallbackType = typeDef.fallbackType;\n    }\n\n    return Type;\n  } catch (error) {\n    throw new Error(`Unable to construct class from ${stringify(typeDef)}: ${error.message}`);\n  }\n} // Returns the type Class for construction\n\nexport function getTypeClass(registry, typeDef) {\n  return registry.getUnsafe(typeDef.type, false, typeDef);\n}\nexport function createClassUnsafe(registry, type) {\n  return (// just retrieve via name, no creation via typeDef\n    registry.getUnsafe(type) || // we don't have an existing type, create the class via typeDef\n    getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : getTypeDef(type))\n  );\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option } from '@polkadot/types-codec';\nimport { isHex, isU8a, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { createClassUnsafe } from \"./class.js\"; // With isPedantic, actually check that the encoding matches that supplied. This\n// is much slower, but verifies that we have the correct types defined\n\nfunction checkInstance(created, matcher) {\n  const u8a = created.toU8a();\n  const rawType = created.toRawType();\n  const isOk = // full match, all ok\n  u8aEq(u8a, matcher) || // on a length-prefixed type, just check the actual length\n  ['Bytes', 'Text', 'Type'].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...\n  created.isEmpty && matcher.every(v => !v);\n\n  if (!isOk) {\n    throw new Error(`${rawType}:: Decoded input doesn't match input, received ${u8aToHex(matcher, 512)} (${matcher.length} bytes), created ${u8aToHex(u8a, 512)} (${u8a.length} bytes)`);\n  }\n}\n\nfunction checkPedantic(created, [value]) {\n  if (isU8a(value)) {\n    checkInstance(created, value);\n  } else if (isHex(value)) {\n    checkInstance(created, u8aToU8a(value));\n  }\n} // Initializes a type with a value. This also checks for fallbacks and in the cases\n// where isPedantic is specified (storage decoding), also check the format/structure\n\n\nfunction initType(registry, Type, params = [], {\n  blockHash,\n  isOptional,\n  isPedantic\n} = {}) {\n  const created = new (isOptional ? Option.with(Type) : Type)(registry, ...params);\n  isPedantic && checkPedantic(created, params);\n\n  if (blockHash) {\n    created.createdAtHash = createTypeUnsafe(registry, 'Hash', [blockHash]);\n  }\n\n  return created;\n} // An unsafe version of the `createType` below. It's unsafe because the `type`\n// argument here can be any string, which, when it cannot parse, will yield a\n// runtime error.\n\n\nexport function createTypeUnsafe(registry, type, params = [], options = {}) {\n  let Clazz = null;\n  let firstError = null;\n\n  try {\n    Clazz = createClassUnsafe(registry, type);\n    return initType(registry, Clazz, params, options);\n  } catch (error) {\n    firstError = new Error(`createType(${type}):: ${error.message}`);\n  }\n\n  if (Clazz && Clazz.__fallbackType) {\n    try {\n      Clazz = createClassUnsafe(registry, Clazz.__fallbackType);\n      return initType(registry, Clazz, params, options);\n    } catch {// swallow, we will throw the first error again\n    }\n  }\n\n  throw firstError;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport let TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 3] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 4] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 5] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 6] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 7] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 8] = \"Null\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 9] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 10] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Range\"] = 11] = \"Range\";\n  TypeDefInfo[TypeDefInfo[\"RangeInclusive\"] = 12] = \"RangeInclusive\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 13] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 14] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Si\"] = 15] = \"Si\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 16] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 17] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 18] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 19] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 20] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"WrapperKeepOpaque\"] = 21] = \"WrapperKeepOpaque\";\n  TypeDefInfo[TypeDefInfo[\"WrapperOpaque\"] = 22] = \"WrapperOpaque\";\n})(TypeDefInfo || (TypeDefInfo = {}));","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber, isUndefined, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\n\nconst stringIdentity = value => value.toString();\n\nconst INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];\nexport function paramsNotation(outer, inner, transform = stringIdentity) {\n  return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>` : ''}`;\n}\n\nfunction encodeWithParams(registry, typeDef, outer) {\n  const {\n    info,\n    sub\n  } = typeDef;\n\n  switch (info) {\n    case TypeDefInfo.BTreeMap:\n    case TypeDefInfo.BTreeSet:\n    case TypeDefInfo.Compact:\n    case TypeDefInfo.HashMap:\n    case TypeDefInfo.Linkage:\n    case TypeDefInfo.Option:\n    case TypeDefInfo.Range:\n    case TypeDefInfo.RangeInclusive:\n    case TypeDefInfo.Result:\n    case TypeDefInfo.Vec:\n    case TypeDefInfo.WrapperKeepOpaque:\n    case TypeDefInfo.WrapperOpaque:\n      return paramsNotation(outer, sub, p => encodeTypeDef(registry, p));\n  }\n\n  throw new Error(`Unable to encode ${stringify(typeDef)} with params`);\n}\n\nfunction encodeSubTypes(registry, sub, asEnum, extra) {\n  const names = sub.map(({\n    name\n  }) => name);\n\n  if (!names.every(n => !!n)) {\n    throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);\n  }\n\n  const inner = objectSpread({}, extra);\n\n  for (let i = 0; i < sub.length; i++) {\n    const def = sub[i];\n    inner[def.name] = encodeTypeDef(registry, def);\n  }\n\n  return stringify(asEnum ? {\n    _enum: inner\n  } : inner);\n} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result\n// in a compile-time error with the missing index)\n\n\nconst encoders = {\n  [TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),\n  [TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),\n  [TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),\n  [TypeDefInfo.DoNotConstruct]: (registry, {\n    displayName,\n    lookupIndex,\n    lookupName\n  }) => `DoNotConstruct<${lookupName || displayName || (isUndefined(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,\n  [TypeDefInfo.Enum]: (registry, {\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Enum type');\n    } // c-like enums have all Null entries\n    // TODO We need to take the disciminant into account and auto-add empty entries\n\n\n    return sub.every(({\n      type\n    }) => type === 'Null') ? stringify({\n      _enum: sub.map(({\n        name\n      }, index) => `${name || `Empty${index}`}`)\n    }) : encodeSubTypes(registry, sub, true);\n  },\n  [TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),\n  [TypeDefInfo.Int]: (registry, {\n    length = 32\n  }) => `Int<${length}>`,\n  [TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Null]: (registry, typeDef) => 'Null',\n  [TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Plain]: (registry, {\n    displayName,\n    type\n  }) => displayName || type,\n  [TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),\n  [TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),\n  [TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Set]: (registry, {\n    length = 8,\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Set type');\n    }\n\n    return stringify({\n      _set: sub.reduce((all, {\n        index,\n        name\n      }, count) => objectSpread(all, {\n        [`${name || `Unknown${index || count}`}`]: index || count\n      }), {\n        _bitLength: length || 8\n      })\n    });\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [TypeDefInfo.Si]: (registry, {\n    lookupName,\n    type\n  }) => lookupName || type,\n  [TypeDefInfo.Struct]: (registry, {\n    alias,\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Struct type');\n    }\n\n    return encodeSubTypes(registry, sub, false, alias ? {\n      _alias: [...alias.entries()].reduce((all, [k, v]) => objectSpread(all, {\n        [k]: v\n      }), {})\n    } : {});\n  },\n  [TypeDefInfo.Tuple]: (registry, {\n    sub\n  }) => {\n    if (!Array.isArray(sub)) {\n      throw new Error('Unable to encode Tuple type');\n    }\n\n    return `(${sub.map(type => encodeTypeDef(registry, type)).join(',')})`;\n  },\n  [TypeDefInfo.UInt]: (registry, {\n    length = 32\n  }) => `UInt<${length}>`,\n  [TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),\n  [TypeDefInfo.VecFixed]: (registry, {\n    length,\n    sub\n  }) => {\n    if (!isNumber(length) || !sub || Array.isArray(sub)) {\n      throw new Error('Unable to encode VecFixed type');\n    }\n\n    return `[${sub.type};${length}]`;\n  },\n  [TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),\n  [TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')\n};\n\nfunction encodeType(registry, typeDef, withLookup = true) {\n  return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);\n}\n\nexport function encodeTypeDef(registry, typeDef) {\n  // In the case of contracts we do have the unfortunate situation where the displayName would\n  // refer to \"Option\" when it is an option. For these, string it out, only using when actually\n  // not a top-level element to be used\n  return typeDef.displayName && !INFO_WRAP.some(i => typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);\n}\nexport function withTypeString(registry, typeDef) {\n  return objectSpread({}, typeDef, {\n    type: encodeType(registry, typeDef, false)\n  });\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize } from '@polkadot/types-codec';\nimport { isNumber, isString, objectSpread } from '@polkadot/util';\nimport { TypeDefInfo } from \"../types/index.js\";\nimport { typeSplit } from \"./typeSplit.js\";\nconst KNOWN_INTERNALS = ['_alias', '_fallback'];\n\nfunction getTypeString(typeOrObj) {\n  return isString(typeOrObj) ? typeOrObj.toString() : JSON.stringify(typeOrObj);\n}\n\nfunction isRustEnum(details) {\n  const values = Object.values(details);\n\n  if (values.some(v => isNumber(v))) {\n    if (!values.every(v => isNumber(v) && v >= 0 && v <= 255)) {\n      throw new Error('Invalid number-indexed enum definition');\n    }\n\n    return false;\n  }\n\n  return true;\n} // decode an enum of either of the following forms\n//  { _enum: ['A', 'B', 'C'] }\n//  { _enum: { A: AccountId, B: Balance, C: u32 } }\n//  { _enum: { A: 1, B: 2 } }\n\n\nfunction _decodeEnum(value, details, count, fallbackType) {\n  value.info = TypeDefInfo.Enum;\n  value.fallbackType = fallbackType; // not as pretty, but remain compatible with oo7 for both struct and Array types\n\n  if (Array.isArray(details)) {\n    value.sub = details.map((name, index) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  } else if (isRustEnum(details)) {\n    value.sub = Object.entries(details).map(([name, typeOrObj], index) => objectSpread({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {\n      name\n    }, count), {\n      index\n    }));\n  } else {\n    value.sub = Object.entries(details).map(([name, index]) => ({\n      index,\n      info: TypeDefInfo.Plain,\n      name,\n      type: 'Null'\n    }));\n  }\n\n  return value;\n} // decode a set of the form\n//   { _set: { A: 0b0001, B: 0b0010, C: 0b0100 } }\n\n\nfunction _decodeSet(value, details, fallbackType) {\n  value.info = TypeDefInfo.Set;\n  value.fallbackType = fallbackType;\n  value.length = details._bitLength;\n  value.sub = Object.entries(details).filter(([name]) => !name.startsWith('_')).map(([name, index]) => ({\n    index,\n    info: TypeDefInfo.Plain,\n    name,\n    type: 'Null'\n  }));\n  return value;\n} // decode a struct, set or enum\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeStruct(value, type, _, count) {\n  const parsed = JSON.parse(type);\n  const keys = Object.keys(parsed);\n\n  if (keys.includes('_enum')) {\n    return _decodeEnum(value, parsed._enum, count, parsed._fallback);\n  } else if (keys.includes('_set')) {\n    return _decodeSet(value, parsed._set, parsed._fallback);\n  }\n\n  value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;\n  value.fallbackType = parsed._fallback;\n  value.sub = keys.filter(name => !KNOWN_INTERNALS.includes(name)).map(name => getTypeDef(getTypeString(parsed[name]), {\n    name\n  }, count));\n  return value;\n} // decode a fixed vector, e.g. [u8;32]\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeFixedVec(value, type, _, count) {\n  const max = type.length - 1;\n  let index = -1;\n  let inner = 0;\n\n  for (let i = 1; i < max && index === -1; i++) {\n    switch (type[i]) {\n      case ';':\n        {\n          if (inner === 0) {\n            index = i;\n          }\n\n          break;\n        }\n\n      case '[':\n      case '(':\n      case '<':\n        inner++;\n        break;\n\n      case ']':\n      case ')':\n      case '>':\n        inner--;\n        break;\n    }\n  }\n\n  if (index === -1) {\n    throw new Error(`${type}: Unable to extract location of ';'`);\n  }\n\n  const vecType = type.substring(1, index);\n  const [strLength, displayName] = type.substring(index + 1, max).split(';');\n  const length = parseInt(strLength.trim(), 10);\n\n  if (length > 2048) {\n    throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);\n  }\n\n  value.displayName = displayName;\n  value.length = length;\n  value.sub = getTypeDef(vecType, {}, count);\n  return value;\n} // decode a tuple\n\n\nfunction _decodeTuple(value, _, subType, count) {\n  value.sub = subType.length === 0 ? [] : typeSplit(subType).map(inner => getTypeDef(inner, {}, count));\n  return value;\n} // decode a Int/UInt<bitLength[, name]>\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeAnyInt(value, type, _, clazz) {\n  const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');\n  const length = parseInt(strLength.trim(), 10);\n\n  if (length > 8192 || length % 8) {\n    throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);\n  }\n\n  value.displayName = displayName;\n  value.length = length;\n  return value;\n}\n\nfunction _decodeInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'Int');\n}\n\nfunction _decodeUInt(value, type, subType) {\n  return _decodeAnyInt(value, type, subType, 'UInt');\n} // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction _decodeDoNotConstruct(value, type, _) {\n  const NAME_LENGTH = 'DoNotConstruct'.length;\n  value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);\n  return value;\n}\n\nfunction hasWrapper(type, [start, end]) {\n  return type.substring(0, start.length) === start && type.slice(-1 * end.length) === end;\n}\n\nconst nestedExtraction = [['[', ']', TypeDefInfo.VecFixed, _decodeFixedVec], ['{', '}', TypeDefInfo.Struct, _decodeStruct], ['(', ')', TypeDefInfo.Tuple, _decodeTuple], // the inner for these are the same as tuple, multiple values\n['BTreeMap<', '>', TypeDefInfo.BTreeMap, _decodeTuple], ['HashMap<', '>', TypeDefInfo.HashMap, _decodeTuple], ['Int<', '>', TypeDefInfo.Int, _decodeInt], ['Result<', '>', TypeDefInfo.Result, _decodeTuple], ['UInt<', '>', TypeDefInfo.UInt, _decodeUInt], ['DoNotConstruct<', '>', TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]];\nconst wrappedExtraction = [['BTreeSet<', '>', TypeDefInfo.BTreeSet], ['Compact<', '>', TypeDefInfo.Compact], ['Linkage<', '>', TypeDefInfo.Linkage], ['Option<', '>', TypeDefInfo.Option], ['Range<', '>', TypeDefInfo.Range], ['RangeInclusive<', '>', TypeDefInfo.RangeInclusive], ['Vec<', '>', TypeDefInfo.Vec], ['WrapperKeepOpaque<', '>', TypeDefInfo.WrapperKeepOpaque], ['WrapperOpaque<', '>', TypeDefInfo.WrapperOpaque]];\n\nfunction extractSubType(type, [start, end]) {\n  return type.substring(start.length, type.length - end.length);\n}\n\nexport function getTypeDef(_type, {\n  displayName,\n  name\n} = {}, count = 0) {\n  // create the type via Type, allowing types to be sanitized\n  const type = sanitize(_type);\n  const value = {\n    displayName,\n    info: TypeDefInfo.Plain,\n    name,\n    type\n  };\n\n  if (++count > 64) {\n    throw new Error('getTypeDef: Maximum nested limit reached');\n  }\n\n  const nested = nestedExtraction.find(nested => hasWrapper(type, nested));\n\n  if (nested) {\n    value.info = nested[2];\n    return nested[3](value, type, extractSubType(type, nested), count);\n  }\n\n  const wrapped = wrappedExtraction.find(wrapped => hasWrapper(type, wrapped));\n\n  if (wrapped) {\n    value.info = wrapped[2];\n    value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);\n  }\n\n  return value;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// safely split a string on ', ' while taking care of any nested occurences\nexport function typeSplit(type) {\n  const result = []; // these are the depths of the various tokens: <, [, {, (\n\n  let c = 0;\n  let f = 0;\n  let s = 0;\n  let t = 0; // current start position\n\n  let start = 0;\n\n  for (let i = 0; i < type.length; i++) {\n    switch (type[i]) {\n      // if we are not nested, add the type\n      case ',':\n        {\n          if (!(c || f || s || t)) {\n            result.push(type.substring(start, i).trim());\n            start = i + 1;\n          }\n\n          break;\n        }\n      // adjust compact/vec (and friends) depth\n\n      case '<':\n        c++;\n        break;\n\n      case '>':\n        c--;\n        break;\n      // adjust fixed vec depths\n\n      case '[':\n        f++;\n        break;\n\n      case ']':\n        f--;\n        break;\n      // adjust struct depth\n\n      case '{':\n        s++;\n        break;\n\n      case '}':\n        s--;\n        break;\n      // adjust tuple depth\n\n      case '(':\n        t++;\n        break;\n\n      case ')':\n        t--;\n        break;\n    }\n  } // ensure we have all the terminators taken care of\n\n\n  if (c || f || s || t) {\n    throw new Error(`Invalid definition (missing terminators) found in ${type}`);\n  } // the final leg of the journey\n\n\n  result.push(type.substring(start, type.length).trim());\n  return result;\n}","// Copyright 2017-2022 @polkadot/types-create authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nexport function mapXcmTypes(version) {\n  return XCM_MAPPINGS.reduce((all, key) => objectSpread(all, {\n    [key]: `${key}${version}`\n  }), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { lazyMethod } from '@polkadot/util';\nexport function lazyVariants(lookup, {\n  type\n}, getName, creator) {\n  const result = {};\n  const variants = lookup.getSiType(type).def.asVariant.variants;\n\n  for (let i = 0; i < variants.length; i++) {\n    lazyMethod(result, variants[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { DoNotConstruct, Json, Raw } from '@polkadot/types-codec';\nimport { constructTypeClass, createClassUnsafe, createTypeUnsafe } from '@polkadot/types-create';\nimport { assertReturn, BN_ZERO, formatBalance, isFunction, isNumber, isString, isU8a, lazyMethod, logger, objectSpread, stringCamelCase, stringify } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { decorateConstants, filterCallsSome, filterEventsSome } from \"../metadata/decorate/index.js\";\nimport { createCallFunction } from \"../metadata/decorate/extrinsics/index.js\";\nimport { Metadata } from \"../metadata/Metadata.js\";\nimport { PortableRegistry } from \"../metadata/PortableRegistry/index.js\";\nimport { lazyVariants } from \"./lazy.js\";\nconst DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);\nconst l = logger('registry');\n\nfunction sortDecimalStrings(a, b) {\n  return parseInt(a, 10) - parseInt(b, 10);\n}\n\nfunction valueToString(v) {\n  return v.toString();\n}\n\nfunction getFieldArgs(lookup, fields) {\n  const args = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    args[i] = lookup.getTypeDef(fields[i].type).type;\n  }\n\n  return args;\n}\n\nfunction clearRecord(record) {\n  const keys = Object.keys(record);\n\n  for (let i = 0; i < keys.length; i++) {\n    delete record[keys[i]];\n  }\n}\n\nfunction getVariantStringIdx({\n  index\n}) {\n  return index.toString();\n} // create error mapping from metadata\n\n\nfunction injectErrors(_, {\n  lookup,\n  pallets\n}, version, result) {\n  clearRecord(result);\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      errors,\n      index,\n      name\n    } = pallets[i];\n\n    if (errors.isSome) {\n      const sectionName = stringCamelCase(name);\n      lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, errors.unwrap(), getVariantStringIdx, ({\n        docs,\n        fields,\n        index,\n        name\n      }) => ({\n        args: getFieldArgs(lookup, fields),\n        docs: docs.map(valueToString),\n        fields,\n        index: index.toNumber(),\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      })));\n    }\n  }\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterEventsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      events,\n      index,\n      name\n    } = filtered[i];\n    lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, events.unwrap(), getVariantStringIdx, variant => {\n      const meta = registry.createType('EventMetadataLatest', objectSpread({}, variant, {\n        args: getFieldArgs(lookup, variant.fields)\n      }));\n      return class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, meta, stringCamelCase(name), variant.name.toString());\n        }\n\n      };\n    }));\n  }\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, {\n  lookup,\n  pallets\n}, version, result) {\n  const filtered = pallets.filter(filterCallsSome);\n  clearRecord(result);\n\n  for (let i = 0; i < filtered.length; i++) {\n    const {\n      calls,\n      index,\n      name\n    } = filtered[i];\n    const sectionIndex = version >= 12 ? index.toNumber() : i;\n    lazyMethod(result, sectionIndex, () => lazyVariants(lookup, calls.unwrap(), getVariantStringIdx, variant => createCallFunction(registry, lookup, variant, stringCamelCase(name), sectionIndex)));\n  }\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = constants.system && (constants.system.sS58Prefix || constants.system.ss58Prefix);\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createTypeUnsafe('ChainProperties', [{\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  }]);\n}\n\nexport class TypeRegistry {\n  #classes = new Map();\n  #definitions = new Map();\n  #firstCallIndex = null;\n  #lookup;\n  #metadata;\n  #metadataVersion = 0;\n  #metadataCalls = {};\n  #metadataErrors = {};\n  #metadataEvents = {};\n  #unknownTypes = new Map();\n  #chainProperties;\n  #hasher = blake2AsU8a;\n  #knownDefaults;\n  #knownDefinitions;\n  #knownTypes = {};\n  #signedExtensions = fallbackExtensions;\n  #userExtensions;\n\n  constructor(createdAtHash) {\n    this.#knownDefaults = objectSpread({\n      Json,\n      Metadata,\n      PortableRegistry,\n      Raw\n    }, baseTypes);\n    this.#knownDefinitions = definitions;\n    const allKnown = Object.values(this.#knownDefinitions);\n\n    for (let i = 0; i < allKnown.length; i++) {\n      this.register(allKnown[i].types);\n    }\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  get chainDecimals() {\n    var _this$chainProperties;\n\n    if ((_this$chainProperties = this.#chainProperties) !== null && _this$chainProperties !== void 0 && _this$chainProperties.tokenDecimals.isSome) {\n      const allDecimals = this.#chainProperties.tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _this$chainProperties2;\n\n    return (_this$chainProperties2 = this.#chainProperties) !== null && _this$chainProperties2 !== void 0 && _this$chainProperties2.ss58Format.isSome ? this.#chainProperties.ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _this$chainProperties3;\n\n    if ((_this$chainProperties3 = this.#chainProperties) !== null && _this$chainProperties3 !== void 0 && _this$chainProperties3.tokenSymbol.isSome) {\n      const allTokens = this.#chainProperties.tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(valueToString);\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n\n  get firstCallIndex() {\n    return this.#firstCallIndex || DEFAULT_FIRST_CALL_IDX;\n  }\n  /**\n   * @description Returns true if the type is in a Compat format\n   */\n\n\n  isLookupType(value) {\n    return /Lookup\\d+$/.test(value);\n  }\n  /**\n   * @description Creates a lookup string from the supplied id\n   */\n\n\n  createLookupType(lookupId) {\n    return `Lookup${lookupId.toString()}`;\n  }\n\n  get knownTypes() {\n    return this.#knownTypes;\n  }\n\n  get lookup() {\n    return assertReturn(this.#lookup, 'Lookup has not been set on this registry');\n  }\n\n  get metadata() {\n    return assertReturn(this.#metadata, 'Metadata has not been set on this registry');\n  }\n\n  get unknownTypes() {\n    return [...this.#unknownTypes.keys()];\n  }\n\n  get signedExtensions() {\n    return this.#signedExtensions;\n  }\n\n  clearCache() {\n    this.#classes = new Map();\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    return createClassUnsafe(this, type);\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClassUnsafe(type) {\n    return createClassUnsafe(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createTypeUnsafe(this, type, params);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createTypeUnsafe(type, params, options) {\n    return createTypeUnsafe(this, type, params, options);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const [section, method] = [callIndex[0], callIndex[1]];\n    return assertReturn(this.#metadataCalls[`${section}`] && this.#metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const [section, method] = isU8a(errorIndex) ? [errorIndex[0], errorIndex[1]] : [errorIndex.index.toNumber(), isU8a(errorIndex.error) ? errorIndex.error[0] : errorIndex.error.toNumber()];\n    return assertReturn(this.#metadataErrors[`${section}`] && this.#metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const [section, method] = [eventIndex[0], eventIndex[1]];\n    return assertReturn(this.#metadataEvents[`${section}`] && this.#metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown, knownTypeDef) {\n    return this.getUnsafe(name, withUnknown, knownTypeDef);\n  }\n\n  getUnsafe(name, withUnknown, knownTypeDef) {\n    let Type = this.#classes.get(name) || this.#knownDefaults[name]; // we have not already created the type, attempt it\n\n    if (!Type) {\n      const definition = this.#definitions.get(name);\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClassUnsafe(this, definition);\n      } else if (knownTypeDef) {\n        BaseType = constructTypeClass(this, knownTypeDef);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n        this.#unknownTypes.set(name, true);\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n        this.#classes.set(name, Type); // In the case of lookups, we also want to store the actual class against\n        // the lookup name, instad of having to traverse again\n\n        if (knownTypeDef && isNumber(knownTypeDef.lookupIndex)) {\n          this.#classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);\n        }\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return this.#chainProperties;\n  }\n\n  getClassName(Type) {\n    // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of\n    // items such as u32 & U32, we get the lowercase versions here... not quite as optimal\n    // (previously this used to be a simple find & return)\n    const names = [];\n\n    for (const [name, Clazz] of Object.entries(this.#knownDefaults)) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    }\n\n    for (const [name, Clazz] of this.#classes.entries()) {\n      if (Type === Clazz) {\n        names.push(name);\n      }\n    } // both sort and reverse are done in-place\n\n\n    names.sort().reverse();\n    return names.length ? names[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return this.#definitions.get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _this$knownTypes, _this$knownTypes$type, _this$knownTypes$type2, _this$knownTypes$type3, _this$knownTypes$type4;\n\n    return (_this$knownTypes = this.#knownTypes) === null || _this$knownTypes === void 0 ? void 0 : (_this$knownTypes$type = _this$knownTypes.typesBundle) === null || _this$knownTypes$type === void 0 ? void 0 : (_this$knownTypes$type2 = _this$knownTypes$type.spec) === null || _this$knownTypes$type2 === void 0 ? void 0 : (_this$knownTypes$type3 = _this$knownTypes$type2[specName]) === null || _this$knownTypes$type3 === void 0 ? void 0 : (_this$knownTypes$type4 = _this$knownTypes$type3.instances) === null || _this$knownTypes$type4 === void 0 ? void 0 : _this$knownTypes$type4[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    const Clazz = this.get(name);\n\n    if (!Clazz) {\n      throw new Error(msg || `type ${name} not found`);\n    }\n\n    return Clazz;\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(this.#signedExtensions, 'payload', this.#userExtensions);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(this.#signedExtensions, 'extrinsic', this.#userExtensions);\n  }\n\n  hasClass(name) {\n    return this.#classes.has(name) || !!this.#knownDefaults[name];\n  }\n\n  hasDef(name) {\n    return this.#definitions.has(name);\n  }\n\n  hasType(name) {\n    return !this.#unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', this.#hasher(data));\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      this.#classes.set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      if (!isFunction(arg2)) {\n        throw new Error(`Expected class definition passed to '${arg1}' registration`);\n      } else if (arg1 === arg2.toString()) {\n        throw new Error(`Unable to register circular ${arg1} === ${arg1}`);\n      }\n\n      this.#classes.set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    const entries = Object.entries(obj);\n\n    for (let e = 0; e < entries.length; e++) {\n      const [name, type] = entries[e];\n\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        this.#classes.set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n\n        if (name === def) {\n          throw new Error(`Unable to register circular ${name} === ${def}`);\n        } // we already have this type, remove the classes registered for it\n\n\n        if (this.#classes.has(name)) {\n          this.#classes.delete(name);\n        }\n\n        this.#definitions.set(name, def);\n      }\n    }\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      this.#chainProperties = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    this.#hasher = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    this.#knownTypes = knownTypes;\n  }\n\n  setLookup(lookup) {\n    this.#lookup = lookup; // register all applicable types found\n\n    lookup.register();\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    this.#metadata = metadata.asLatest;\n    this.#metadataVersion = metadata.version;\n    this.#firstCallIndex = null; // attach the lookup at this point (before injecting)\n\n    this.setLookup(this.#metadata.lookup);\n    injectExtrinsics(this, this.#metadata, this.#metadataVersion, this.#metadataCalls);\n    injectErrors(this, this.#metadata, this.#metadataVersion, this.#metadataErrors);\n    injectEvents(this, this.#metadata, this.#metadataVersion, this.#metadataEvents); // set the default call index (the lowest section, the lowest method)\n    // in most chains this should be 0,0\n\n    const [defSection] = Object.keys(this.#metadataCalls).sort(sortDecimalStrings);\n\n    if (defSection) {\n      const [defMethod] = Object.keys(this.#metadataCalls[defSection]).sort(sortDecimalStrings);\n\n      if (defMethod) {\n        this.#firstCallIndex = new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]);\n      }\n    } // setup the available extensions\n\n\n    this.setSignedExtensions(signedExtensions || (this.#metadata.extrinsic.version.gt(BN_ZERO) // FIXME Use the extension and their injected types\n    ? this.#metadata.extrinsic.signedExtensions.map(({\n      identifier\n    }) => identifier.toString()) : fallbackExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions) {\n    this.#signedExtensions = signedExtensions;\n    this.#userExtensions = userExtensions;\n    const unknown = findUnknownExtensions(this.#signedExtensions, this.#userExtensions);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { ethereumEncode, isEthereumAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (isHex(value) || isEthereumAddress(value.toString())) {\n    return hexToU8a(value.toString());\n  } else if (isString(value)) {\n    return u8aToU8a(value);\n  }\n\n  return value;\n}\n/**\n * @name GenericEthereumAccountId\n * @description\n * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with\n * underlying addresses (20 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericEthereumAccountId extends U8aFixed {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAccountId(value), 160);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return ethereumEncode(this);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountIndex } from \"../generic/AccountIndex.js\";\nimport { GenericEthereumAccountId } from \"./AccountId.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 20 ? registry.createTypeUnsafe('EthereumAccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 20) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericEthereumLookupSource ? value.inner : value instanceof GenericEthereumAccountId || value instanceof GenericAccountIndex ? value : isU8a(value) || Array.isArray(value) || isHex(value) ? decodeU8a(registry, u8aToU8a(value)) : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : decodeString(registry, value);\n}\n/**\n * @name GenericEthereumLookupSource\n * @description\n * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericEthereumLookupSource extends AbstractBase {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { assert, compactAddLength, compactFromU8a, compactToU8a, isHex, isU8a, objectProperty, objectSpread, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { BIT_SIGNED, BIT_UNSIGNED, DEFAULT_VERSION, UNMASK_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicUnknown', // v0 is unknown\n'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicV4'];\nexport { EXTRINSIC_VERSION as LATEST_EXTRINSIC_VERSION } from \"./v4/Extrinsic.js\";\n/** @internal */\n\nfunction newFromValue(registry, value, version) {\n  if (value instanceof GenericExtrinsic) {\n    return value.unwrap();\n  }\n\n  const isSigned = (version & BIT_SIGNED) === BIT_SIGNED;\n  const type = VERSIONS[version & UNMASK_VERSION] || VERSIONS[0]; // we cast here since the VERSION definition is incredibly broad - we don't have a\n  // slice for \"only add extrinsic types\", and more string definitions become unwieldy\n\n  return registry.createTypeUnsafe(type, [value, {\n    isSigned,\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction decodeExtrinsic(registry, value, version = DEFAULT_VERSION) {\n  if (isU8a(value) || Array.isArray(value) || isHex(value)) {\n    return decodeU8a(registry, u8aToU8a(value), version);\n  } else if (value instanceof registry.createClassUnsafe('Call')) {\n    return newFromValue(registry, {\n      method: value\n    }, version);\n  }\n\n  return newFromValue(registry, value, version);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value, version) {\n  if (!value.length) {\n    return newFromValue(registry, new Uint8Array(), version);\n  }\n\n  const [offset, length] = compactFromU8a(value);\n  const total = offset + length.toNumber();\n  assert(total <= value.length, () => `Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);\n  const data = value.subarray(offset, total);\n  return newFromValue(registry, data.subarray(1), data[0]);\n}\n\nclass ExtrinsicBase extends AbstractBase {\n  constructor(registry, value, initialU8aLength) {\n    super(registry, value, initialU8aLength);\n    const signKeys = Object.keys(registry.getSignedExtensionTypes());\n\n    const getter = key => this.inner.signature[key]; // This is on the abstract class, ensuring that hasOwnProperty operates\n    // correctly, i.e. it needs to be on the base class exposing it\n\n\n    for (let i = 0; i < signKeys.length; i++) {\n      objectProperty(this, signKeys[i], getter);\n    }\n  }\n  /**\n   * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]\n   */\n\n\n  get args() {\n    return this.method.args;\n  }\n  /**\n   * @description The argument definitions, compatible with [[Call]]\n   */\n\n\n  get argsDef() {\n    return this.method.argsDef;\n  }\n  /**\n   * @description The actual `[sectionIndex, methodIndex]` as used in the Call\n   */\n\n\n  get callIndex() {\n    return this.method.callIndex;\n  }\n  /**\n   * @description The actual data for the Call\n   */\n\n\n  get data() {\n    return this.method.data;\n  }\n  /**\n   * @description The era for this extrinsic\n   */\n\n\n  get era() {\n    return this.inner.signature.era;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description `true` id the extrinsic is signed\n   */\n\n\n  get isSigned() {\n    return this.inner.signature.isSigned;\n  }\n  /**\n   * @description The length of the actual data, excluding prefix\n   */\n\n\n  get length() {\n    return this.toU8a(true).length;\n  }\n  /**\n   * @description The [[FunctionMetadataLatest]] that describes the extrinsic\n   */\n\n\n  get meta() {\n    return this.method.meta;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The nonce for this extrinsic\n   */\n\n\n  get nonce() {\n    return this.inner.signature.nonce;\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.inner.signature.signature;\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.inner.signature.signer;\n  }\n  /**\n   * @description Forwards compat\n   */\n\n\n  get tip() {\n    return this.inner.signature.tip;\n  }\n  /**\n   * @description Returns the raw transaction version (not flagged with signing information)\n  */\n\n\n  get type() {\n    return this.inner.version;\n  }\n\n  get inner() {\n    return this.unwrap();\n  }\n  /**\n   * @description Returns the encoded version flag\n  */\n\n\n  get version() {\n    return this.type | (this.isSigned ? BIT_SIGNED : BIT_UNSIGNED);\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return this.method.is(other);\n  }\n\n  unwrap() {\n    return super.unwrap();\n  }\n\n}\n/**\n * @name GenericExtrinsic\n * @description\n * Representation of an Extrinsic in the system. It contains the actual call,\n * (optional) signature and encodes with an actual length prefix\n *\n * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.\n *\n * Can be:\n * - signed, to create a transaction\n * - left as is, to create an inherent\n */\n\n\nexport class GenericExtrinsic extends ExtrinsicBase {\n  #hashCache;\n\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsic(registry, value, version));\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    if (!this.#hashCache) {\n      this.#hashCache = super.hash;\n    }\n\n    return this.#hashCache;\n  }\n  /**\n   * @description Injects an already-generated signature into the extrinsic\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.inner.addSignature(signer, signature, payload);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return {\n      inner: this.isSigned ? this.inner.inspect().inner : this.inner.method.inspect().inner,\n      outer: [compactToU8a(encoded.length), new Uint8Array([this.version])]\n    };\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.inner.sign(account, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.inner.signFake(signer, options);\n    this.#hashCache = undefined;\n    return this;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex(isBare) {\n    return u8aToHex(this.toU8a(isBare));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({}, {\n      isSigned: this.isSigned,\n      method: this.method.toHuman(isExpanded)\n    }, this.isSigned ? {\n      era: this.era.toHuman(isExpanded),\n      nonce: this.nonce.toHuman(isExpanded),\n      signature: this.signature.toHex(),\n      signer: this.signer.toHuman(isExpanded),\n      tip: this.tip.toHuman(isExpanded)\n    } : null);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Extrinsic';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value is not length-prefixed\n   */\n\n\n  toU8a(isBare) {\n    const encoded = u8aConcat(...this.toU8aInner());\n    return isBare ? encoded : compactAddLength(encoded);\n  }\n\n  toU8aInner() {\n    // we do not apply bare to the internal values, rather this only determines out length addition,\n    // where we strip all lengths this creates an extrinsic that cannot be decoded\n    return [new Uint8Array([this.version]), this.inner.toU8a()];\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Raw, Tuple, U64 } from '@polkadot/types-codec';\nimport { assert, bnToBn, formatNumber, hexToU8a, isHex, isObject, isU8a, u8aToBn, u8aToU8a } from '@polkadot/util';\nimport { IMMORTAL_ERA } from \"./constants.js\";\n\nfunction getTrailingZeros(period) {\n  const binary = period.toString(2);\n  let index = 0;\n\n  while (binary[binary.length - 1 - index] === '0') {\n    index++;\n  }\n\n  return index;\n}\n/** @internal */\n\n\nfunction decodeMortalEra(registry, value) {\n  if (isU8a(value) || isHex(value) || Array.isArray(value)) {\n    return decodeMortalU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [new U64(registry), new U64(registry)];\n  } else if (isObject(value)) {\n    return decodeMortalObject(registry, value);\n  }\n\n  throw new Error('Invalid data passed to Mortal era');\n}\n/** @internal */\n\n\nfunction decodeMortalObject(registry, value) {\n  const {\n    current,\n    period\n  } = value;\n  let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));\n  calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);\n  const phase = current % calPeriod;\n  const quantizeFactor = Math.max(calPeriod >> 12, 1);\n  const quantizedPhase = phase / quantizeFactor * quantizeFactor;\n  return [new U64(registry, calPeriod), new U64(registry, quantizedPhase)];\n}\n/** @internal */\n\n\nfunction decodeMortalU8a(registry, value) {\n  if (value.length === 0) {\n    return [new U64(registry), new U64(registry)];\n  }\n\n  const first = u8aToBn(value.subarray(0, 1)).toNumber();\n  const second = u8aToBn(value.subarray(1, 2)).toNumber();\n  const encoded = first + (second << 8);\n  const period = 2 << encoded % (1 << 4);\n  const quantizeFactor = Math.max(period >> 12, 1);\n  const phase = (encoded >> 4) * quantizeFactor;\n  assert(period >= 4 && phase < period, 'Invalid data passed to Mortal era');\n  return [new U64(registry, period), new U64(registry, phase)];\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction decodeExtrinsicEra(value = new Uint8Array()) {\n  if (isU8a(value)) {\n    return !value.length || value[0] === 0 ? new Uint8Array([0]) : new Uint8Array([1, value[0], value[1]]);\n  } else if (!value) {\n    return new Uint8Array([0]);\n  } else if (value instanceof GenericExtrinsicEra) {\n    return decodeExtrinsicEra(value.toU8a());\n  } else if (isHex(value)) {\n    return decodeExtrinsicEra(hexToU8a(value));\n  } else if (isObject(value)) {\n    const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);\n    const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');\n    const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera'); // this is to de-serialize from JSON\n\n    return mortal ? {\n      MortalEra: mortal[1]\n    } : immortal ? {\n      ImmortalEra: immortal[1]\n    } : {\n      MortalEra: value\n    };\n  }\n\n  throw new Error('Invalid data passed to Era');\n}\n/**\n * @name ImmortalEra\n * @description\n * The ImmortalEra for an extrinsic\n */\n\n\nexport class ImmortalEra extends Raw {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  constructor(registry, value) {\n    // For immortals, we always provide the known value (i.e. treated as a\n    // constant no matter how it is constructed - it is a fixed structure)\n    super(registry, IMMORTAL_ERA);\n  }\n\n}\n/**\n * @name MortalEra\n * @description\n * The MortalEra for an extrinsic, indicating period and phase\n */\n\nexport class MortalEra extends Tuple {\n  constructor(registry, value) {\n    super(registry, {\n      period: U64,\n      phase: U64\n    }, decodeMortalEra(registry, value));\n  }\n  /**\n   * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`\n   */\n\n\n  get encodedLength() {\n    return 2;\n  }\n  /**\n   * @description The period of this Mortal wraps as a [[U64]]\n   */\n\n\n  get period() {\n    return this[0];\n  }\n  /**\n   * @description The phase of this Mortal wraps as a [[U64]]\n   */\n\n\n  get phase() {\n    return this[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return {\n      period: formatNumber(this.period),\n      phase: formatNumber(this.phase)\n    };\n  }\n  /**\n   * @description Returns a JSON representation of the actual value\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   * Period and phase are encoded:\n   *   - The period of validity from the block hash found in the signing material.\n   *   - The phase in the period that this transaction's lifetime begins (and, importantly,\n   *     implies which block hash is included in the signature material). If the `period` is\n   *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n   *     `period` is.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    const period = this.period.toNumber();\n    const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + (this.phase.toNumber() / Math.max(period >> 12, 1) << 4);\n    return new Uint8Array([encoded & 0xff, encoded >> 8]);\n  }\n  /**\n   * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.\n   */\n\n\n  birth(current) {\n    const phase = this.phase.toNumber();\n    const period = this.period.toNumber(); // FIXME No toNumber() here\n\n    return ~~((Math.max(bnToBn(current).toNumber(), phase) - phase) / period) * period + phase;\n  }\n  /**\n   * @description Get the block number of the first block at which the era has ended.\n   */\n\n\n  death(current) {\n    // FIXME No toNumber() here\n    return this.birth(current) + this.period.toNumber();\n  }\n\n}\n/**\n * @name GenericExtrinsicEra\n * @description\n * The era for an extrinsic, indicating either a mortal or immortal extrinsic\n */\n\nexport class GenericExtrinsicEra extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      ImmortalEra,\n      MortalEra\n    }, decodeExtrinsicEra(value));\n  }\n  /**\n   * @description Override the encoded length method\n   */\n\n\n  get encodedLength() {\n    return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;\n  }\n  /**\n   * @description Returns the item as a [[ImmortalEra]]\n   */\n\n\n  get asImmortalEra() {\n    assert(this.isImmortalEra, () => `Cannot convert '${this.type}' via asImmortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description Returns the item as a [[MortalEra]]\n   */\n\n\n  get asMortalEra() {\n    assert(this.isMortalEra, () => `Cannot convert '${this.type}' via asMortalEra`);\n    return this.inner;\n  }\n  /**\n   * @description `true` if Immortal\n   */\n\n\n  get isImmortalEra() {\n    return this.index === 0;\n  }\n  /**\n   * @description `true` if Mortal\n   */\n\n\n  get isMortalEra() {\n    return this.index > 0;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { u8aToHex } from '@polkadot/util';\nimport { DEFAULT_VERSION } from \"./constants.js\";\nconst VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown\n'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];\n/** @internal */\n\nfunction decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n  if (value instanceof GenericExtrinsicPayload) {\n    return value.unwrap();\n  }\n\n  return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, {\n    version\n  }]);\n}\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\n\n\nexport class GenericExtrinsicPayload extends AbstractBase {\n  constructor(registry, value, {\n    version\n  } = {}) {\n    super(registry, decodeExtrinsicPayload(registry, value, version));\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.inner.blockHash;\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.inner.era;\n  }\n  /**\n   * @description The genesis block [[Hash]] the signature applies to\n   */\n\n\n  get genesisHash() {\n    // NOTE only v3+\n    return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);\n  }\n  /**\n   * @description The [[Raw]] contained in the payload\n   */\n\n\n  get method() {\n    return this.inner.method;\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.inner.nonce;\n  }\n  /**\n   * @description The specVersion as a [[u32]] for this payload\n   */\n\n\n  get specVersion() {\n    // NOTE only v3+\n    return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description The [[Balance]]\n   */\n\n\n  get tip() {\n    // NOTE from v2+\n    return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);\n  }\n  /**\n   * @description The transaction version as a [[u32]] for this payload\n   */\n\n\n  get transactionVersion() {\n    // NOTE only v4+\n    return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return this.inner.eq(other);\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    const signature = this.inner.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra\n    // information, such as for instance the payload, i.e. `payload: this.toHex()`\n    // For the case here we sign via the extrinsic, we ignore the return, so generally\n    // this is applicable for external signing\n\n    return {\n      signature: u8aToHex(signature)\n    };\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.inner.toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.toHex();\n  }\n  /**\n   * @description Returns a serialized u8a form\n   */\n\n\n  toU8a(isBare) {\n    // call our parent, with only the method stripped\n    return super.toU8a(isBare ? {\n      method: true\n    } : false);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericExtrinsicPayloadUnknown\n * @description\n * A default handler for payloads where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicPayloadUnknown extends Struct {\n  constructor(registry, value, {\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported extrinsic payload version ${version}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { UNMASK_VERSION } from \"./constants.js\";\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\n\nexport class GenericExtrinsicUnknown extends Struct {\n  constructor(registry, value, {\n    isSigned = false,\n    version = 0\n  } = {}) {\n    super(registry, {});\n    throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & UNMASK_VERSION}`);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Option, Struct } from '@polkadot/types-codec';\nimport { objectProperty, objectSpread, u8aToHex } from '@polkadot/util';\nconst knownTypes = {\n  address: 'Address',\n  blockHash: 'Hash',\n  blockNumber: 'BlockNumber',\n  era: 'ExtrinsicEra',\n  genesisHash: 'Hash',\n  method: 'Call',\n  nonce: 'Compact<Index>',\n  runtimeVersion: 'RuntimeVersion',\n  signedExtensions: 'Vec<Text>',\n  tip: 'Compact<Balance>',\n  version: 'u8'\n};\n/**\n * @name GenericSignerPayload\n * @description\n * A generic signer payload that can be used for serialization between API and signer\n */\n\nexport class GenericSignerPayload extends Struct {\n  #extraTypes;\n\n  constructor(registry, value) {\n    const extensionTypes = objectSpread({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());\n    super(registry, objectSpread({}, extensionTypes, knownTypes), value);\n    this.#extraTypes = {};\n\n    const getter = key => this.get(key); // add all extras that are not in the base types\n\n\n    for (const [key, type] of Object.entries(extensionTypes)) {\n      if (!knownTypes[key]) {\n        this.#extraTypes[key] = type;\n      }\n\n      objectProperty(this, key, getter);\n    }\n  }\n\n  get address() {\n    return this.getT('address');\n  }\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n\n  get blockNumber() {\n    return this.getT('blockNumber');\n  }\n\n  get era() {\n    return this.getT('era');\n  }\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n\n  get method() {\n    return this.getT('method');\n  }\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n\n  get runtimeVersion() {\n    return this.getT('runtimeVersion');\n  }\n\n  get signedExtensions() {\n    return this.getT('signedExtensions');\n  }\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  get version() {\n    return this.getT('version');\n  }\n  /**\n   * @description Creates an representation of the structure as an ISignerPayload JSON\n   */\n\n\n  toPayload() {\n    const result = {};\n    const keys = Object.keys(this.#extraTypes); // add any explicit overrides we may have\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = this.get(key);\n      const isOption = value instanceof Option; // Don't include Option.isNone\n\n      if (!isOption || value.isSome) {\n        result[key] = value.toHex();\n      }\n    }\n\n    return objectSpread(result, {\n      // the known defaults as managed explicitly and has different\n      // formatting in cases, e.g. we mostly expose a hex format here\n      address: this.address.toString(),\n      blockHash: this.blockHash.toHex(),\n      blockNumber: this.blockNumber.toHex(),\n      era: this.era.toHex(),\n      genesisHash: this.genesisHash.toHex(),\n      method: this.method.toHex(),\n      nonce: this.nonce.toHex(),\n      signedExtensions: this.signedExtensions.map(e => e.toString()),\n      specVersion: this.runtimeVersion.specVersion.toHex(),\n      tip: this.tip.toHex(),\n      transactionVersion: this.runtimeVersion.transactionVersion.toHex(),\n      version: this.version.toNumber()\n    });\n  }\n  /**\n   * @description Creates a representation of the payload in raw Exrinsic form\n   */\n\n\n  toRaw() {\n    const payload = this.toPayload();\n    const data = u8aToHex(this.registry.createTypeUnsafe('ExtrinsicPayload', [payload, {\n      version: payload.version\n    }]) // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)\n    .toU8a({\n      method: true\n    }));\n    return {\n      address: payload.address,\n      data,\n      type: 'payload'\n    };\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BIT_SIGNED = 0b10000000;\nexport const BIT_UNSIGNED = 0;\nexport const EMPTY_U8A = new Uint8Array();\nexport const DEFAULT_VERSION = 4;\nexport const IMMORTAL_ERA = new Uint8Array([0]);\nexport const UNMASK_VERSION = 0b01111111;","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const emptyCheck = {\n  extrinsic: {},\n  payload: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { polkadot } from \"./polkadot.js\";\nimport { shell } from \"./shell.js\";\nimport { statemint } from \"./statemint.js\";\nimport { substrate } from \"./substrate.js\"; // A mapping of the known signed extensions to the extra fields that they\n// contain. Unlike in the actual extensions, we define the extra fields not\n// as a Tuple, but rather as a struct so they can be named. These will be\n// expanded into the various fields when added to the payload (we only\n// support V4 onwards with these, V3 and earlier are deemed fixed))\n\nexport const allExtensions = objectSpread({}, substrate, polkadot, shell, statemint); // the v4 signed extensions prior to the point of exposing these to the\n// metadata. This may not match 100% with the current defaults and are used\n// when not specified in the metadata (which is for very old chains). The\n// order is important here, as applied by default\n\nexport const fallbackExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexport function findUnknownExtensions(extensions, userExtensions = {}) {\n  const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];\n  return extensions.filter(k => !names.includes(k));\n}\nexport function expandExtensionTypes(extensions, type, userExtensions = {}) {\n  return extensions // Always allow user extensions first - these should provide overrides\n  .map(k => userExtensions[k] || allExtensions[k]).filter(info => !!info).reduce((result, info) => objectSpread(result, info[type]), {});\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const polkadot = {\n  LimitParathreadCommits: emptyCheck,\n  OnlyStakingAndClaims: emptyCheck,\n  PrevalidateAttests: emptyCheck,\n  RestrictFunctionality: emptyCheck,\n  TransactionCallFilter: emptyCheck,\n  ValidateDoubleVoteReports: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nexport const shell = {\n  DisallowSigned: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const statemint = {\n  ChargeAssetTxPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>',\n      // eslint-disable-next-line sort-keys\n      assetId: 'Option<AssetId>'\n    },\n    payload: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { emptyCheck } from \"./emptyCheck.js\";\nconst CheckMortality = {\n  extrinsic: {\n    era: 'ExtrinsicEra'\n  },\n  payload: {\n    blockHash: 'Hash'\n  }\n};\nexport const substrate = {\n  ChargeTransactionPayment: {\n    extrinsic: {\n      tip: 'Compact<Balance>'\n    },\n    payload: {}\n  },\n  CheckBlockGasLimit: emptyCheck,\n  CheckEra: CheckMortality,\n  CheckGenesis: {\n    extrinsic: {},\n    payload: {\n      genesisHash: 'Hash'\n    }\n  },\n  CheckMortality,\n  CheckNonZeroSender: emptyCheck,\n  CheckNonce: {\n    extrinsic: {\n      nonce: 'Compact<Index>'\n    },\n    payload: {}\n  },\n  CheckSpecVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckTxVersion: {\n    extrinsic: {},\n    payload: {\n      transactionVersion: 'u32'\n    }\n  },\n  CheckVersion: {\n    extrinsic: {},\n    payload: {\n      specVersion: 'u32'\n    }\n  },\n  CheckWeight: emptyCheck,\n  LockStakingStatus: emptyCheck,\n  ValidateEquivocationReport: emptyCheck\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// a helper function for both types of payloads, Raw and metadata-known\nexport function sign(registry, signerPair, u8a, options) {\n  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;\n  return signerPair.sign(encoded, options);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { isU8a } from '@polkadot/util';\nexport const EXTRINSIC_VERSION = 4;\n\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsic(registry, value, isSigned = false) {\n    if (value instanceof GenericExtrinsicV4) {\n      return value;\n    } else if (value instanceof registry.createClassUnsafe('Call')) {\n      return {\n        method: value\n      };\n    } else if (isU8a(value)) {\n      // here we decode manually since we need to pull through the version information\n      const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, {\n        isSigned\n      }]);\n      const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);\n      return {\n        method,\n        signature\n      };\n    }\n\n    return value || {};\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n  /**\n   * @description The [[ExtrinsicSignatureV4]]\n   */\n\n\n  get signature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The version for the signature\n   */\n\n\n  get version() {\n    return EXTRINSIC_VERSION;\n  }\n  /**\n   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.signature.addSignature(signer, signature, payload);\n    return this;\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.signature.sign(this.method, account, options);\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.signature.signFake(this.method, signer, options);\n    return this;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum, Struct } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\nimport { sign } from \"../util.js\";\n/**\n * @name GenericExtrinsicPayloadV4\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is\n * variable length based on the contents included\n */\n\nexport class GenericExtrinsicPayloadV4 extends Struct {\n  #signOptions;\n\n  constructor(registry, value) {\n    super(registry, objectSpread({\n      method: 'Bytes'\n    }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value); // Do detection for the type of extrinsic, in the case of MultiSignature\n    // this is an enum, in the case of AnySignature, this is a Hash only\n    // (which may be 64 or 65 bytes)\n\n    this.#signOptions = {\n      withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof Enum\n    };\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    return super.inspect({\n      method: true\n    });\n  }\n  /**\n   * @description The block [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get blockHash() {\n    return this.getT('blockHash');\n  }\n  /**\n   * @description The [[ExtrinsicEra]]\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The genesis [[Hash]] the signature applies to (mortal/immortal)\n   */\n\n\n  get genesisHash() {\n    return this.getT('genesisHash');\n  }\n  /**\n   * @description The [[Bytes]] contained in the payload\n   */\n\n\n  get method() {\n    return this.getT('method');\n  }\n  /**\n   * @description The [[Index]]\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n  /**\n   * @description The specVersion for this signature\n   */\n\n\n  get specVersion() {\n    return this.getT('specVersion');\n  }\n  /**\n   * @description The tip [[Balance]]\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n  /**\n   * @description The transactionVersion for this signature\n   */\n\n\n  get transactionVersion() {\n    return this.getT('transactionVersion');\n  }\n  /**\n   * @description\n   * The (optional) asset id for this signature for chains that support transaction fees in assets\n   */\n\n\n  get assetId() {\n    return this.getT('assetId');\n  }\n  /**\n   * @description Sign the payload with the keypair\n   */\n\n\n  sign(signerPair) {\n    // NOTE The `toU8a({ method: true })` argument is absolutely critical, we\n    // don't want the method (Bytes) to have the length prefix included. This\n    // means that the data-as-signed is un-decodable, but is also doesn't need\n    // the extra information, only the pure data (and is not decoded) ...\n    // The same applies to V1..V3, if we have a V5, carrythis comment\n    return sign(this.registry, signerPair, this.toU8a({\n      method: true\n    }), this.#signOptions);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { assert, isU8a, isUndefined, objectProperties, objectSpread, stringify, u8aToHex } from '@polkadot/util';\nimport { EMPTY_U8A, IMMORTAL_ERA } from \"../constants.js\";\nimport { GenericExtrinsicPayloadV4 } from \"./ExtrinsicPayload.js\"; // Ensure we have enough data for all types of signatures\n\nconst FAKE_SIGNATURE = new Uint8Array(256).fill(1);\n\nfunction toAddress(registry, address) {\n  return registry.createTypeUnsafe('Address', [isU8a(address) ? u8aToHex(address) : address]);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nexport class GenericExtrinsicSignatureV4 extends Struct {\n  #signKeys;\n\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    const signTypes = registry.getSignedExtensionTypes();\n    super(registry, objectSpread( // eslint-disable-next-line sort-keys\n    {\n      signer: 'Address',\n      signature: 'ExtrinsicSignature'\n    }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n    this.#signKeys = Object.keys(signTypes);\n    objectProperties(this, this.#signKeys, k => this.get(k));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return EMPTY_U8A;\n    } else if (value instanceof GenericExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.getT('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.getT('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    // the second case here is when we don't have an enum signature, treat as raw\n    return this.multiSignature.value || this.multiSignature;\n  }\n  /**\n   * @description The raw [[ExtrinsicSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.getT('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.getT('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.getT('tip');\n  }\n\n  _injectSignature(signer, signature, payload) {\n    // use the fields exposed to guide the getters\n    for (let i = 0; i < this.#signKeys.length; i++) {\n      const k = this.#signKeys[i];\n      const v = payload.get(k);\n\n      if (!isUndefined(v)) {\n        this.set(k, v);\n      }\n    } // additional fields (exposed in struct itself)\n\n\n    this.set('signer', signer);\n    this.set('signature', signature);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new GenericExtrinsicPayloadV4(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, options) {\n    const {\n      era,\n      runtimeVersion: {\n        specVersion,\n        transactionVersion\n      }\n    } = options;\n    return new GenericExtrinsicPayloadV4(this.registry, objectSpread({}, options, {\n      era: era || IMMORTAL_ERA,\n      method: method.toHex(),\n      specVersion,\n      transactionVersion\n    }));\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    assert(account && account.addressRaw, () => `Expected a valid keypair for signing, found ${stringify(account)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    assert(address, () => `Expected a valid address for signing, found ${stringify(address)}`);\n    const payload = this.createPayload(method, options);\n    return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : EMPTY_U8A;\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { assert, hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n/** @internal */\n\nfunction decodeAccountId(value) {\n  if (isU8a(value) || Array.isArray(value)) {\n    return u8aToU8a(value);\n  } else if (!value) {\n    return new Uint8Array();\n  } else if (isHex(value)) {\n    return hexToU8a(value);\n  } else if (isString(value)) {\n    return decodeAddress(value.toString());\n  }\n\n  throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);\n}\n/**\n * @name GenericAccountId\n * @description\n * A wrapper around an AccountId/PublicKey representation. Since we are dealing with\n * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\n\n\nexport class GenericAccountId extends U8aFixed {\n  constructor(registry, value) {\n    const decoded = decodeAccountId(value); // Part of stream containing >= 32 bytes or a all empty (defaults)\n\n    assert(decoded.length >= 32 || !decoded.some(b => b), () => `Invalid AccountId provided, expected 32 bytes, found ${decoded.length}`);\n    super(registry, decoded, 256);\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return super.eq(decodeAccountId(other));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return encodeAddress(this, this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountId';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u32 } from '@polkadot/types-codec';\nimport { BN, bnToBn, isBigInt, isBn, isHex, isNumber, isU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nconst PREFIX_1BYTE = 0xef;\nconst PREFIX_2BYTE = 0xfc;\nconst PREFIX_4BYTE = 0xfd;\nconst PREFIX_8BYTE = 0xfe;\nconst MAX_1BYTE = new BN(PREFIX_1BYTE);\nconst MAX_2BYTE = new BN(1).shln(16);\nconst MAX_4BYTE = new BN(1).shln(32);\n/** @internal */\n\nfunction decodeAccountIndex(value) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  if (value instanceof GenericAccountIndex) {\n    // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an\n    // AccountIndex), which has the initial `toString()` implementation.\n    return value.toBn();\n  } else if (isBn(value) || isNumber(value) || isHex(value) || isU8a(value) || isBigInt(value)) {\n    return value;\n  }\n\n  return decodeAccountIndex(decodeAddress(value));\n}\n/**\n * @name GenericAccountIndex\n * @description\n * A wrapper around an AccountIndex, which is a shortened, variable-length encoding\n * for an Account. We extends from [[U32]] to provide the number-like properties.\n */\n\n\nexport class GenericAccountIndex extends u32 {\n  constructor(registry, value = new BN(0)) {\n    super(registry, decodeAccountIndex(value));\n  }\n\n  static calcLength(_value) {\n    const value = bnToBn(_value);\n\n    if (value.lte(MAX_1BYTE)) {\n      return 1;\n    } else if (value.lt(MAX_2BYTE)) {\n      return 2;\n    } else if (value.lt(MAX_4BYTE)) {\n      return 4;\n    }\n\n    return 8;\n  }\n\n  static readLength(input) {\n    const first = input[0];\n\n    if (first === PREFIX_2BYTE) {\n      return [1, 2];\n    } else if (first === PREFIX_4BYTE) {\n      return [1, 4];\n    } else if (first === PREFIX_8BYTE) {\n      return [1, 8];\n    }\n\n    return [0, 1];\n  }\n\n  static writeLength(input) {\n    switch (input.length) {\n      case 2:\n        return new Uint8Array([PREFIX_2BYTE]);\n\n      case 4:\n        return new Uint8Array([PREFIX_4BYTE]);\n\n      case 8:\n        return new Uint8Array([PREFIX_8BYTE]);\n\n      default:\n        return new Uint8Array([]);\n    }\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    // shortcut for BN or Number, don't create an object\n    if (isBn(other) || isNumber(other)) {\n      return super.eq(other);\n    } // convert and compare\n\n\n    return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    const length = GenericAccountIndex.calcLength(this);\n    return encodeAddress(this.toU8a().subarray(0, length), this.registry.chainSS58);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'AccountIndex';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\n\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      header: 'Header',\n      // eslint-disable-next-line sort-keys\n      extrinsics: 'Vec<Extrinsic>'\n    }, value);\n  }\n  /**\n   * @description Encodes a content [[Hash]] for the block\n   */\n\n\n  get contentHash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The [[Extrinsic]] contained in the block\n   */\n\n\n  get extrinsics() {\n    return this.getT('extrinsics');\n  }\n  /**\n   * @description Block/header [[Hash]]\n   */\n\n\n  get hash() {\n    return this.header.hash;\n  }\n  /**\n   * @description The [[Header]] of the block\n   */\n\n\n  get header() {\n    return this.getT('header');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct, U8aFixed } from '@polkadot/types-codec';\nimport { isHex, isObject, isU8a, objectSpread, u8aToU8a } from '@polkadot/util';\n\n/**\n * Get a mapping of `argument name -> argument type` for the function, from\n * its metadata.\n *\n * @param meta - The function metadata used to get the definition.\n * @internal\n */\nfunction getArgsDef(registry, meta) {\n  return meta.fields.reduce((result, {\n    name,\n    type\n  }, index) => {\n    result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);\n    return result;\n  }, {});\n}\n/** @internal */\n\n\nfunction decodeCallViaObject(registry, value, _meta) {\n  // we only pass args/methodsIndex out\n  const {\n    args,\n    callIndex\n  } = value; // Get the correct lookupIndex\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  const lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex; // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(lookupIndex).meta;\n\n  return {\n    args,\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/** @internal */\n\n\nfunction decodeCallViaU8a(registry, value, _meta) {\n  // We need 2 bytes for the callIndex\n  const callIndex = registry.firstCallIndex.slice();\n  callIndex.set(value.subarray(0, 2), 0); // Find metadata with callIndex\n\n  const meta = _meta || registry.findMetaCall(callIndex).meta;\n\n  return {\n    args: value.subarray(2),\n    argsDef: getArgsDef(registry, meta),\n    callIndex,\n    meta\n  };\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param value - Value to decode, one of:\n * - hex\n * - Uint8Array\n * - {@see DecodeMethodInput}\n * @param _meta - Metadata to use, so that `injectMethods` lookup is not\n * necessary.\n * @internal\n */\n\n\nfunction decodeCall(registry, value = new Uint8Array(), _meta) {\n  if (isU8a(value) || isHex(value)) {\n    return decodeCallViaU8a(registry, u8aToU8a(value), _meta);\n  } else if (isObject(value) && value.callIndex && value.args) {\n    return decodeCallViaObject(registry, value, _meta);\n  }\n\n  throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);\n}\n/**\n * @name GenericCallIndex\n * @description\n * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method\n */\n\n\nexport class GenericCallIndex extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, value, 16);\n  }\n\n}\n/**\n * @name GenericCall\n * @description\n * Extrinsic function descriptor\n */\n\nexport class GenericCall extends Struct {\n  constructor(registry, value, meta) {\n    const decoded = decodeCall(registry, value, meta);\n\n    try {\n      super(registry, {\n        callIndex: GenericCallIndex,\n        // eslint-disable-next-line sort-keys\n        args: Struct.with(decoded.argsDef)\n      }, decoded);\n    } catch (error) {\n      let method = 'unknown.unknown';\n\n      try {\n        const c = registry.findMetaCall(decoded.callIndex);\n        method = `${c.section}.${c.method}`;\n      } catch (error) {// ignore\n      }\n\n      throw new Error(`Call: failed decoding ${method}:: ${error.message}`);\n    }\n\n    this._meta = decoded.meta;\n  }\n  /**\n   * @description The arguments for the function call\n   */\n\n\n  get args() {\n    return [...this.getT('args').values()];\n  }\n  /**\n   * @description The argument definitions\n   */\n\n\n  get argsDef() {\n    return getArgsDef(this.registry, this.meta);\n  }\n  /**\n   * @description The argument entries\n   */\n\n\n  get argsEntries() {\n    return [...this.getT('args').entries()];\n  }\n  /**\n   * @description The encoded `[sectionIndex, methodIndex]` identifier\n   */\n\n\n  get callIndex() {\n    return this.getT('callIndex').toU8a();\n  }\n  /**\n   * @description The encoded data\n   */\n\n\n  get data() {\n    return this.getT('args').toU8a();\n  }\n  /**\n   * @description The [[FunctionMetadata]]\n   */\n\n\n  get meta() {\n    return this._meta;\n  }\n  /**\n   * @description Returns the name of the method\n   */\n\n\n  get method() {\n    return this.registry.findMetaCall(this.callIndex).method;\n  }\n  /**\n   * @description Returns the module containing the method\n   */\n\n\n  get section() {\n    return this.registry.findMetaCall(this.callIndex).section;\n  }\n  /**\n   * @description Checks if the source matches this in type\n   */\n\n\n  is(other) {\n    return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    var _call, _call2;\n\n    let call;\n\n    try {\n      call = this.registry.findMetaCall(this.callIndex);\n    } catch (error) {// swallow\n    }\n\n    return objectSpread({\n      args: this.argsEntries.reduce((args, [n, a]) => objectSpread(args, {\n        [n]: a.toHuman(isExpanded)\n      }), {}),\n      method: (_call = call) === null || _call === void 0 ? void 0 : _call.method,\n      section: (_call2 = call) === null || _call2 === void 0 ? void 0 : _call2.section\n    }, isExpanded && call ? {\n      docs: call.meta.docs.map(d => d.toString())\n    } : null);\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Call';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Json } from '@polkadot/types-codec';\nimport { isFunction, isNull, isUndefined } from '@polkadot/util';\n\nfunction createValue(registry, type, value, asArray = true) {\n  // We detect codec here as well - when found, generally this is constructed from itself\n  if (value && isFunction(value.unwrapOrDefault)) {\n    return value;\n  }\n\n  return registry.createTypeUnsafe(type, [asArray ? isNull(value) || isUndefined(value) ? null : Array.isArray(value) ? value : [value] : value]);\n}\n\nfunction decodeValue(registry, key, value) {\n  return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : value;\n}\n\nfunction decode(registry, value) {\n  return ( // allow decoding from a map as well (ourselves)\n  value && isFunction(value.entries) ? [...value.entries()] : Object.entries(value || {})).reduce((all, [key, value]) => {\n    all[key] = decodeValue(registry, key, value);\n    return all;\n  }, {\n    ss58Format: registry.createTypeUnsafe('Option<u32>', []),\n    tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),\n    tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])\n  });\n}\n\nexport class GenericChainProperties extends Json {\n  constructor(registry, value) {\n    super(registry, decode(registry, value));\n  }\n  /**\n   * @description The chain ss58Format\n   */\n\n\n  get ss58Format() {\n    return this.getT('ss58Format');\n  }\n  /**\n   * @description The decimals for each of the tokens\n   */\n\n\n  get tokenDecimals() {\n    return this.getT('tokenDecimals');\n  }\n  /**\n   * @description The symbols for the tokens\n   */\n\n\n  get tokenSymbol() {\n    return this.getT('tokenSymbol');\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8aFixed } from '@polkadot/types-codec';\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nexport const CID_AURA = stringToU8a('aura');\nexport const CID_BABE = stringToU8a('BABE');\nexport const CID_GRPA = stringToU8a('FRNK');\nexport const CID_POW = stringToU8a('pow_');\n\nfunction getAuraAuthor(registry, bytes, sessionValidators) {\n  return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)]).slotNumber.mod(new BN(sessionValidators.length)).toNumber()];\n}\n\nfunction getBabeAuthor(registry, bytes, sessionValidators) {\n  const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);\n  return sessionValidators[digest.value.toNumber()];\n}\n\nfunction getBytesAsAuthor(registry, bytes) {\n  return registry.createTypeUnsafe('AccountId', [bytes]);\n}\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\n\n\nexport class GenericConsensusEngineId extends U8aFixed {\n  constructor(registry, value) {\n    super(registry, isNumber(value) ? bnToU8a(value, {\n      isLe: false\n    }) : value, 32);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  get isAura() {\n    return this.eq(CID_AURA);\n  }\n  /**\n   * @description `true` is the engine matches babe\n   */\n\n\n  get isBabe() {\n    return this.eq(CID_BABE);\n  }\n  /**\n   * @description `true` is the engine matches grandpa\n   */\n\n\n  get isGrandpa() {\n    return this.eq(CID_GRPA);\n  }\n  /**\n   * @description `true` is the engine matches pow\n   */\n\n\n  get isPow() {\n    return this.eq(CID_POW);\n  }\n  /**\n   * @description From the input bytes, decode into an author\n   */\n\n\n  extractAuthor(bytes, sessionValidators) {\n    if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {\n      if (this.isAura) {\n        return getAuraAuthor(this.registry, bytes, sessionValidators);\n      } else if (this.isBabe) {\n        return getBabeAuthor(this.registry, bytes, sessionValidators);\n      }\n    } // For pow & Moonbeam, the bytes are the actual author\n\n\n    if (this.isPow || bytes.length === 20) {\n      return getBytesAsAuthor(this.registry, bytes);\n    }\n\n    return undefined;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toString();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'ConsensusEngineId';\n  }\n  /**\n   * @description Override the default toString to return a 4-byte string\n   */\n\n\n  toString() {\n    return this.isAscii ? u8aToString(this) : u8aToHex(this);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Null, Struct, Tuple } from '@polkadot/types-codec';\nimport { objectProperties, objectSpread } from '@polkadot/util';\n\n/** @internal */\nfunction decodeEvent(registry, value) {\n  if (!value || !value.length) {\n    return {\n      DataType: Null\n    };\n  }\n\n  const index = value.subarray(0, 2);\n  return {\n    DataType: registry.findMetaEvent(index),\n    value: {\n      data: value.subarray(2),\n      index\n    }\n  };\n}\n/**\n * @name GenericEventData\n * @description\n * Wrapper for the actual data that forms part of an [[Event]]\n */\n\n\nexport class GenericEventData extends Tuple {\n  #meta;\n  #method;\n  #names = null;\n  #section;\n  #typeDef;\n\n  constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {\n    const fields = (meta === null || meta === void 0 ? void 0 : meta.fields) || [];\n    super(registry, fields.map(({\n      type\n    }) => registry.createLookupType(type)), value);\n    this.#meta = meta;\n    this.#method = method;\n    this.#section = section;\n    this.#typeDef = fields.map(({\n      type\n    }) => registry.lookup.getTypeDef(type));\n    const names = fields.map(({\n      name\n    }) => registry.lookup.sanitizeField(name)[0]).filter(n => !!n);\n\n    if (names.length === fields.length) {\n      this.#names = names;\n      objectProperties(this, names, (_, i) => this[i]);\n    }\n  }\n  /**\n   * @description The wrapped [[EventMetadata]]\n   */\n\n\n  get meta() {\n    return this.#meta;\n  }\n  /**\n   * @description The method as a string\n   */\n\n\n  get method() {\n    return this.#method;\n  }\n  /**\n   * @description The field names (as available)\n   */\n\n\n  get names() {\n    return this.#names;\n  }\n  /**\n   * @description The section as a string\n   */\n\n\n  get section() {\n    return this.#section;\n  }\n  /**\n   * @description The [[TypeDef]] for this event\n   */\n\n\n  get typeDef() {\n    return this.#typeDef;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    if (this.#names !== null) {\n      const json = {};\n\n      for (let i = 0; i < this.#names.length; i++) {\n        json[this.#names[i]] = this[i].toHuman(isExtended);\n      }\n\n      return json;\n    }\n\n    return super.toHuman(isExtended);\n  }\n\n}\n/**\n * @name GenericEvent\n * @description\n * A representation of a system event. These are generated via the [[Metadata]] interfaces and\n * specific to a specific Substrate runtime\n */\n\nexport class GenericEvent extends Struct {\n  // Currently we _only_ decode from Uint8Array, since we expect it to\n  // be used via EventRecord\n  constructor(registry, _value) {\n    const {\n      DataType,\n      value\n    } = decodeEvent(registry, _value);\n    super(registry, {\n      index: 'EventId',\n      // eslint-disable-next-line sort-keys\n      data: DataType\n    }, value);\n  }\n  /**\n   * @description The wrapped [[EventData]]\n   */\n\n\n  get data() {\n    return this.getT('data');\n  }\n  /**\n   * @description The [[EventId]], identifying the raw event\n   */\n\n\n  get index() {\n    return this.getT('index');\n  }\n  /**\n   * @description The [[EventMetadata]] with the documentation\n   */\n\n\n  get meta() {\n    return this.data.meta;\n  }\n  /**\n   * @description The method string identifying the event\n   */\n\n\n  get method() {\n    return this.data.method;\n  }\n  /**\n   * @description The section string identifying the event\n   */\n\n\n  get section() {\n    return this.data.section;\n  }\n  /**\n   * @description The [[TypeDef]] for the event\n   */\n\n\n  get typeDef() {\n    return this.data.typeDef;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return objectSpread({\n      method: this.method,\n      section: this.section\n    }, isExpanded ? {\n      docs: this.meta.docs.map(d => d.toString())\n    } : null, super.toHuman(isExpanded));\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\"; // eslint-disable-next-line no-use-before-define\n\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\n\nfunction decodeString(registry, value) {\n  const decoded = decodeAddress(value);\n  return decoded.length === 32 ? registry.createTypeUnsafe('AccountId', [decoded]) : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded, true)]);\n}\n/** @internal */\n\n\nfunction decodeU8a(registry, value) {\n  // This allows us to instantiate an address with a raw publicKey. Do this first before\n  // we checking the first byte, otherwise we may split an already-existent valid address\n  if (value.length === 32) {\n    return registry.createTypeUnsafe('AccountId', [value]);\n  } else if (value[0] === 0xff) {\n    return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);\n  }\n\n  const [offset, length] = GenericAccountIndex.readLength(value);\n  return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n/** @internal */\n\n\nfunction decodeAddressOrIndex(registry, value) {\n  return value instanceof GenericLookupSource ? value.inner : value instanceof GenericAccountId || value instanceof GenericAccountIndex ? value : isBn(value) || isNumber(value) || isBigInt(value) ? registry.createTypeUnsafe('AccountIndex', [value]) : Array.isArray(value) || isHex(value) || isU8a(value) ? decodeU8a(registry, u8aToU8a(value)) : decodeString(registry, value);\n}\n/**\n * @name LookupSource\n * @description\n * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\n\n\nexport class GenericLookupSource extends AbstractBase {\n  constructor(registry, value = new Uint8Array()) {\n    super(registry, decodeAddressOrIndex(registry, value));\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    const rawLength = this._rawLength;\n    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix\n    rawLength > 1 ? 1 : 0);\n  }\n  /**\n   * @description The length of the raw value, either AccountIndex or AccountId\n   */\n\n\n  get _rawLength() {\n    return this.inner instanceof GenericAccountIndex ? GenericAccountIndex.calcLength(this.inner) : this.inner.encodedLength;\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const value = this.inner.toU8a().subarray(0, this._rawLength);\n    return {\n      outer: [new Uint8Array(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(value) : ACCOUNT_ID_PREFIX), value]\n    };\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return u8aToHex(this.toU8a());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Address';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n    return isBare ? encoded : u8aConcat(this.inner instanceof GenericAccountIndex ? GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { isBn, isNumber, isString, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from \"./AccountId.js\";\nimport { GenericAccountIndex } from \"./AccountIndex.js\";\n\nfunction decodeU8a(registry, u8a) {\n  if ([0, 32].includes(u8a.length)) {\n    return {\n      Id: u8a\n    };\n  } else if (u8a.length === 20) {\n    return {\n      Address20: u8a\n    };\n  } else if (u8a.length <= 8) {\n    return {\n      Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber()\n    };\n  }\n\n  return u8a;\n}\n\nfunction decodeMultiAny(registry, value) {\n  if (value instanceof GenericAccountId) {\n    return {\n      Id: value\n    };\n  } else if (isU8a(value)) {\n    // NOTE This is after the AccountId check (which is U8a)\n    return decodeU8a(registry, value);\n  } else if (value instanceof GenericMultiAddress) {\n    return value;\n  } else if (value instanceof GenericAccountIndex || isBn(value) || isNumber(value)) {\n    return {\n      Index: isNumber(value) ? value : value.toNumber()\n    };\n  } else if (isString(value)) {\n    return decodeU8a(registry, decodeAddress(value.toString()));\n  }\n\n  return value;\n}\n\nexport class GenericMultiAddress extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      Id: 'AccountId',\n      Index: 'Compact<AccountIndex>',\n      Raw: 'Bytes',\n      // eslint-disable-next-line sort-keys\n      Address32: 'H256',\n      // eslint-disable-next-line sort-keys\n      Address20: 'H160'\n    }, decodeMultiAny(registry, value));\n  }\n  /**\n   * @description Returns a breakdown of the hex encoding for this Codec\n   */\n\n\n  inspect() {\n    const {\n      inner,\n      outer = []\n    } = this.inner.inspect();\n    return {\n      inner,\n      outer: [new Uint8Array([this.index]), ...outer]\n    };\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.value.toString();\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Bool, U8aFixed } from '@polkadot/types-codec';\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\n// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n\n/** @internal */\n\nfunction decodeVoteBool(value) {\n  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteU8a(value) {\n  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\n\n\nfunction decodeVoteType(registry, value) {\n  return new Uint8Array([(new Bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS) | registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index]);\n}\n/** @internal */\n\n\nfunction decodeVote(registry, value) {\n  if (isU8a(value)) {\n    return decodeVoteU8a(value);\n  } else if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n    return decodeVoteBool(new Bool(registry, value).isTrue);\n  } else if (isNumber(value)) {\n    return decodeVoteBool(value < 0);\n  }\n\n  return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\n\n\nexport class GenericVote extends U8aFixed {\n  #aye;\n  #conviction;\n\n  constructor(registry, value) {\n    // decoded is just 1 byte\n    // Aye: Most Significant Bit\n    // Conviction: 0000 - 0101\n    const decoded = decodeVote(registry, value);\n    super(registry, decoded, 8);\n    this.#aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n    this.#conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);\n  }\n  /**\n   * @description returns a V2 conviction\n   */\n\n\n  get conviction() {\n    return this.#conviction;\n  }\n  /**\n   * @description true if the wrapped value is a positive vote\n   */\n\n\n  get isAye() {\n    return this.#aye;\n  }\n  /**\n   * @description true if the wrapped value is a negative vote\n   */\n\n\n  get isNay() {\n    return !this.isAye;\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExpanded) {\n    return {\n      conviction: this.conviction.toHuman(isExpanded),\n      vote: this.isAye ? 'Aye' : 'Nay'\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Vote';\n  }\n\n}","// Copyright 2017-2022 @polkadot/types-known authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // type overrides for modules (where duplication between modules exist)\n\nconst typesAlias = {\n  assets: {\n    Approval: 'AssetApproval',\n    ApprovalKey: 'AssetApprovalKey',\n    Balance: 'TAssetBalance',\n    DestroyWitness: 'AssetDestroyWitness'\n  },\n  babe: {\n    EquivocationProof: 'BabeEquivocationProof'\n  },\n  balances: {\n    Status: 'BalanceStatus'\n  },\n  beefy: {\n    AuthorityId: 'BeefyId'\n  },\n  contracts: {\n    StorageKey: 'ContractStorageKey'\n  },\n  electionProviderMultiPhase: {\n    Phase: 'ElectionPhase'\n  },\n  ethereum: {\n    Block: 'EthBlock',\n    Header: 'EthHeader',\n    Receipt: 'EthReceipt',\n    Transaction: 'EthTransaction',\n    TransactionStatus: 'EthTransactionStatus'\n  },\n  evm: {\n    Account: 'EvmAccount',\n    Log: 'EvmLog',\n    Vicinity: 'EvmVicinity'\n  },\n  grandpa: {\n    Equivocation: 'GrandpaEquivocation',\n    EquivocationProof: 'GrandpaEquivocationProof'\n  },\n  identity: {\n    Judgement: 'IdentityJudgement'\n  },\n  inclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  paraShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parachains: {\n    Id: 'ParaId'\n  },\n  parasDisputes: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasInclusion: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasScheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  parasShared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  proposeParachain: {\n    Proposal: 'ParachainProposal'\n  },\n  proxy: {\n    Announcement: 'ProxyAnnouncement'\n  },\n  scheduler: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  shared: {\n    ValidatorIndex: 'ParaValidatorIndex'\n  },\n  society: {\n    Judgement: 'SocietyJudgement',\n    Vote: 'SocietyVote'\n  },\n  staking: {\n    Compact: 'CompactAssignments'\n  },\n  treasury: {\n    Proposal: 'TreasuryProposal'\n  },\n  xcm: {\n    AssetId: 'XcmAssetId'\n  },\n  xcmPallet: {\n    AssetId: 'XcmAssetId'\n  }\n};\n/**\n * @description Get types for specific modules (metadata override)\n */\n\nexport function getAliasTypes({\n  knownTypes\n}, section) {\n  var _knownTypes$typesAlia;\n\n  return objectSpread({}, typesAlias[section], (_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetApprovalKey: {\n      owner: 'AccountId',\n      delegate: 'AccountId'\n    },\n    AssetApproval: {\n      amount: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance'\n    },\n    AssetBalance: {\n      balance: 'TAssetBalance',\n      isFrozen: 'bool',\n      isSufficient: 'bool'\n    },\n    AssetDestroyWitness: {\n      accounts: 'Compact<u32>',\n      sufficients: 'Compact<u32>',\n      approvals: 'Compact<u32>'\n    },\n    AssetDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      supply: 'TAssetBalance',\n      deposit: 'TAssetDepositBalance',\n      minBalance: 'TAssetBalance',\n      isSufficient: 'bool',\n      accounts: 'u32',\n      sufficients: 'u32',\n      approvals: 'u32',\n      isFrozen: 'bool'\n    },\n    AssetMetadata: {\n      deposit: 'TAssetDepositBalance',\n      name: 'Vec<u8>',\n      symbol: 'Vec<u8>',\n      decimals: 'u8',\n      isFrozen: 'bool'\n    },\n    TAssetBalance: 'u64',\n    TAssetDepositBalance: 'BalanceOf'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BlockAttestations: {\n      receipt: 'CandidateReceipt',\n      valid: 'Vec<AccountId>',\n      invalid: 'Vec<AccountId>'\n    },\n    IncludedBlocks: {\n      actualNumber: 'BlockNumber',\n      session: 'SessionIndex',\n      randomSeed: 'H256',\n      activeParachains: 'Vec<ParaId>',\n      paraBlocks: 'Vec<Hash>'\n    },\n    MoreAttestations: {}\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    RawAuraPreDigest: {\n      slotNumber: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    hasKey: {\n      description: 'Returns true if the keystore has private keys for the given public key and key type.',\n      params: [{\n        name: 'publicKey',\n        type: 'Bytes'\n      }, {\n        name: 'keyType',\n        type: 'Text'\n      }],\n      type: 'bool'\n    },\n    hasSessionKeys: {\n      description: 'Returns true if the keystore has private keys for the given session public keys.',\n      params: [{\n        name: 'sessionKeys',\n        type: 'Bytes'\n      }],\n      type: 'bool'\n    },\n    removeExtrinsic: {\n      description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',\n      params: [{\n        name: 'bytesOrHash',\n        type: 'Vec<ExtrinsicOrHash>'\n      }],\n      type: 'Vec<Hash>'\n    },\n    insertKey: {\n      description: 'Insert a key into the keystore.',\n      params: [{\n        name: 'keyType',\n        type: 'Text'\n      }, {\n        name: 'suri',\n        type: 'Text'\n      }, {\n        name: 'publicKey',\n        type: 'Bytes'\n      }],\n      type: 'Bytes'\n    },\n    rotateKeys: {\n      description: 'Generate new session keys and returns the corresponding public keys',\n      params: [],\n      type: 'Bytes'\n    },\n    pendingExtrinsics: {\n      description: 'Returns all pending extrinsics, potentially grouped by sender',\n      params: [],\n      type: 'Vec<Extrinsic>'\n    },\n    submitExtrinsic: {\n      isSigned: true,\n      description: 'Submit a fully formatted extrinsic for block inclusion',\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      type: 'Hash'\n    },\n    submitAndWatchExtrinsic: {\n      description: 'Submit and subscribe to watch an extrinsic until unsubscribed',\n      isSigned: true,\n      params: [{\n        name: 'extrinsic',\n        type: 'Extrinsic'\n      }],\n      pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],\n      type: 'ExtrinsicStatus'\n    }\n  },\n  types: {\n    ExtrinsicOrHash: {\n      _enum: {\n        Hash: 'Hash',\n        Extrinsic: 'Bytes'\n      }\n    },\n    ExtrinsicStatus: {\n      _enum: {\n        Future: 'Null',\n        Ready: 'Null',\n        Broadcast: 'Vec<Text>',\n        InBlock: 'Hash',\n        Retracted: 'Hash',\n        FinalityTimeout: 'Hash',\n        Finalized: 'Hash',\n        Usurped: 'Hash',\n        Dropped: 'Null',\n        Invalid: 'Null'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    UncleEntryItem: {\n      _enum: {\n        InclusionHeight: 'BlockNumber',\n        Uncle: '(Hash, Option<AccountId>)'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    epochAuthorship: {\n      description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',\n      params: [],\n      type: 'HashMap<AuthorityId, EpochAuthorship>'\n    }\n  },\n  types: {\n    AllowedSlots: {\n      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n    },\n    BabeAuthorityWeight: 'u64',\n    BabeEpochConfiguration: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    BabeBlockWeight: 'u32',\n    BabeEquivocationProof: {\n      offender: 'AuthorityId',\n      slotNumber: 'SlotNumber',\n      firstHeader: 'Header',\n      secondHeader: 'Header'\n    },\n    BabeWeight: 'u64',\n    MaybeRandomness: 'Option<Randomness>',\n    MaybeVrf: 'Option<VrfData>',\n    EpochAuthorship: {\n      primary: 'Vec<u64>',\n      secondary: 'Vec<u64>',\n      secondary_vrf: 'Vec<u64>'\n    },\n    NextConfigDescriptor: {\n      _enum: {\n        V0: 'Null',\n        V1: 'NextConfigDescriptorV1'\n      }\n    },\n    NextConfigDescriptorV1: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    Randomness: 'Hash',\n    RawBabePreDigest: {\n      _enum: {\n        Phantom: 'Null',\n        // index starts at 1... empty slot at 0\n        Primary: 'RawBabePreDigestPrimary',\n        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n      }\n    },\n    RawBabePreDigestPrimary: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryPlain: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber'\n    },\n    RawBabePreDigestSecondaryVRF: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestTo159: {\n      _enum: {\n        Primary: 'RawBabePreDigestPrimaryTo159',\n        Secondary: 'RawBabePreDigestSecondaryTo159'\n      }\n    },\n    RawBabePreDigestPrimaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight'\n    },\n    // a cross old/new compatible version of the digest, that is _only_ useful\n    // for partial parsing and extraction of the author. This assumes that all\n    // entries has the authorityIndex in the first position - and that it is all\n    // we are interested in\n    RawBabePreDigestCompat: {\n      _enum: {\n        Zero: 'u32',\n        One: 'u32',\n        Two: 'u32',\n        Three: 'u32'\n      }\n    },\n    SlotNumber: 'u64',\n    VrfData: '[u8; 32]',\n    VrfOutput: '[u8; 32]',\n    VrfProof: '[u8; 64]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountData: {\n      free: 'Balance',\n      reserved: 'Balance',\n      miscFrozen: 'Balance',\n      feeFrozen: 'Balance'\n    },\n    BalanceLockTo212: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      until: 'BlockNumber',\n      reasons: 'WithdrawReasons'\n    },\n    BalanceLock: {\n      id: 'LockIdentifier',\n      amount: 'Balance',\n      reasons: 'Reasons'\n    },\n    BalanceStatus: {\n      _enum: ['Free', 'Reserved']\n    },\n    Reasons: {\n      _enum: ['Fee', 'Misc', 'All']\n    },\n    ReserveData: {\n      id: 'ReserveIdentifier',\n      amount: 'Balance'\n    },\n    ReserveIdentifier: '[u8; 8]',\n    VestingSchedule: {\n      offset: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    },\n    WithdrawReasons: {\n      _set: {\n        TransactionPayment: 0b00000001,\n        Transfer: 0b00000010,\n        Reserve: 0b00000100,\n        Fee: 0b00001000,\n        Tip: 0b00010000\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    subscribeJustifications: {\n      description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'BeefySignedCommitment'\n    },\n    getFinalizedHead: {\n      description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',\n      params: [],\n      type: 'H256'\n    }\n  },\n  types: {\n    BeefyCommitment: {\n      payload: 'BeefyPayload',\n      blockNumber: 'BlockNumber',\n      validatorSetId: 'ValidatorSetId'\n    },\n    BeefyId: '[u8; 33]',\n    BeefySignedCommitment: {\n      commitment: 'BeefyCommitment',\n      signatures: 'Vec<Option<EcdsaSignature>>'\n    },\n    BeefyNextAuthoritySet: {\n      id: 'u64',\n      len: 'u32',\n      root: 'H256'\n    },\n    BeefyPayload: 'MmrRootHash',\n    MmrRootHash: 'H256',\n    ValidatorSetId: 'u64'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    BridgedBlockHash: 'H256',\n    BridgedBlockNumber: 'BlockNumber',\n    BridgedHeader: 'Header',\n    BridgeMessageId: '(LaneId, MessageNonce)',\n    CallOrigin: {\n      _enum: {\n        SourceRoot: 'Null',\n        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n        SourceAccount: 'AccountId'\n      }\n    },\n    ChainId: '[u8; 4]',\n    DeliveredMessages: {\n      begin: 'MessageNonce',\n      end: 'MessageNonce',\n      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n      dispatchResults: 'BitVec'\n    },\n    DispatchFeePayment: {\n      _enum: ['AtSourceChain', 'AtTargetChain']\n    },\n    InboundLaneData: {\n      relayers: 'Vec<UnrewardedRelayer>',\n      lastConfirmedNonce: 'MessageNonce'\n    },\n    InboundRelayer: 'AccountId',\n    InitializationData: {\n      header: 'Header',\n      authorityList: 'AuthorityList',\n      setId: 'SetId',\n      isHalted: 'bool'\n    },\n    LaneId: '[u8; 4]',\n    MessageData: {\n      payload: 'Bytes',\n      fee: 'Balance'\n    },\n    MessagesDeliveryProofOf: {\n      bridgedHeaderHash: 'BlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId'\n    },\n    MessageKey: {\n      laneId: 'LaneId',\n      nonce: 'MessageNonce'\n    },\n    MessageNonce: 'u64',\n    MessagesProofOf: {\n      bridgedHeaderHash: 'BridgedBlockHash',\n      storageProof: 'Vec<Bytes>',\n      lane: 'LaneId',\n      noncesStart: 'MessageNonce',\n      noncesEnd: 'MessageNonce'\n    },\n    OperatingMode: {\n      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n    },\n    OutboundLaneData: {\n      oldestUnprunedNonce: 'MessageNonce',\n      latestReceivedNonce: 'MessageNonce',\n      latestGeneratedNonce: 'MessageNonce'\n    },\n    OutboundMessageFee: 'Balance',\n    OutboundPayload: {\n      specVersion: 'u32',\n      weight: 'Weight',\n      origin: 'CallOrigin',\n      dispatchFeePayment: 'DispatchFeePayment',\n      call: 'Bytes'\n    },\n    Parameter: 'Null',\n    RelayerId: 'AccountId',\n    UnrewardedRelayer: {\n      relayer: 'RelayerId',\n      messages: 'DeliveredMessages'\n    },\n    UnrewardedRelayersState: {\n      unrewardedRelayer_Entries: 'MessageNonce',\n      messagesInOldestEntry: 'MessageNonce',\n      totalMessages: 'MessageNonce'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getHeader: {\n      alias: ['chain_getHead'],\n      description: 'Retrieves the header for a specific block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Header'\n    },\n    getBlock: {\n      description: 'Get header and body of a relay chain block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'SignedBlock'\n    },\n    getBlockHash: {\n      description: 'Get the block hash for a specific block',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber',\n        isOptional: true\n      }],\n      type: 'BlockHash'\n    },\n    getFinalizedHead: {\n      alias: ['chain_getFinalisedHead'],\n      description: 'Get hash of the last finalized block in the canon chain',\n      params: [],\n      type: 'BlockHash'\n    },\n    subscribeNewHeads: {\n      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n      description: 'Retrieves the best header via subscription',\n      params: [],\n      // NOTE These still has the aliassed version, compatible with 1.x\n      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n      type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n      description: 'Retrieves the best finalized header via subscription',\n      params: [],\n      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n      type: 'Header'\n    },\n    subscribeAllHeads: {\n      description: 'Retrieves the newest header via subscription',\n      params: [],\n      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n      type: 'Header'\n    }\n  },\n  types: {\n    BlockHash: 'Hash'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getKeys: {\n      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n      alias: ['childstate_getKeysPagedAt'],\n      description: 'Returns the keys with prefix from a child storage with pagination support',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      description: 'Returns a child storage entry at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n      description: 'Returns child storage entries for multiple keys at a specific block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n      description: 'Returns the hash of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Hash>'\n    },\n    getStorageSize: {\n      description: 'Returns the size of a child storage entry at a block state',\n      params: [{\n        name: 'childKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<u64>'\n    }\n  },\n  types: {\n    // StorageKey extends Bytes\n    PrefixedStorageKey: 'StorageKey'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    StatementKind: {\n      _enum: ['Regular', 'Saft']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CollectiveOrigin: {\n      _enum: {\n        Members: '(MemberCount, MemberCount)',\n        Member: 'AccountId'\n      }\n    },\n    MemberCount: 'u32',\n    ProposalIndex: 'u32',\n    VotesTo230: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>'\n    },\n    Votes: {\n      index: 'ProposalIndex',\n      threshold: 'MemberCount',\n      ayes: 'Vec<AccountId>',\n      nays: 'Vec<AccountId>',\n      end: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthorityId: 'AccountId',\n    RawVRFOutput: '[u8; 32]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport rpc from \"./rpc.js\";\nexport default {\n  rpc,\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      pairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      rentPaid: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>',\n      _reserved: 'Option<Null>'\n    },\n    CodeHash: 'Hash',\n    CodeSource: {\n      _enum: {\n        Upload: 'Bytes',\n        Existing: 'Hash'\n      }\n    },\n    CodeUploadRequest: {\n      origin: 'AccountId',\n      code: 'Bytes',\n      storageDepositLimit: 'Option<Balance>'\n    },\n    CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',\n    CodeUploadResultValue: {\n      codeHash: 'CodeHash',\n      deposit: 'Balance'\n    },\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      storageDepositLimit: 'Option<Balance>',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccessTo260: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResultTo260: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo260',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultOk: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',\n    ContractExecResultTo267: {\n      gasConsumed: 'u64',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractExecResult: {\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'ContractExecResultResult'\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractCallFlags: {\n      _set: {\n        _bitLength: 32,\n        ForwardInput: 0b00000001,\n        CloneInput: 0b00000010,\n        TailCall: 0b00000100,\n        AllowReentry: 0b00001000\n      }\n    },\n    ContractReturnFlags: {\n      _set: {\n        _bitLength: 32,\n        Revert: 0x00000001\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    DeletedContract: {\n      pairCount: 'u32',\n      trieId: 'TrieId'\n    },\n    ExecReturnValue: {\n      flags: 'ContractReturnFlags',\n      data: 'Bytes'\n    },\n    Gas: 'u64',\n    HostFnWeightsTo264: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      terminatePerCodeByte: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerCallerCodeByte: 'Weight',\n      restoreToPerTombstoneCodeByte: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callPerCodeByte: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerCodeByte: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      instantiatePerSaltByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight',\n      rentParams: 'Weight'\n    },\n    InstantiateRequestV1: {\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequestV2: {\n      _fallback: 'InstantiateRequestV1',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'Bytes',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    InstantiateRequest: {\n      _fallback: 'InstantiateRequestV2',\n      origin: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'Gas',\n      storageDepositLimit: 'Option<Balance>',\n      code: 'CodeSource',\n      data: 'Bytes',\n      salt: 'Bytes'\n    },\n    ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',\n    ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',\n    ContractInstantiateResult: {\n      _fallback: 'ContractInstantiateResultTo299',\n      gasConsumed: 'u64',\n      gasRequired: 'u64',\n      storageDeposit: 'StorageDeposit',\n      debugMessage: 'Text',\n      result: 'InstantiateReturnValue'\n    },\n    InstantiateReturnValueTo267: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId',\n      rentProjection: 'Option<RentProjection>'\n    },\n    InstantiateReturnValueOk: {\n      result: 'ExecReturnValue',\n      accountId: 'AccountId'\n    },\n    InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',\n    InstructionWeights: {\n      i64const: 'u32',\n      i64load: 'u32',\n      i64store: 'u32',\n      select: 'u32',\n      rIf: 'u32',\n      br: 'u32',\n      brIf: 'u32',\n      brIable: 'u32',\n      brIablePerEntry: 'u32',\n      call: 'u32',\n      callIndirect: 'u32',\n      callIndirectPerParam: 'u32',\n      localGet: 'u32',\n      localSet: 'u32',\n      local_tee: 'u32',\n      globalGet: 'u32',\n      globalSet: 'u32',\n      memoryCurrent: 'u32',\n      memoryGrow: 'u32',\n      i64clz: 'u32',\n      i64ctz: 'u32',\n      i64popcnt: 'u32',\n      i64eqz: 'u32',\n      i64extendsi32: 'u32',\n      i64extendui32: 'u32',\n      i32wrapi64: 'u32',\n      i64eq: 'u32',\n      i64ne: 'u32',\n      i64lts: 'u32',\n      i64ltu: 'u32',\n      i64gts: 'u32',\n      i64gtu: 'u32',\n      i64les: 'u32',\n      i64leu: 'u32',\n      i64ges: 'u32',\n      i64geu: 'u32',\n      i64add: 'u32',\n      i64sub: 'u32',\n      i64mul: 'u32',\n      i64divs: 'u32',\n      i64divu: 'u32',\n      i64rems: 'u32',\n      i64remu: 'u32',\n      i64and: 'u32',\n      i64or: 'u32',\n      i64xor: 'u32',\n      i64shl: 'u32',\n      i64shrs: 'u32',\n      i64shru: 'u32',\n      i64rotl: 'u32',\n      i64rotr: 'u32'\n    },\n    LimitsTo264: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32',\n      codeSize: 'u32'\n    },\n    Limits: {\n      eventTopics: 'u32',\n      stackHeight: 'u32',\n      globals: 'u32',\n      parameters: 'u32',\n      memoryPages: 'u32',\n      tableSize: 'u32',\n      brTableSize: 'u32',\n      subjectLen: 'u32'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      refcount: 'Compact<u64>',\n      _reserved: 'Option<Null>',\n      code: 'Bytes',\n      originalCodeLen: 'u32'\n    },\n    RentProjection: {\n      _enum: {\n        EvictionAt: 'BlockNumber',\n        NoEviction: 'Null'\n      }\n    },\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo264: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'LimitsTo264',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeightsTo264'\n    },\n    Schedule: {\n      version: 'u32',\n      enablePrintln: 'bool',\n      limits: 'Limits',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights'\n    },\n    SeedOf: 'Hash',\n    StorageDeposit: {\n      _enum: {\n        Refund: 'Balance',\n        Charge: 'Balance'\n      }\n    },\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  call: {\n    description: 'Executes a call to a contract',\n    params: [{\n      name: 'callRequest',\n      type: 'ContractCallRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'ContractExecResult'\n  },\n  instantiate: {\n    description: 'Instantiate a new contract',\n    params: [{\n      name: 'request',\n      type: 'InstantiateRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'ContractInstantiateResult'\n  },\n  uploadCode: {\n    // The RPC here is terribly misnamed - somebody forgot how the RPCs\n    // are actually done, ie. <module>_<camelCasedMethod>\n    endpoint: 'contracts_upload_code',\n    description: 'Upload new code without instantiating a contract from it',\n    params: [{\n      name: 'uploadRequest',\n      type: 'CodeUploadRequest'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHstoric: true,\n      isOptional: true\n    }],\n    type: 'CodeUploadResult'\n  },\n  getStorage: {\n    description: 'Returns the value under a specified storage key in a contract',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'key',\n      type: 'H256'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<Bytes>'\n  },\n  rentProjection: {\n    description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'at',\n      type: 'BlockHash',\n      isHistoric: true,\n      isOptional: true\n    }],\n    type: 'Option<BlockNumber>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst layout = {\n  ContractCryptoHasher: {\n    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n  },\n  ContractDiscriminant: 'u32',\n  ContractLayoutArray: {\n    offset: 'ContractLayoutKey',\n    len: 'u32',\n    cellsPerElem: 'u64',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutCell: {\n    key: 'ContractLayoutKey',\n    ty: 'SiLookupTypeId'\n  },\n  ContractLayoutEnum: {\n    dispatchKey: 'ContractLayoutKey',\n    variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'\n  },\n  ContractLayoutHash: {\n    offset: 'ContractLayoutKey',\n    strategy: 'ContractLayoutHashingStrategy',\n    layout: 'ContractStorageLayout'\n  },\n  ContractLayoutHashingStrategy: {\n    hasher: 'ContractCryptoHasher',\n    postfix: 'Vec<u8>',\n    prefix: 'Vec<u8>'\n  },\n  ContractLayoutKey: '[u8; 32]',\n  ContractLayoutStruct: {\n    fields: 'Vec<ContractLayoutStructField>'\n  },\n  ContractLayoutStructField: {\n    layout: 'ContractStorageLayout',\n    name: 'Text'\n  },\n  ContractStorageLayout: {\n    _enum: {\n      Cell: 'ContractLayoutCell',\n      Hash: 'ContractLayoutHash',\n      Array: 'ContractLayoutArray',\n      Struct: 'ContractLayoutStruct',\n      Enum: 'ContractLayoutEnum'\n    }\n  }\n};\nconst spec = {\n  ContractConstructorSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractConstructorSpecV3: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV0: {\n    constructors: 'Vec<ContractConstructorSpecV0>',\n    messages: 'Vec<ContractMessageSpecV0>',\n    events: 'Vec<ContractEventSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV1: {\n    constructors: 'Vec<ContractConstructorSpecV1>',\n    messages: 'Vec<ContractMessageSpecV1>',\n    events: 'Vec<ContractEventSpecV1>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV2: {\n    constructors: 'Vec<ContractConstructorSpecV2>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractContractSpecV3: {\n    constructors: 'Vec<ContractConstructorSpecV3>',\n    messages: 'Vec<ContractMessageSpecV2>',\n    events: 'Vec<ContractEventSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractDisplayName: 'SiPath',\n  ContractEventParamSpecV0: {\n    name: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventParamSpecV2: {\n    label: 'Text',\n    indexed: 'bool',\n    type: 'ContractTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV0: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV1: {\n    name: 'Text',\n    args: 'Vec<ContractEventParamSpecV0>',\n    docs: 'Vec<Text>'\n  },\n  ContractEventSpecV2: {\n    label: 'Text',\n    args: 'Vec<ContractEventParamSpecV2>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageParamSpecV0: {\n    name: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageParamSpecV2: {\n    label: 'Text',\n    type: 'ContractTypeSpec'\n  },\n  ContractMessageSpecV0: {\n    name: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV1: {\n    name: 'Vec<Text>',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV0>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractMessageSpecV2: {\n    label: 'Text',\n    selector: 'ContractSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<ContractMessageParamSpecV2>',\n    returnType: 'Option<ContractTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  ContractSelector: '[u8; 4]',\n  ContractTypeSpec: {\n    type: 'SiLookupTypeId',\n    displayName: 'ContractDisplayName'\n  }\n};\nconst ContractMetadataV0 = {\n  types: 'Vec<Si0Type>',\n  spec: 'ContractContractSpecV0'\n};\nconst ContractMetadataV1 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV1'\n};\nconst ContractMetadataV2 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV2'\n};\nconst ContractMetadataV3 = {\n  types: 'Vec<PortableType>',\n  spec: 'ContractContractSpecV3'\n};\nconst ContractProjectInfo = {\n  source: 'ContractProjectSource',\n  contract: 'ContractProjectContract'\n};\nconst latest = {\n  ContractConstructorSpecLatest: 'ContractConstructorSpecV3',\n  ContractEventSpecLatest: 'ContractEventSpecV2',\n  ContractEventParamSpecLatest: 'ContractEventParamSpecV2',\n  ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',\n  ContractMessageSpecLatest: 'ContractMessageSpecV2',\n  ContractMetadataLatest: 'ContractMetadataV3'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, layout, spec, latest, {\n    ContractProjectInfo,\n    ContractMetadataV0,\n    ContractMetadataV1,\n    ContractMetadataV2,\n    ContractMetadataV3,\n    ContractMetadata: {\n      _enum: {\n        V0: 'ContractMetadataV0',\n        V1: 'ContractMetadataV1',\n        V2: 'ContractMetadataV2',\n        V3: 'ContractMetadataV3'\n      }\n    },\n    ContractProjectV0: objectSpread({\n      metadataVersion: 'Text'\n    }, ContractProjectInfo, ContractMetadataV0),\n    ContractProject: '(ContractProjectInfo, ContractMetadata)',\n    ContractProjectContract: {\n      _alias: {\n        docs: 'documentation'\n      },\n      name: 'Text',\n      version: 'Text',\n      authors: 'Vec<Text>',\n      description: 'Option<Text>',\n      docs: 'Option<Text>',\n      repository: 'Option<Text>',\n      homepage: 'Option<Text>',\n      license: 'Option<Text>'\n    },\n    ContractProjectSource: {\n      _alias: {\n        wasmHash: 'hash'\n      },\n      wasmHash: '[u8; 32]',\n      language: 'Text',\n      compiler: 'Text',\n      wasm: 'Raw'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    FundIndex: 'u32',\n    LastContribution: {\n      _enum: {\n        Never: 'Null',\n        PreEnding: 'u32',\n        Ending: 'BlockNumber'\n      }\n    },\n    FundInfo: {\n      depositor: 'AccountId',\n      verifier: 'Option<MultiSigner>',\n      deposit: 'Balance',\n      raised: 'Balance',\n      end: 'BlockNumber',\n      cap: 'Balance',\n      lastContribution: 'LastContribution',\n      firstPeriod: 'LeasePeriod',\n      lastPeriod: 'LeasePeriod',\n      trieIndex: 'TrieIndex'\n    },\n    TrieIndex: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst dmpQueue = {\n  ConfigData: {\n    maxIndividual: 'Weight'\n  },\n  MessageId: '[u8; 32]',\n  OverweightIndex: 'u64',\n  PageCounter: 'u32',\n  PageIndexData: {\n    beginUsed: 'PageCounter',\n    endUsed: 'PageCounter',\n    overweightCount: 'OverweightIndex'\n  }\n};\nexport default {\n  rpc: {},\n  types: dmpQueue\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllConvictions = [// 0.1x votes, unlocked.\n'None', // 1x votes, locked for an enactment period following a successful vote.\n'Locked1x', // 2x votes, locked for 2x enactment periods following a successful vote.\n'Locked2x', // 3x votes, locked for 4x...\n'Locked3x', // 4x votes, locked for 8x...\n'Locked4x', // 5x votes, locked for 16x...\n'Locked5x', /// 6x votes, locked for 32x...\n'Locked6x'];\nexport default {\n  rpc: {},\n  types: {\n    AccountVote: {\n      _enum: {\n        Standard: 'AccountVoteStandard',\n        Split: 'AccountVoteSplit'\n      }\n    },\n    AccountVoteSplit: {\n      aye: 'Balance',\n      nay: 'Balance'\n    },\n    AccountVoteStandard: {\n      vote: 'Vote',\n      balance: 'Balance'\n    },\n    Conviction: {\n      _enum: AllConvictions\n    },\n    Delegations: {\n      votes: 'Balance',\n      capital: 'Balance'\n    },\n    PreimageStatus: {\n      _enum: {\n        Missing: 'BlockNumber',\n        Available: 'PreimageStatusAvailable'\n      }\n    },\n    PreimageStatusAvailable: {\n      data: 'Bytes',\n      provider: 'AccountId',\n      deposit: 'Balance',\n      since: 'BlockNumber',\n      expiry: 'Option<BlockNumber>'\n    },\n    PriorLock: '(BlockNumber, Balance)',\n    PropIndex: 'u32',\n    Proposal: 'Call',\n    ProxyState: {\n      _enum: {\n        Open: 'AccountId',\n        Active: 'AccountId'\n      }\n    },\n    ReferendumIndex: 'u32',\n    ReferendumInfoTo239: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber'\n    },\n    ReferendumInfo: {\n      _enum: {\n        Ongoing: 'ReferendumStatus',\n        Finished: 'ReferendumInfoFinished'\n      }\n    },\n    ReferendumInfoFinished: {\n      approved: 'bool',\n      end: 'BlockNumber'\n    },\n    ReferendumStatus: {\n      end: 'BlockNumber',\n      proposalHash: 'Hash',\n      threshold: 'VoteThreshold',\n      delay: 'BlockNumber',\n      tally: 'Tally'\n    },\n    Tally: {\n      ayes: 'Balance',\n      nays: 'Balance',\n      turnout: 'Balance'\n    },\n    Voting: {\n      _enum: {\n        Direct: 'VotingDirect',\n        Delegating: 'VotingDelegating'\n      }\n    },\n    VotingDirect: {\n      votes: 'Vec<VotingDirectVote>',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    },\n    VotingDirectVote: '(ReferendumIndex, AccountVote)',\n    VotingDelegating: {\n      balance: 'Balance',\n      target: 'AccountId',\n      conviction: 'Conviction',\n      delegations: 'Delegations',\n      prior: 'PriorLock'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    getBlockStats: {\n      description: 'Reexecute the specified `block_hash` and gather statistics while doing so',\n      params: [{\n        name: 'at',\n        type: 'Hash',\n        isHistoric: true\n      }],\n      type: 'Option<BlockStats>'\n    }\n  },\n  types: {\n    BlockStats: {\n      witnessLen: 'u64',\n      witnessCompactLen: 'u64',\n      blockLen: 'u64',\n      blockNumExtrinsics: 'u64'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ApprovalFlag: 'u32',\n    DefunctVoter: {\n      who: 'AccountId',\n      voteCount: 'Compact<u32>',\n      candidateCount: 'Compact<u32>'\n    },\n    Renouncing: {\n      _enum: {\n        Member: 'Null',\n        RunnerUp: 'Null',\n        Candidate: 'Compact<u32>'\n      }\n    },\n    SetIndex: 'u32',\n    Vote: 'GenericVote',\n    VoteIndex: 'u32',\n    VoterInfo: {\n      lastActive: 'VoteIndex',\n      lastWin: 'VoteIndex',\n      pot: 'Balance',\n      stake: 'Balance'\n    },\n    VoteThreshold: {\n      _enum: ['Super Majority Approve', 'Super Majority Against', 'Simple Majority']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    createBlock: {\n      description: 'Instructs the manual-seal authorship task to create a new block',\n      params: [{\n        name: 'createEmpty',\n        type: 'bool'\n      }, {\n        name: 'finalize',\n        type: 'bool'\n      }, {\n        name: 'parentHash',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'CreatedBlock'\n    },\n    finalizeBlock: {\n      description: 'Instructs the manual-seal authorship task to finalize a block',\n      params: [{\n        name: 'hash',\n        type: 'BlockHash'\n      }, {\n        name: 'justification',\n        type: 'Justification',\n        isOptional: true\n      }],\n      type: 'bool'\n    }\n  },\n  types: {\n    CreatedBlock: {\n      _alias: {\n        blockHash: 'hash'\n      },\n      blockHash: 'BlockHash',\n      aux: 'ImportedAux'\n    },\n    ImportedAux: {\n      headerOnly: 'bool',\n      clearJustificationRequests: 'bool',\n      needsJustification: 'bool',\n      badJustification: 'bool',\n      needsFinalityProof: 'bool',\n      isNewBest: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// As per frontier\nimport { objectSpread } from '@polkadot/util';\nimport { rpc } from \"./rpc.js\";\nconst V0 = {\n  BlockV0: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV0>',\n    ommers: 'Vec<EthHeader>'\n  },\n  LegacyTransaction: {\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    signature: 'EthTransactionSignature'\n  },\n  TransactionV0: 'LegacyTransaction'\n};\nconst V1 = {\n  BlockV1: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV1>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP2930Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    gasPrice: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV1: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction'\n    }\n  }\n};\nconst V2 = {\n  BlockV2: {\n    header: 'EthHeader',\n    transactions: 'Vec<TransactionV2>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EIP1559Transaction: {\n    chainId: 'u64',\n    nonce: 'U256',\n    maxPriorityFeePerGas: 'U256',\n    maxFeePerGas: 'U256',\n    gasLimit: 'U256',\n    action: 'EthTransactionAction',\n    value: 'U256',\n    input: 'Bytes',\n    accessList: 'EthAccessList',\n    oddYParity: 'bool',\n    r: 'H256',\n    s: 'H256'\n  },\n  TransactionV2: {\n    _enum: {\n      Legacy: 'LegacyTransaction',\n      EIP2930: 'EIP2930Transaction',\n      EIP1559: 'EIP1559Transaction'\n    }\n  }\n};\nconst types = objectSpread({}, V0, V1, V2, {\n  EthereumAccountId: 'GenericEthereumAccountId',\n  EthereumAddress: 'GenericEthereumAccountId',\n  EthereumLookupSource: 'GenericEthereumLookupSource',\n  EthereumSignature: '[u8; 65]',\n  EthAccessListItem: {\n    address: 'EthAddress',\n    slots: 'Vec<H256>'\n  },\n  EthAccessList: 'Vec<EthAccessListItem>',\n  EthAccount: {\n    address: 'EthAddress',\n    balance: 'U256',\n    nonce: 'U256',\n    codeHash: 'H256',\n    storageHash: 'H256',\n    accountProof: 'Vec<Bytes>',\n    storageProof: 'Vec<EthStorageProof>'\n  },\n  EthAddress: 'H160',\n  EthBlock: {\n    header: 'EthHeader',\n    transactions: 'Vec<EthTransaction>',\n    ommers: 'Vec<EthHeader>'\n  },\n  EthHeader: {\n    parentHash: 'H256',\n    ommersHash: 'H256',\n    beneficiary: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    logsBloom: 'EthBloom',\n    difficulty: 'U256',\n    number: 'U256',\n    gasLimit: 'U256',\n    gasUsed: 'U256',\n    timestamp: 'u64',\n    extraData: 'Bytes',\n    mixMash: 'H256',\n    nonce: 'H64'\n  },\n  EthRichBlock: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    totalDifficulty: 'Option<U256>',\n    sealFields: 'Vec<Bytes>',\n    uncles: 'Vec<H256>',\n    transactions: 'Vec<EthTransaction>',\n    blockSize: 'Option<U256>'\n  },\n  EthBloom: 'H2048',\n  EthCallRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthFilter: {\n    fromBlock: 'Option<BlockNumber>',\n    toBlock: 'Option<BlockNumber>',\n    blockHash: 'Option<H256>',\n    address: 'Option<EthFilterAddress>',\n    topics: 'Option<EthFilterTopic>'\n  },\n  EthFilterAddress: {\n    _enum: {\n      Single: 'EthAddress',\n      Multiple: 'Vec<EthAddress>',\n      Null: 'Null'\n    }\n  },\n  EthFilterChanges: {\n    _enum: {\n      Logs: 'Vec<EthLog>',\n      Hashes: 'Vec<H256>',\n      Empty: 'Null'\n    }\n  },\n  EthFilterTopic: {\n    _enum: {\n      Single: 'EthFilterTopicInner',\n      Multiple: 'Vec<EthFilterTopicInner>',\n      Null: 'Null'\n    }\n  },\n  EthFilterTopicEntry: 'Option<H256>',\n  EthFilterTopicInner: {\n    _enum: {\n      Single: 'EthFilterTopicEntry',\n      Multiple: 'Vec<EthFilterTopicEntry>',\n      Null: 'Null'\n    }\n  },\n  EthRichHeader: {\n    _alias: {\n      blockHash: 'hash',\n      blockSize: 'size'\n    },\n    blockHash: 'Option<H256>',\n    parentHash: 'H256',\n    sha3Uncles: 'H256',\n    author: 'EthAddress',\n    miner: 'EthAddress',\n    stateRoot: 'H256',\n    transactionsRoot: 'H256',\n    receiptsRoot: 'H256',\n    number: 'Option<U256>',\n    gasUsed: 'U256',\n    gasLimit: 'U256',\n    extraData: 'Bytes',\n    logsBloom: 'EthBloom',\n    timestamp: 'U256',\n    difficulty: 'U256',\n    sealFields: 'Vec<Bytes>',\n    blockSize: 'Option<U256>'\n  },\n  EthLog: {\n    address: 'EthAddress',\n    topics: 'Vec<H256>',\n    data: 'Bytes',\n    blockHash: 'Option<H256>',\n    blockNumber: 'Option<U256>',\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    logIndex: 'Option<U256>',\n    transactionLogIndex: 'Option<U256>',\n    removed: 'bool'\n  },\n  EthReceipt: {\n    transactionHash: 'Option<H256>',\n    transactionIndex: 'Option<U256>',\n    blockHash: 'Option<H256>',\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    blockNumber: 'Option<U256>',\n    cumulativeGasUsed: 'U256',\n    gasUsed: 'Option<U256>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    root: 'Option<H256>',\n    logsBloom: 'EthBloom',\n    statusCode: 'Option<U64>'\n  },\n  EthStorageProof: {\n    key: 'U256',\n    value: 'U256',\n    proof: 'Vec<Bytes>'\n  },\n  EthSubKind: {\n    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n  },\n  EthSubParams: {\n    _enum: {\n      None: 'Null',\n      Logs: 'EthFilter'\n    }\n  },\n  EthSubResult: {\n    _enum: {\n      Header: 'EthRichHeader',\n      Log: 'EthLog',\n      TransactionHash: 'H256',\n      SyncState: 'EthSyncStatus'\n    }\n  },\n  EthSyncInfo: {\n    startingBlock: 'U256',\n    currentBlock: 'U256',\n    highestBlock: 'U256',\n    warpChunksAmount: 'Option<U256>',\n    warpChunksProcessed: 'Option<U256>'\n  },\n  EthSyncStatus: {\n    _enum: {\n      Info: 'EthSyncInfo',\n      None: 'Null'\n    }\n  },\n  EthTransaction: 'LegacyTransaction',\n  EthTransactionSignature: {\n    v: 'u64',\n    r: 'H256',\n    s: 'H256'\n  },\n  EthTransactionAction: {\n    _enum: {\n      Call: 'H160',\n      Create: 'Null'\n    }\n  },\n  EthTransactionCondition: {\n    _enum: {\n      block: 'u64',\n      time: 'u64'\n    }\n  },\n  EthTransactionRequest: {\n    from: 'Option<EthAddress>',\n    to: 'Option<EthAddress>',\n    gasPrice: 'Option<U256>',\n    gas: 'Option<U256>',\n    value: 'Option<U256>',\n    data: 'Option<Bytes>',\n    nonce: 'Option<U256>'\n  },\n  EthTransactionStatus: {\n    transactionHash: 'H256',\n    transactionIndex: 'u32',\n    from: 'EthAddress',\n    to: 'Option<EthAddress>',\n    contractAddress: 'Option<EthAddress>',\n    logs: 'Vec<EthLog>',\n    logsBloom: 'EthBloom'\n  },\n  EthWork: {\n    powHash: 'H256',\n    seedHash: 'H256',\n    target: 'H256',\n    number: 'Option<u64>'\n  }\n});\nexport default {\n  rpc,\n  types\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// As per frontier\nimport { objectSpread } from '@polkadot/util'; // We use aliasSection here to override since these are in another namespace\n\nconst netRpc = {\n  listening: {\n    aliasSection: 'net',\n    description: 'Returns true if client is actively listening for network connections. Otherwise false.',\n    params: [],\n    type: 'bool'\n  },\n  peerCount: {\n    aliasSection: 'net',\n    description: 'Returns number of peers connected to node.',\n    params: [],\n    type: 'String'\n  },\n  version: {\n    aliasSection: 'net',\n    description: 'Returns protocol version.',\n    params: [],\n    type: 'String'\n  }\n};\nconst web3Rpc = {\n  clientVersion: {\n    aliasSection: 'web3',\n    description: 'Returns current client version.',\n    params: [],\n    type: 'String'\n  },\n  sha3: {\n    aliasSection: 'web3',\n    description: 'Returns sha3 of the given data',\n    params: [{\n      name: 'data',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  }\n};\nexport const rpc = objectSpread({}, netRpc, web3Rpc, {\n  accounts: {\n    description: 'Returns accounts list.',\n    params: [],\n    type: 'Vec<H160>'\n  },\n  blockNumber: {\n    description: 'Returns the blockNumber',\n    params: [],\n    type: 'U256'\n  },\n  call: {\n    description: 'Call contract, returning the output data.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  chainId: {\n    description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',\n    params: [],\n    type: 'U64'\n  },\n  coinbase: {\n    description: 'Returns block author.',\n    params: [],\n    type: 'H160'\n  },\n  estimateGas: {\n    description: 'Estimate gas needed for execution of given contract.',\n    params: [{\n      name: 'request',\n      type: 'EthCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  gasPrice: {\n    description: 'Returns current gas price.',\n    params: [],\n    type: 'U256'\n  },\n  getBalance: {\n    description: 'Returns balance of the given account.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getBlockByHash: {\n    description: 'Returns block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockByNumber: {\n    description: 'Returns block with given number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }, {\n      name: 'full',\n      type: 'bool'\n    }],\n    type: 'Option<EthRichBlock>'\n  },\n  getBlockTransactionCountByHash: {\n    description: 'Returns the number of transactions in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getBlockTransactionCountByNumber: {\n    description: 'Returns the number of transactions in a block with given block number.',\n    params: [{\n      name: 'block',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getCode: {\n    description: 'Returns the code at given address at given time (block number).',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'Bytes'\n  },\n  getFilterChanges: {\n    description: 'Returns filter changes since last poll.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthFilterChanges'\n  },\n  getFilterLogs: {\n    description: 'Returns all logs matching given filter (in a range \\'from\\' - \\'to\\').',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getLogs: {\n    description: 'Returns logs matching given filter object.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'Vec<EthLog>'\n  },\n  getProof: {\n    description: 'Returns proof for account and storage.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'storageKeys',\n      type: 'Vec<H256>'\n    }, {\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'EthAccount'\n  },\n  getStorageAt: {\n    description: 'Returns content of the storage at given address.',\n    params: [{\n      name: 'address',\n      type: 'H160'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'H256'\n  },\n  getTransactionByBlockHashAndIndex: {\n    description: 'Returns transaction at given block hash and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByBlockNumberAndIndex: {\n    description: 'Returns transaction by given block number and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionByHash: {\n    description: 'Get transaction by its hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthTransaction'\n  },\n  getTransactionCount: {\n    description: 'Returns the number of transactions sent from given address at given time (block number).',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getTransactionReceipt: {\n    description: 'Returns transaction receipt by transaction hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'EthReceipt'\n  },\n  getUncleByBlockHashAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleByBlockNumberAndIndex: {\n    description: 'Returns an uncles at given block and index.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }, {\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'EthRichBlock'\n  },\n  getUncleCountByBlockHash: {\n    description: 'Returns the number of uncles in a block with given hash.',\n    params: [{\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'U256'\n  },\n  getUncleCountByBlockNumber: {\n    description: 'Returns the number of uncles in a block with given block number.',\n    params: [{\n      name: 'number',\n      type: 'BlockNumber'\n    }],\n    type: 'U256'\n  },\n  getWork: {\n    description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',\n    params: [],\n    type: 'EthWork'\n  },\n  hashrate: {\n    description: 'Returns the number of hashes per second that the node is mining with.',\n    params: [],\n    type: 'U256'\n  },\n  mining: {\n    description: 'Returns true if client is actively mining new blocks.',\n    params: [],\n    type: 'bool'\n  },\n  newBlockFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  newFilter: {\n    description: 'Returns id of new filter.',\n    params: [{\n      name: 'filter',\n      type: 'EthFilter'\n    }],\n    type: 'U256'\n  },\n  newPendingTransactionFilter: {\n    description: 'Returns id of new block filter.',\n    params: [],\n    type: 'U256'\n  },\n  protocolVersion: {\n    description: 'Returns protocol version encoded as a string (quotes are necessary).',\n    params: [],\n    type: 'u64'\n  },\n  sendRawTransaction: {\n    description: 'Sends signed transaction, returning its hash.',\n    params: [{\n      name: 'bytes',\n      type: 'Bytes'\n    }],\n    type: 'H256'\n  },\n  sendTransaction: {\n    description: 'Sends transaction; will block waiting for signer to return the transaction hash',\n    params: [{\n      name: 'tx',\n      type: 'EthTransactionRequest'\n    }],\n    type: 'H256'\n  },\n  submitHashrate: {\n    description: 'Used for submitting mining hashrate.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }, {\n      name: 'hash',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  submitWork: {\n    description: 'Used for submitting a proof-of-work solution.',\n    params: [{\n      name: 'nonce',\n      type: 'H64'\n    }, {\n      name: 'headerHash',\n      type: 'H256'\n    }, {\n      name: 'mixDigest',\n      type: 'H256'\n    }],\n    type: 'bool'\n  },\n  subscribe: {\n    description: 'Subscribe to Eth subscription.',\n    params: [{\n      name: 'kind',\n      type: 'EthSubKind'\n    }, {\n      isOptional: true,\n      name: 'params',\n      type: 'EthSubParams'\n    }],\n    pubsub: ['subscription', 'subscribe', 'unsubscribe'],\n    type: 'Null'\n  },\n  syncing: {\n    description: 'Returns an object with data about the sync status or false.',\n    params: [],\n    type: 'EthSyncStatus'\n  },\n  uninstallFilter: {\n    description: 'Uninstalls filter.',\n    params: [{\n      name: 'index',\n      type: 'U256'\n    }],\n    type: 'bool'\n  }\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    EvmAccount: {\n      nonce: 'u256',\n      balance: 'u256'\n    },\n    EvmLog: {\n      address: 'H160',\n      topics: 'Vec<H256>',\n      data: 'Bytes'\n    },\n    EvmVicinity: {\n      gasPrice: 'u256',\n      origin: 'H160'\n    },\n    ExitError: {\n      _enum: {\n        StackUnderflow: 'Null',\n        StackOverflow: 'Null',\n        InvalidJump: 'Null',\n        InvalidRange: 'Null',\n        DesignatedInvalid: 'Null',\n        CallTooDeep: 'Null',\n        CreateCollision: 'Null',\n        CreateContractLimit: 'Null',\n        OutOfOffset: 'Null',\n        OutOfGas: 'Null',\n        OutOfFund: 'Null',\n        PCUnderflow: 'Null',\n        CreateEmpty: 'Null',\n        Other: 'Text'\n      }\n    },\n    ExitFatal: {\n      _enum: {\n        NotSupported: 'Null',\n        UnhandledInterrupt: 'Null',\n        CallErrorAsFatal: 'ExitError',\n        Other: 'Text'\n      }\n    },\n    ExitReason: {\n      _enum: {\n        Succeed: 'ExitSucceed',\n        Error: 'ExitError',\n        Revert: 'ExitRevert',\n        Fatal: 'ExitFatal'\n      }\n    },\n    ExitRevert: {\n      _enum: ['Reverted']\n    },\n    ExitSucceed: {\n      _enum: ['Stopped', 'Returned', 'Suicided']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Extrinsic: 'GenericExtrinsic',\n    ExtrinsicEra: 'GenericExtrinsicEra',\n    ExtrinsicPayload: 'GenericExtrinsicPayload',\n    ExtrinsicSignature: 'MultiSignature',\n    ExtrinsicV4: 'GenericExtrinsicV4',\n    ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',\n    ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',\n    ExtrinsicUnknown: 'GenericExtrinsicUnknown',\n    ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',\n    // eras\n    Era: 'ExtrinsicEra',\n    ImmortalEra: 'GenericImmortalEra',\n    MortalEra: 'GenericMortalEra',\n    // signatures & signer\n    AnySignature: 'H512',\n    MultiSignature: {\n      _enum: {\n        Ed25519: 'Ed25519Signature',\n        Sr25519: 'Sr25519Signature',\n        Ecdsa: 'EcdsaSignature'\n      }\n    },\n    Signature: 'H512',\n    SignerPayload: 'GenericSignerPayload',\n    EcdsaSignature: '[u8; 65]',\n    Ed25519Signature: 'H512',\n    Sr25519Signature: 'H512'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AssetOptions: {\n      initalIssuance: 'Compact<Balance>',\n      permissions: 'PermissionLatest'\n    },\n    Owner: {\n      _enum: {\n        None: 'Null',\n        Address: 'AccountId'\n      }\n    },\n    PermissionsV1: {\n      update: 'Owner',\n      mint: 'Owner',\n      burn: 'Owner'\n    },\n    PermissionVersions: {\n      _enum: {\n        V1: 'PermissionsV1'\n      }\n    },\n    PermissionLatest: 'PermissionsV1'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveGilt: {\n      proportion: 'Perquintill',\n      amount: 'Balance',\n      who: 'AccountId',\n      expiry: 'BlockNumber'\n    },\n    ActiveGiltsTotal: {\n      frozen: 'Balance',\n      proportion: 'Perquintill',\n      index: 'ActiveIndex',\n      target: 'Perquintill'\n    },\n    ActiveIndex: 'u32',\n    GiltBid: {\n      amount: 'Balance',\n      who: 'AccountId'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    proveFinality: {\n      description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',\n      params: [{\n        name: 'blockNumber',\n        type: 'BlockNumber'\n      }],\n      type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n      description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n      params: [],\n      type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n      description: 'Subscribes to grandpa justifications',\n      params: [],\n      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],\n      type: 'JustificationNotification'\n    }\n  },\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    IdentityFields: {\n      _set: {\n        _bitLength: 64,\n        // Mapped here to 32 bits, in Rust these are 64-bit values\n        Display: 0b00000000000000000000000000000001,\n        Legal: 0b00000000000000000000000000000010,\n        Web: 0b00000000000000000000000000000100,\n        Riot: 0b00000000000000000000000000001000,\n        Email: 0b00000000000000000000000000010000,\n        PgpFingerprint: 0b00000000000000000000000000100000,\n        Image: 0b00000000000000000000000001000000,\n        Twitter: 0b00000000000000000000000010000000\n      }\n    },\n    IdentityInfoAdditional: '(Data, Data)',\n    IdentityInfoTo198: {\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data'\n    },\n    IdentityInfo: {\n      _fallback: 'IdentityInfoTo198',\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data',\n      twitter: 'Data'\n    },\n    IdentityJudgement: {\n      _enum: {\n        Unknown: 'Null',\n        FeePaid: 'Balance',\n        Reasonable: 'Null',\n        KnownGood: 'Null',\n        OutOfDate: 'Null',\n        LowQuality: 'Null',\n        Erroneous: 'Null'\n      }\n    },\n    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n    RegistrationTo198: {\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfoTo198'\n    },\n    Registration: {\n      _fallback: 'RegistrationTo198',\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfo'\n    },\n    RegistrarIndex: 'u32',\n    RegistrarInfo: {\n      account: 'AccountId',\n      fee: 'Balance',\n      fields: 'IdentityFields'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AuthIndex: 'u32',\n    AuthoritySignature: 'Signature',\n    Heartbeat: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex',\n      validatorsLen: 'u32'\n    },\n    HeartbeatTo244: {\n      blockNumber: 'BlockNumber',\n      networkState: 'OpaqueNetworkState',\n      sessionIndex: 'SessionIndex',\n      authorityIndex: 'AuthIndex'\n    },\n    OpaqueMultiaddr: 'Bytes',\n    OpaquePeerId: 'Bytes',\n    OpaqueNetworkState: {\n      peerId: 'OpaquePeerId',\n      externalAddresses: 'Vec<OpaqueMultiaddr>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    CallIndex: '(u8, u8)',\n    LotteryConfig: {\n      price: 'Balance',\n      start: 'BlockNumber',\n      length: 'BlockNumber',\n      delay: 'BlockNumber',\n      repeat: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { AllHashers } from \"./hashers.js\";\nimport { v9 } from \"./v9.js\";\nimport { v10 } from \"./v10.js\";\nimport { v11 } from \"./v11.js\";\nimport { v12 } from \"./v12.js\";\nimport { v13 } from \"./v13.js\";\nimport { v14 } from \"./v14.js\";\nexport { AllHashers };\nexport default {\n  rpc: {},\n  types: objectSpread({}, v9, v10, v11, v12, v13, v14, {\n    // latest mappings\n    ErrorMetadataLatest: 'ErrorMetadataV14',\n    EventMetadataLatest: 'EventMetadataV14',\n    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',\n    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',\n    FunctionMetadataLatest: 'FunctionMetadataV14',\n    MetadataLatest: 'MetadataV14',\n    PalletCallMetadataLatest: 'PalletCallMetadataV14',\n    PalletConstantMetadataLatest: 'PalletConstantMetadataV14',\n    PalletErrorMetadataLatest: 'PalletErrorMetadataV14',\n    PalletEventMetadataLatest: 'PalletEventMetadataV14',\n    PalletMetadataLatest: 'PalletMetadataV14',\n    PalletStorageMetadataLatest: 'PalletStorageMetadataV14',\n    PortableType: 'PortableTypeV14',\n    SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',\n    StorageEntryMetadataLatest: 'StorageEntryMetadataV14',\n    StorageEntryModifierLatest: 'StorageEntryModifierV14',\n    StorageEntryTypeLatest: 'StorageEntryTypeV14',\n    StorageHasher: 'StorageHasherV14',\n    // the enum containing all the mappings\n    MetadataAll: {\n      _enum: {\n        V0: 'DoNotConstruct<MetadataV0>',\n        V1: 'DoNotConstruct<MetadataV1>',\n        V2: 'DoNotConstruct<MetadataV2>',\n        V3: 'DoNotConstruct<MetadataV3>',\n        V4: 'DoNotConstruct<MetadataV4>',\n        V5: 'DoNotConstruct<MetadataV5>',\n        V6: 'DoNotConstruct<MetadataV6>',\n        V7: 'DoNotConstruct<MetadataV7>',\n        V8: 'DoNotConstruct<MetadataV8>',\n        // First version on Kusama in V9, dropping will be problematic\n        V9: 'MetadataV9',\n        V10: 'MetadataV10',\n        V11: 'MetadataV11',\n        V12: 'MetadataV12',\n        V13: 'MetadataV13',\n        V14: 'MetadataV14'\n      }\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const AllHashers = {\n  Blake2_128: null,\n  // eslint-disable-line camelcase\n  Blake2_256: null,\n  // eslint-disable-line camelcase\n  Blake2_128Concat: null,\n  // eslint-disable-line camelcase\n  Twox128: null,\n  Twox256: null,\n  Twox64Concat: null,\n  // new in v11\n  Identity: null\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v10 = {\n  // v10\n  ErrorMetadataV10: 'ErrorMetadataV9',\n  EventMetadataV10: 'EventMetadataV9',\n  FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n  FunctionMetadataV10: 'FunctionMetadataV9',\n  MetadataV10: {\n    modules: 'Vec<ModuleMetadataV10>'\n  },\n  ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n  ModuleMetadataV10: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV10>',\n    calls: 'Option<Vec<FunctionMetadataV10>>',\n    events: 'Option<Vec<EventMetadataV10>>',\n    constants: 'Vec<ModuleConstantMetadataV10>',\n    errors: 'Vec<ErrorMetadataV10>'\n  },\n  StorageEntryModifierV10: 'StorageEntryModifierV9',\n  StorageEntryMetadataV10: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV10',\n    type: 'StorageEntryTypeV10',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV10: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV10',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV10',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV10'\n      }\n    }\n  },\n  StorageMetadataV10: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV10>'\n  },\n  StorageHasherV10: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Blake2_128Concat: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { AllHashers } from \"./hashers.js\";\nexport const v11 = {\n  // v11\n  ErrorMetadataV11: 'ErrorMetadataV10',\n  EventMetadataV11: 'EventMetadataV10',\n  ExtrinsicMetadataV11: {\n    version: 'u8',\n    signedExtensions: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n  FunctionMetadataV11: 'FunctionMetadataV10',\n  MetadataV11: {\n    modules: 'Vec<ModuleMetadataV11>',\n    extrinsic: 'ExtrinsicMetadataV11'\n  },\n  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n  ModuleMetadataV11: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV11>',\n    calls: 'Option<Vec<FunctionMetadataV11>>',\n    events: 'Option<Vec<EventMetadataV11>>',\n    constants: 'Vec<ModuleConstantMetadataV11>',\n    errors: 'Vec<ErrorMetadataV11>'\n  },\n  StorageEntryModifierV11: 'StorageEntryModifierV10',\n  StorageEntryMetadataV11: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV11',\n    type: 'StorageEntryTypeV11',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV11: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV11',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV11',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV11'\n      }\n    }\n  },\n  StorageMetadataV11: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV11>'\n  },\n  StorageHasherV11: {\n    _enum: AllHashers\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v12 = {\n  // v12\n  ErrorMetadataV12: 'ErrorMetadataV11',\n  EventMetadataV12: 'EventMetadataV11',\n  ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n  FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n  FunctionMetadataV12: 'FunctionMetadataV11',\n  MetadataV12: {\n    modules: 'Vec<ModuleMetadataV12>',\n    extrinsic: 'ExtrinsicMetadataV12'\n  },\n  ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n  ModuleMetadataV12: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV12>',\n    calls: 'Option<Vec<FunctionMetadataV12>>',\n    events: 'Option<Vec<EventMetadataV12>>',\n    constants: 'Vec<ModuleConstantMetadataV12>',\n    errors: 'Vec<ErrorMetadataV12>',\n    index: 'u8'\n  },\n  StorageEntryModifierV12: 'StorageEntryModifierV11',\n  StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n  StorageEntryTypeV12: 'StorageEntryTypeV11',\n  StorageMetadataV12: 'StorageMetadataV11',\n  StorageHasherV12: 'StorageHasherV11'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v13 = {\n  // v13\n  ErrorMetadataV13: 'ErrorMetadataV12',\n  EventMetadataV13: 'EventMetadataV12',\n  ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',\n  FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',\n  FunctionMetadataV13: 'FunctionMetadataV12',\n  MetadataV13: {\n    modules: 'Vec<ModuleMetadataV13>',\n    extrinsic: 'ExtrinsicMetadataV13'\n  },\n  ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',\n  ModuleMetadataV13: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV13>',\n    calls: 'Option<Vec<FunctionMetadataV13>>',\n    events: 'Option<Vec<EventMetadataV13>>',\n    constants: 'Vec<ModuleConstantMetadataV13>',\n    errors: 'Vec<ErrorMetadataV13>',\n    index: 'u8'\n  },\n  StorageEntryModifierV13: 'StorageEntryModifierV12',\n  StorageEntryMetadataV13: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV13',\n    type: 'StorageEntryTypeV13',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryTypeV13: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV13',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV13',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV13'\n      },\n      NMap: {\n        keyVec: 'Vec<Type>',\n        hashers: 'Vec<StorageHasherV13>',\n        value: 'Type'\n      }\n    }\n  },\n  StorageMetadataV13: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV13>'\n  },\n  StorageHasherV13: 'StorageHasherV12'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport { Si1Variant } from \"../scaleInfo/v1.js\";\nexport const v14 = {\n  // registry\n  PortableTypeV14: {\n    id: 'Si1LookupTypeId',\n    type: 'Si1Type'\n  },\n  // compatibility with earlier layouts, i.e. don't break previous users\n  ErrorMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  EventMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<Type>'\n  }),\n  FunctionArgumentMetadataV14: {\n    name: 'Text',\n    type: 'Type',\n    typeName: 'Option<Type>'\n  },\n  FunctionMetadataV14: objectSpread({}, Si1Variant, {\n    args: 'Vec<FunctionArgumentMetadataV14>'\n  }),\n  // V14\n  ExtrinsicMetadataV14: {\n    type: 'SiLookupTypeId',\n    version: 'u8',\n    signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n  },\n  MetadataV14: {\n    lookup: 'PortableRegistry',\n    pallets: 'Vec<PalletMetadataV14>',\n    extrinsic: 'ExtrinsicMetadataV14',\n    type: 'SiLookupTypeId'\n  },\n  PalletCallMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletConstantMetadataV14: {\n    name: 'Text',\n    type: 'SiLookupTypeId',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  PalletErrorMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletEventMetadataV14: {\n    type: 'SiLookupTypeId'\n  },\n  PalletMetadataV14: {\n    name: 'Text',\n    storage: 'Option<PalletStorageMetadataV14>',\n    calls: 'Option<PalletCallMetadataV14>',\n    events: 'Option<PalletEventMetadataV14>',\n    constants: 'Vec<PalletConstantMetadataV14>',\n    errors: 'Option<PalletErrorMetadataV14>',\n    index: 'u8'\n  },\n  PalletStorageMetadataV14: {\n    prefix: 'Text',\n    // NOTE: Renamed from entries\n    items: 'Vec<StorageEntryMetadataV14>'\n  },\n  SignedExtensionMetadataV14: {\n    identifier: 'Text',\n    type: 'SiLookupTypeId',\n    additionalSigned: 'SiLookupTypeId'\n  },\n  StorageEntryMetadataV14: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV14',\n    type: 'StorageEntryTypeV14',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV14: 'StorageEntryModifierV13',\n  StorageEntryTypeV14: {\n    _enum: {\n      Plain: 'SiLookupTypeId',\n      Map: {\n        hashers: 'Vec<StorageHasherV14>',\n        key: 'SiLookupTypeId',\n        // NOTE: Renamed from \"keys\"\n        value: 'SiLookupTypeId'\n      }\n    }\n  },\n  StorageHasherV14: 'StorageHasherV13'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v9 = {\n  // v9\n  ErrorMetadataV9: {\n    name: 'Text',\n    docs: 'Vec<Text>'\n  },\n  EventMetadataV9: {\n    name: 'Text',\n    args: 'Vec<Type>',\n    docs: 'Vec<Text>'\n  },\n  FunctionArgumentMetadataV9: {\n    name: 'Text',\n    type: 'Type'\n  },\n  FunctionMetadataV9: {\n    name: 'Text',\n    args: 'Vec<FunctionArgumentMetadataV9>',\n    docs: 'Vec<Text>'\n  },\n  MetadataV9: {\n    modules: 'Vec<ModuleMetadataV9>'\n  },\n  ModuleConstantMetadataV9: {\n    name: 'Text',\n    type: 'Type',\n    value: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  ModuleMetadataV9: {\n    name: 'Text',\n    storage: 'Option<StorageMetadataV9>',\n    calls: 'Option<Vec<FunctionMetadataV9>>',\n    events: 'Option<Vec<EventMetadataV9>>',\n    constants: 'Vec<ModuleConstantMetadataV9>',\n    errors: 'Vec<ErrorMetadataV9>'\n  },\n  StorageEntryMetadataV9: {\n    name: 'Text',\n    modifier: 'StorageEntryModifierV9',\n    type: 'StorageEntryTypeV9',\n    fallback: 'Bytes',\n    docs: 'Vec<Text>'\n  },\n  StorageEntryModifierV9: {\n    _enum: ['Optional', 'Default', 'Required']\n  },\n  StorageEntryTypeV9: {\n    _enum: {\n      Plain: 'Type',\n      Map: {\n        hasher: 'StorageHasherV9',\n        key: 'Type',\n        value: 'Type',\n        linked: 'bool'\n      },\n      DoubleMap: {\n        hasher: 'StorageHasherV9',\n        key1: 'Type',\n        key2: 'Type',\n        value: 'Type',\n        key2Hasher: 'StorageHasherV9'\n      }\n    }\n  },\n  StorageHasherV9: {\n    _enum: {\n      Blake2_128: null,\n      // eslint-disable-line camelcase\n      Blake2_256: null,\n      // eslint-disable-line camelcase\n      Twox128: null,\n      Twox256: null,\n      Twox64Concat: null\n    }\n  },\n  StorageMetadataV9: {\n    prefix: 'Text',\n    items: 'Vec<StorageEntryMetadataV9>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    generateBatchProof: {\n      description: 'Generate MMR proof for the given leaf indices.',\n      params: [{\n        name: 'leafIndices',\n        type: 'Vec<u64>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MmrLeafProof'\n    },\n    generateProof: {\n      description: 'Generate MMR proof for given leaf index.',\n      params: [{\n        name: 'leafIndex',\n        type: 'u64'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MmrLeafBatchProof'\n    }\n  },\n  types: {\n    MmrLeafBatchProof: {\n      blockHash: 'BlockHash',\n      leaves: 'Bytes',\n      proof: 'Bytes'\n    },\n    MmrLeafProof: {\n      blockHash: 'BlockHash',\n      leaf: 'Bytes',\n      proof: 'Bytes'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    localStorageSet: {\n      description: 'Set offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }, {\n        name: 'value',\n        type: 'Bytes'\n      }],\n      type: 'Null'\n    },\n    localStorageGet: {\n      description: 'Get offchain local storage under given key and prefix',\n      params: [{\n        name: 'kind',\n        type: 'StorageKind'\n      }, {\n        name: 'key',\n        type: 'Bytes'\n      }],\n      type: 'Option<Bytes>'\n    }\n  },\n  types: {\n    StorageKind: {\n      _enum: {\n        PERSISTENT: 1,\n        LOCAL: 2\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',\n    Kind: '[u8; 16]',\n    OffenceDetails: {\n      offender: 'Offender',\n      reporters: 'Vec<Reporter>'\n    },\n    Offender: 'IdentificationTuple',\n    OpaqueTimeSlot: 'Bytes',\n    ReportIdOf: 'Hash',\n    Reporter: 'AccountId'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nimport hrmpTypes from \"./hrmp.js\";\nimport slotTypes from \"./slots.js\"; // proposeParachain\n\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    genesisHead: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Bytes',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nconst cumulusTypes = {\n  ServiceQuality: {\n    _enum: ['Ordered', 'Fast']\n  }\n};\nconst disputeTypes = {\n  DisputeLocation: {\n    _enum: ['Local', 'Remote']\n  },\n  DisputeResult: {\n    _enum: ['Valid', 'Invalid']\n  },\n  DisputeState: {\n    validatorsFor: 'BitVec',\n    validatorsAgainst: 'BitVec',\n    start: 'BlockNumber',\n    concludedAt: 'Option<BlockNumber>'\n  },\n  DisputeStatement: {\n    _enum: {\n      Valid: 'ValidDisputeStatementKind',\n      Invalid: 'InvalidDisputeStatementKind'\n    }\n  },\n  DisputeStatementSet: {\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex',\n    statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'\n  },\n  ExplicitDisputeStatement: {\n    valid: 'bool',\n    candidateHash: 'CandidateHash',\n    session: 'SessionIndex'\n  },\n  InvalidDisputeStatementKind: {\n    _enum: ['Explicit']\n  },\n  MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',\n  ValidDisputeStatementKind: {\n    _enum: {\n      Explicit: 'Null',\n      BackingSeconded: 'Hash',\n      BackingValid: 'Hash',\n      ApprovalChecking: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, cumulusTypes, disputeTypes, hrmpTypes, proposeTypes, slotTypes, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AbridgedHostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber'\n    },\n    AbridgedHrmpChannel: {\n      maxCapacity: 'u32',\n      maxTotalSize: 'u32',\n      maxMessageSize: 'u32',\n      msgCount: 'u32',\n      totalSize: 'u32',\n      mqcHead: 'Option<Hash>'\n    },\n    AssignmentId: 'AccountId',\n    AssignmentKind: {\n      _enum: {\n        Parachain: 'Null',\n        Parathread: '(CollatorId, u32)'\n      }\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuthorityDiscoveryId: 'AccountId',\n    AvailabilityBitfield: 'BitVec',\n    AvailabilityBitfieldRecord: {\n      bitfield: 'AvailabilityBitfield',\n      submittedTt: 'BlockNumber'\n    },\n    BackedCandidate: {\n      candidate: 'CommittedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    BufferedSessionChange: {\n      applyAt: 'BlockNumber',\n      validators: 'Vec<ValidatorId>',\n      queued: 'Vec<ValidatorId>',\n      sessionIndex: 'SessionIndex'\n    },\n    CandidateCommitments: {\n      upwardMessages: 'Vec<UpwardMessage>',\n      horizontalMessages: 'Vec<OutboundHrmpMessage>',\n      newValidationCode: 'Option<ValidationCode>',\n      headData: 'HeadData',\n      processedDownwardMessages: 'u32',\n      hrmpWatermark: 'BlockNumber'\n    },\n    CandidateDescriptor: {\n      paraId: 'ParaId',\n      relayParent: 'RelayChainHash',\n      collatorId: 'CollatorId',\n      persistedValidationDataHash: 'Hash',\n      povHash: 'Hash',\n      erasureRoot: 'Hash',\n      signature: 'CollatorSignature',\n      paraHead: 'Hash',\n      validationCodeHash: 'ValidationCodeHash'\n    },\n    CandidateHash: 'Hash',\n    CandidateInfo: {\n      who: 'AccountId',\n      deposit: 'Balance'\n    },\n    CandidatePendingAvailability: {\n      core: 'CoreIndex',\n      hash: 'CandidateHash',\n      descriptor: 'CandidateDescriptor',\n      availabilityVotes: 'BitVec',\n      backers: 'BitVec',\n      relayParentNumber: 'BlockNumber',\n      backedInNumber: 'BlockNumber',\n      backingGroup: 'GroupIndex'\n    },\n    CandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitmentsHash: 'Hash'\n    },\n    GlobalValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    CollatorId: 'H256',\n    CollatorSignature: 'Signature',\n    CommittedCandidateReceipt: {\n      descriptor: 'CandidateDescriptor',\n      commitments: 'CandidateCommitments'\n    },\n    CoreAssignment: {\n      core: 'CoreIndex',\n      paraId: 'ParaId',\n      kind: 'AssignmentKind',\n      groupIdx: 'GroupIndex'\n    },\n    CoreIndex: 'u32',\n    CoreOccupied: {\n      _enum: {\n        Parathread: 'ParathreadEntry',\n        Parachain: 'Null'\n      }\n    },\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: 'Bytes',\n    GroupIndex: 'u32',\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    HostConfiguration: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      maxUpwardQueueCount: 'u32',\n      maxUpwardQueueSize: 'u32',\n      maxUpwardMessageSize: 'u32',\n      maxUpwardMessageNumPerCandidate: 'u32',\n      hrmpMaxMessageNumPerCandidate: 'u32',\n      validationUpgradeFrequency: 'BlockNumber',\n      validationUpgradeDelay: 'BlockNumber',\n      maxPovSize: 'u32',\n      maxDownwardMessageSize: 'u32',\n      preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n      hrmpMaxParachainOutboundChannels: 'u32',\n      hrmpMaxParathreadOutboundChannels: 'u32',\n      hrmpOpenRequestTtl: 'u32',\n      hrmpSenderDeposit: 'Balance',\n      hrmpRecipientDeposit: 'Balance',\n      hrmpChannelMaxCapacity: 'u32',\n      hrmpChannelMaxTotalSize: 'u32',\n      hrmpMaxParachainInboundChannels: 'u32',\n      hrmpMaxParathreadInboundChannels: 'u32',\n      hrmpChannelMaxMessageSize: 'u32',\n      codeRetentionPeriod: 'BlockNumber',\n      parathreadCores: 'u32',\n      parathreadRetries: 'u32',\n      groupRotationFrequency: 'BlockNumber',\n      chainAvailabilityPeriod: 'BlockNumber',\n      threadAvailabilityPeriod: 'BlockNumber',\n      schedulingLookahead: 'u32',\n      maxValidatorsPerCore: 'Option<u32>',\n      maxValidators: 'Option<u32>',\n      disputePeriod: 'SessionIndex',\n      disputePostConclusionAcceptancePeriod: 'BlockNumber',\n      disputeMaxSpamSlots: 'u32',\n      disputeConclusionByTimeOutPeriod: 'BlockNumber',\n      noShowSlots: 'u32',\n      nDelayTranches: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      neededApprovals: 'u32',\n      relayVrfModuloSamples: 'u32'\n    },\n    InboundDownwardMessage: {\n      pubSentAt: 'BlockNumber',\n      pubMsg: 'DownwardMessage'\n    },\n    InboundHrmpMessage: {\n      sentAt: 'BlockNumber',\n      data: 'Bytes'\n    },\n    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    MessageIngestionType: {\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n    },\n    MessageQueueChain: 'RelayChainHash',\n    OutboundHrmpMessage: {\n      recipient: 'u32',\n      data: 'Bytes'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParachainInherentData: {\n      validationData: 'PersistedValidationData',\n      relayChainState: 'StorageProof',\n      downwardMessages: 'Vec<InboundDownwardMessage>',\n      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n    },\n    ParachainsInherentData: {\n      bitfields: 'SignedAvailabilityBitfields',\n      backedCandidates: 'Vec<BackedCandidate>',\n      disputes: 'MultiDisputeStatementSet',\n      parentHeader: 'Header'\n    },\n    ParaGenesisArgs: {\n      genesisHead: 'Bytes',\n      validationCode: 'Bytes',\n      parachain: 'bool'\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      manager: 'AccountId',\n      deposit: 'Balance',\n      locked: 'bool'\n    },\n    ParaLifecycle: {\n      _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<ReplacementTimes>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    ParathreadClaim: '(ParaId, CollatorId)',\n    ParathreadClaimQueue: {\n      queue: 'Vec<QueuedParathread>',\n      nextCoreOffset: 'u32'\n    },\n    ParathreadEntry: {\n      claim: 'ParathreadClaim',\n      retries: 'u32'\n    },\n    ParaValidatorIndex: 'u32',\n    PersistedValidationData: {\n      parentHead: 'HeadData',\n      relayParentNumber: 'RelayChainBlockNumber',\n      relayParentStorageRoot: 'Hash',\n      maxPovSize: 'u32'\n    },\n    QueuedParathread: {\n      claim: 'ParathreadEntry',\n      coreOffset: 'u32'\n    },\n    RelayBlockNumber: 'u32',\n    RelayChainBlockNumber: 'RelayBlockNumber',\n    RelayHash: 'Hash',\n    RelayChainHash: 'RelayHash',\n    Remark: '[u8; 32]',\n    ReplacementTimes: {\n      expectedAt: 'BlockNumber',\n      activatedAt: 'BlockNumber'\n    },\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SessionInfo: {\n      validators: 'Vec<ValidatorId>',\n      discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n      assignmentKeys: 'Vec<AssignmentId>',\n      validatorGroups: 'Vec<SessionInfoValidatorGroup>',\n      nCores: 'u32',\n      zerothDelayTrancheWidth: 'u32',\n      relayVrfModuloSamples: 'u32',\n      nDelayTranches: 'u32',\n      noShowSlots: 'u32',\n      neededApprovals: 'u32'\n    },\n    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n    SignedAvailabilityBitfield: {\n      payload: 'BitVec',\n      validatorIndex: 'ParaValidatorIndex',\n      signature: 'ValidatorSignature'\n    },\n    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    TransientValidationData: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>',\n      dmqLength: 'u32'\n    },\n    UpgradeGoAhead: {\n      _enum: ['Abort', 'GoAhead']\n    },\n    UpgradeRestriction: {\n      _enum: ['Present']\n    },\n    UpwardMessage: 'Bytes',\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidationCodeHash: 'Hash',\n    ValidationData: {\n      persisted: 'PersistedValidationData',\n      transient: 'TransientValidationData'\n    },\n    ValidationDataType: {\n      validationData: 'ValidationData',\n      relayChainState: 'Vec<Bytes>'\n    },\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    MessagingStateSnapshot: {\n      relayDispatchQueueSize: '(u32, u32)',\n      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n    },\n    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n    SystemInherentData: 'ParachainInherentData',\n    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  HrmpChannel: {\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32',\n    maxMessageSize: 'u32',\n    msgCount: 'u32',\n    totalSize: 'u32',\n    mqcHead: 'Option<Hash>',\n    senderDeposit: 'Balance',\n    recipientDeposit: 'Balance'\n  },\n  HrmpChannelId: {\n    sender: 'u32',\n    receiver: 'u32'\n  },\n  HrmpOpenChannelRequest: {\n    confirmed: 'bool',\n    age: 'SessionIndex',\n    senderDeposit: 'Balance',\n    maxMessageSize: 'u32',\n    maxCapacity: 'u32',\n    maxTotalSize: 'u32'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util'; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nconst SlotRange10 = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n};\nconst SlotRange = {\n  _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']\n};\nconst oldTypes = {\n  Bidder: {\n    _enum: {\n      New: 'NewBidder',\n      Existing: 'ParaId'\n    }\n  },\n  IncomingParachain: {\n    _enum: {\n      Unset: 'NewBidder',\n      Fixed: 'IncomingParachainFixed',\n      Deploy: 'IncomingParachainDeploy'\n    }\n  },\n  IncomingParachainDeploy: {\n    code: 'ValidationCode',\n    initialHeadData: 'HeadData'\n  },\n  IncomingParachainFixed: {\n    codeHash: 'Hash',\n    codeSize: 'u32',\n    initialHeadData: 'HeadData'\n  },\n  NewBidder: {\n    who: 'AccountId',\n    sub: 'SubId'\n  },\n  SubId: 'u32'\n};\nexport default objectSpread({}, oldTypes, {\n  AuctionIndex: 'u32',\n  LeasePeriod: 'BlockNumber',\n  LeasePeriodOf: 'BlockNumber',\n  SlotRange10,\n  SlotRange,\n  WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,\n  WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,\n  WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',\n  WinnersData10: 'Vec<WinnersDataTuple10>',\n  WinnersData: 'Vec<WinnersDataTuple>',\n  WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',\n  WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'\n});","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst QUERY_PARAMS = [{\n  name: 'extrinsic',\n  type: 'Bytes'\n}, {\n  name: 'at',\n  type: 'BlockHash',\n  isHistoric: true,\n  isOptional: true\n}];\nexport default {\n  rpc: {\n    queryInfo: {\n      description: 'Retrieves the fee information for an encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'RuntimeDispatchInfo'\n    },\n    queryFeeDetails: {\n      description: 'Query the detailed fee of a given encoded extrinsic',\n      params: QUERY_PARAMS,\n      type: 'FeeDetails'\n    }\n  },\n  types: {\n    FeeDetails: {\n      inclusionFee: 'Option<InclusionFee>' // skipped in serde\n      // tip: 'Balance'\n\n    },\n    InclusionFee: {\n      baseFee: 'Balance',\n      lenFee: 'Balance',\n      adjustedWeightFee: 'Balance'\n    },\n    RuntimeDispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      partialFee: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Approvals: '[bool; 4]'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ProxyDefinition: {\n      delegate: 'AccountId',\n      proxyType: 'ProxyType',\n      delay: 'BlockNumber'\n    },\n    ProxyType: {\n      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']\n    },\n    ProxyAnnouncement: {\n      real: 'AccountId',\n      callHash: 'Hash',\n      height: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    AccountStatus: {\n      validity: 'AccountValidity',\n      freeBalance: 'Balance',\n      lockedBalance: 'Balance',\n      signature: 'Vec<u8>',\n      vat: 'Permill'\n    },\n    AccountValidity: {\n      _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ActiveRecovery: {\n      created: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>'\n    },\n    RecoveryConfig: {\n      delayPeriod: 'BlockNumber',\n      deposit: 'Balance',\n      friends: 'Vec<AccountId>',\n      threshold: 'u16'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    methods: {\n      description: 'Retrieves the list of RPC methods that are exposed by the node',\n      params: [],\n      type: 'RpcMethods'\n    }\n  },\n  types: {\n    RpcMethods: {\n      version: 'u32',\n      methods: 'Vec<Text>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst numberTypes = {\n  Fixed64: 'Int<64, Fixed64>',\n  FixedI64: 'Int<64, FixedI64>',\n  FixedU64: 'UInt<64, FixedU64>',\n  Fixed128: 'Int<128, Fixed128>',\n  FixedI128: 'Int<128, FixedI128>',\n  FixedU128: 'UInt<128, FixedU128>',\n  I32F32: 'Int<64, I32F32>',\n  U32F32: 'UInt<64, U32F32>',\n  PerU16: 'UInt<16, PerU16>',\n  Perbill: 'UInt<32, Perbill>',\n  Percent: 'UInt<8, Percent>',\n  Permill: 'UInt<32, Permill>',\n  Perquintill: 'UInt<64, Perquintill>'\n}; // Since we don't have insight into the origin specification, we can only define what we know about\n// in a pure Substrate/Polkadot implementation, any other custom origins won't be handled at all\n\nexport const knownOrigins = {\n  //\n  // (1) Defaults from Substrate\n  //\n  Council: 'CollectiveOrigin',\n  System: 'SystemOrigin',\n  TechnicalCommittee: 'CollectiveOrigin',\n  //\n  // (2) Defaults from Polkadot\n  //\n  Xcm: 'XcmOrigin',\n  XcmPallet: 'XcmOrigin',\n  //\n  // (3) Defaults from Acala\n  //\n  Authority: 'AuthorityOrigin',\n  GeneralCouncil: 'CollectiveOrigin'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, numberTypes, {\n    AccountId: 'AccountId32',\n    AccountId20: 'GenericEthereumAccountId',\n    AccountId32: 'GenericAccountId',\n    AccountIdOf: 'AccountId',\n    AccountIndex: 'GenericAccountIndex',\n    Address: 'MultiAddress',\n    AssetId: 'u32',\n    Balance: 'UInt<128, Balance>',\n    BalanceOf: 'Balance',\n    Block: 'GenericBlock',\n    BlockNumber: 'u32',\n    BlockNumberFor: 'BlockNumber',\n    BlockNumberOf: 'BlockNumber',\n    Call: 'GenericCall',\n    CallHash: 'Hash',\n    CallHashOf: 'CallHash',\n    ChangesTrieConfiguration: {\n      digestInterval: 'u32',\n      digestLevels: 'u32'\n    },\n    ChangesTrieSignal: {\n      _enum: {\n        NewConfiguration: 'Option<ChangesTrieConfiguration>'\n      }\n    },\n    ConsensusEngineId: 'GenericConsensusEngineId',\n    CodecHash: 'Hash',\n    CrateVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Digest: {\n      logs: 'Vec<DigestItem>'\n    },\n    DigestItem: {\n      _enum: {\n        Other: 'Bytes',\n        // 0\n        AuthoritiesChange: 'Vec<AuthorityId>',\n        // 1\n        ChangesTrieRoot: 'Hash',\n        // 2\n        SealV0: 'SealV0',\n        // 3\n        Consensus: 'Consensus',\n        // 4\n        Seal: 'Seal',\n        // 5\n        PreRuntime: 'PreRuntime',\n        // 6\n        ChangesTrieSignal: 'ChangesTrieSignal',\n        // 7\n        RuntimeEnvironmentUpdated: 'Null' // 8\n\n      }\n    },\n    ExtrinsicsWeight: {\n      normal: 'Weight',\n      operational: 'Weight'\n    },\n    H32: '[u8; 4; H32]',\n    H64: '[u8; 8; H64]',\n    H128: '[u8; 16; H128]',\n    H160: '[u8; 20; H160]',\n    H256: '[u8; 32; H256]',\n    H512: '[u8; 64; H512]',\n    H1024: '[u8; 128; H1024]',\n    H2048: '[u8; 256; H2048]',\n    Hash: 'H256',\n    Header: {\n      parentHash: 'Hash',\n      number: 'Compact<BlockNumber>',\n      stateRoot: 'Hash',\n      extrinsicsRoot: 'Hash',\n      digest: 'Digest'\n    },\n    HeaderPartial: {\n      parentHash: 'Hash',\n      // since we only parse JSON with this, having non-compact works\n      number: 'BlockNumber'\n    },\n    IndicesLookupSource: 'GenericLookupSource',\n    Index: 'u32',\n    Justification: '(ConsensusEngineId, EncodedJustification)',\n    EncodedJustification: 'Bytes',\n    Justifications: 'Vec<Justification>',\n    KeyValue: '(StorageKey, StorageData)',\n    KeyTypeId: 'u32',\n    LockIdentifier: '[u8; 8]',\n    LookupSource: 'MultiAddress',\n    LookupTarget: 'AccountId',\n    ModuleId: 'LockIdentifier',\n    MultiAddress: 'GenericMultiAddress',\n    MultiSigner: {\n      _enum: {\n        Ed25519: '[u8; 32]',\n        Sr25519: '[u8; 32]',\n        Ecdsa: '[u8; 33]'\n      }\n    },\n    Moment: 'UInt<64, Moment>',\n    OpaqueCall: 'Bytes',\n    Origin: 'DoNotConstruct<Origin>',\n    OriginCaller: {\n      _enum: {\n        // this should be dynamically built from the actual modules, based on index\n        System: 'SystemOrigin'\n      }\n    },\n    PalletId: 'LockIdentifier',\n    PalletsOrigin: 'OriginCaller',\n    PalletVersion: {\n      major: 'u16',\n      minor: 'u8',\n      patch: 'u8'\n    },\n    Pays: {\n      _enum: ['Yes', 'No']\n    },\n    Phantom: 'Null',\n    PhantomData: 'Null',\n    Releases: {\n      _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']\n    },\n    RuntimeDbWeight: {\n      read: 'Weight',\n      write: 'Weight'\n    },\n    SignedBlock: 'SignedBlockWithJustifications',\n    SignedBlockWithJustification: {\n      block: 'Block',\n      justification: 'Option<EncodedJustification>'\n    },\n    SignedBlockWithJustifications: {\n      block: 'Block',\n      justifications: 'Option<Justifications>'\n    },\n    Slot: 'u64',\n    StorageData: 'Bytes',\n    StorageProof: {\n      trieNodes: 'Vec<Bytes>'\n    },\n    TransactionPriority: 'u64',\n    TransactionInfo: {\n      _alias: {\n        dataSize: 'size'\n      },\n      chunkRoot: 'H256',\n      contentHash: 'H256',\n      dataSize: 'u32',\n      blockChunks: 'u32'\n    },\n    TransactionStorageProof: {\n      chunk: 'Vec<u8>',\n      proof: 'Vec<Vec<u8>>'\n    },\n    ValidatorId: 'AccountId',\n    ValidatorIdOf: 'ValidatorId',\n    Weight: 'u64',\n    WeightMultiplier: 'Fixed64',\n    // digest\n    PreRuntime: '(ConsensusEngineId, Bytes)',\n    SealV0: '(u64, Signature)',\n    Seal: '(ConsensusEngineId, Bytes)',\n    Consensus: '(ConsensusEngineId, Bytes)'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\"; // order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nexport default {\n  rpc: {},\n  types: objectSpread({}, v0, v1, {\n    // latest mappings\n    SiField: 'Si1Field',\n    SiLookupTypeId: 'Si1LookupTypeId',\n    SiPath: 'Si1Path',\n    SiType: 'Si1Type',\n    SiTypeDef: 'Si1TypeDef',\n    SiTypeDefArray: 'Si1TypeDefArray',\n    SiTypeDefBitSequence: 'Si1TypeDefBitSequence',\n    SiTypeDefCompact: 'Si1TypeDefCompact',\n    SiTypeDefComposite: 'Si1TypeDefComposite',\n    SiTypeDefPrimitive: 'Si1TypeDefPrimitive',\n    SiTypeDefSequence: 'Si1TypeDefSequence',\n    SiTypeDefTuple: 'Si1TypeDefTuple',\n    SiTypeParameter: 'Si1TypeParameter',\n    SiTypeDefVariant: 'Si1TypeDefVariant',\n    SiVariant: 'Si1Variant'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  Si0Field: {\n    name: 'Option<Text>',\n    type: 'Si0LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si0LookupTypeId: 'u32',\n  Si0Path: 'Vec<Text>',\n  Si0Type: {\n    path: 'Si0Path',\n    params: 'Vec<Si0LookupTypeId>',\n    def: 'Si0TypeDef'\n  },\n  Si0TypeDef: {\n    _enum: {\n      Composite: 'Si0TypeDefComposite',\n      Variant: 'Si0TypeDefVariant',\n      Sequence: 'Si0TypeDefSequence',\n      Array: 'Si0TypeDefArray',\n      Tuple: 'Si0TypeDefTuple',\n      Primitive: 'Si0TypeDefPrimitive',\n      Compact: 'Si0TypeDefCompact',\n      Phantom: 'Si0TypeDefPhantom',\n      BitSequence: 'Si0TypeDefBitSequence'\n    }\n  },\n  Si0TypeDefArray: {\n    len: 'u32',\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefBitSequence: {\n    bitStoreType: 'Si0LookupTypeId',\n    bitOrderType: 'Si0LookupTypeId'\n  },\n  Si0TypeDefCompact: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefComposite: {\n    fields: 'Vec<Si0Field>'\n  },\n  Si0TypeDefPhantom: 'Null',\n  Si0TypeDefVariant: {\n    variants: 'Vec<Si0Variant>'\n  },\n  Si0TypeDefPrimitive: {\n    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']\n  },\n  Si0TypeDefSequence: {\n    type: 'Si0LookupTypeId'\n  },\n  Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',\n  Si0TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si0LookupTypeId>'\n  },\n  Si0Variant: {\n    name: 'Text',\n    fields: 'Vec<Si0Field>',\n    index: 'Option<u8>',\n    discriminant: 'Option<u64>',\n    docs: 'Vec<Text>'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const Si1Variant = {\n  name: 'Text',\n  fields: 'Vec<Si1Field>',\n  index: 'u8',\n  docs: 'Vec<Text>'\n};\nexport const v1 = {\n  Si1Field: {\n    name: 'Option<Text>',\n    type: 'Si1LookupTypeId',\n    typeName: 'Option<Text>',\n    docs: 'Vec<Text>'\n  },\n  Si1LookupTypeId: 'Compact<u32>',\n  Si1Path: 'Si0Path',\n  Si1Type: {\n    path: 'Si1Path',\n    params: 'Vec<Si1TypeParameter>',\n    def: 'Si1TypeDef',\n    docs: 'Vec<Text>'\n  },\n  Si1TypeDef: {\n    _enum: {\n      Composite: 'Si1TypeDefComposite',\n      Variant: 'Si1TypeDefVariant',\n      Sequence: 'Si1TypeDefSequence',\n      Array: 'Si1TypeDefArray',\n      Tuple: 'Si1TypeDefTuple',\n      Primitive: 'Si1TypeDefPrimitive',\n      Compact: 'Si1TypeDefCompact',\n      BitSequence: 'Si1TypeDefBitSequence',\n      // NOTE: This is specific to the implementation for pre-v14 metadata\n      // compatibility (always keep this as the last entry in the enum)\n      HistoricMetaCompat: 'Type'\n    }\n  },\n  Si1TypeDefArray: {\n    len: 'u32',\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefBitSequence: {\n    bitStoreType: 'Si1LookupTypeId',\n    bitOrderType: 'Si1LookupTypeId'\n  },\n  Si1TypeDefCompact: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefComposite: {\n    fields: 'Vec<Si1Field>'\n  },\n  Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',\n  Si1TypeDefSequence: {\n    type: 'Si1LookupTypeId'\n  },\n  Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',\n  Si1TypeParameter: {\n    name: 'Text',\n    type: 'Option<Si1LookupTypeId>'\n  },\n  Si1TypeDefVariant: {\n    variants: 'Vec<Si1Variant>'\n  },\n  Si1Variant\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Period: '(BlockNumber, u32)',\n    Priority: 'u8',\n    SchedulePeriod: 'Period',\n    SchedulePriority: 'Priority',\n    Scheduled: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>',\n      origin: 'PalletsOrigin'\n    },\n    ScheduledTo254: {\n      maybeId: 'Option<Bytes>',\n      priority: 'SchedulePriority',\n      call: 'Call',\n      maybePeriodic: 'Option<SchedulePeriod>'\n    },\n    TaskAddress: '(BlockNumber, u32)'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util'; // The runtime definition of SessionKeys are passed as a Trait to session\n// Defined in `node/runtime/src/lib.rs` as follow\n//   impl_opaque_keys! {\n//     pub struct SessionKeys {\n// Here we revert to tuples to keep the interfaces \"opaque\", as per the use\n\nconst keyTypes = {\n  // key for beefy\n  BeefyKey: '[u8; 33]',\n  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n  Keys: 'SessionKeys4',\n  SessionKeys1: '(AccountId)',\n  SessionKeys2: '(AccountId, AccountId)',\n  SessionKeys3: '(AccountId, AccountId, AccountId)',\n  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n  SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, keyTypes, {\n    FullIdentification: 'Exposure',\n    IdentificationTuple: '(ValidatorId, FullIdentification)',\n    MembershipProof: {\n      session: 'SessionIndex',\n      trieNodes: 'Vec<Vec<u8>>',\n      validatorCount: 'ValidatorCount'\n    },\n    SessionIndex: 'u32',\n    ValidatorCount: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bid: {\n      who: 'AccountId',\n      kind: 'BidKind',\n      value: 'Balance'\n    },\n    BidKind: {\n      _enum: {\n        Deposit: 'Balance',\n        Vouch: '(AccountId, Balance)'\n      }\n    },\n    // a society-specific Judgement (not the same as identity Judgement)\n    SocietyJudgement: {\n      _enum: ['Rebid', 'Reject', 'Approve']\n    },\n    // a society-specific Vote\n    SocietyVote: {\n      _enum: ['Skeptic', 'Reject', 'Approve']\n    },\n    StrikeCount: 'u32',\n    VouchingStatus: {\n      _enum: ['Vouching', 'Banned']\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { objectSpread } from '@polkadot/util';\nconst deprecated = {\n  Points: 'u32',\n  EraPoints: {\n    total: 'Points',\n    individual: 'Vec<Points>'\n  }\n};\nconst phragmen = {\n  CompactAssignments: 'CompactAssignmentsWith16',\n  CompactAssignmentsWith16: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsWith24: {\n    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n  },\n  CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n  CompactAssignmentsTo257: {\n    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n  },\n  CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n  ElectionCompute: {\n    // in previous versions the last entry was \"AuthorityId\"\n    // (since no data attached, and it is via SCALE can rename)\n    _enum: ['OnChain', 'Signed', 'Unsigned']\n  },\n  ElectionPhase: {\n    _enum: {\n      Off: null,\n      Signed: null,\n      Unsigned: '(bool, BlockNumber)',\n      Emergency: null\n    }\n  },\n  ElectionResult: {\n    compute: 'ElectionCompute',\n    slotStake: 'Balance',\n    electedStashes: 'Vec<AccountId>',\n    exposures: 'Vec<(AccountId, Exposure)>'\n  },\n  ElectionScore: '[u128; 3]',\n  ElectionSize: {\n    validators: 'Compact<ValidatorIndex>',\n    nominators: 'Compact<NominatorIndex>'\n  },\n  ElectionStatus: {\n    _enum: {\n      Close: 'Null',\n      Open: 'BlockNumber'\n    }\n  },\n  ExtendedBalance: 'u128',\n  RawSolution: 'RawSolutionWith16',\n  RawSolutionWith16: {\n    compact: 'CompactAssignmentsWith16',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionWith24: {\n    compact: 'CompactAssignmentsWith24',\n    score: 'ElectionScore',\n    round: 'u32'\n  },\n  RawSolutionTo265: 'RawSolutionWith16',\n  ReadySolution: {\n    supports: 'SolutionSupports',\n    score: 'ElectionScore',\n    compute: 'ElectionCompute'\n  },\n  RoundSnapshot: {\n    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n    targets: 'Vec<AccountId>'\n  },\n  SeatHolder: {\n    who: 'AccountId',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  SignedSubmission: {\n    _fallback: 'SignedSubmissionTo276',\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution',\n    reward: 'Balance'\n  },\n  SignedSubmissionTo276: {\n    who: 'AccountId',\n    deposit: 'Balance',\n    solution: 'RawSolution'\n  },\n  SignedSubmissionOf: 'SignedSubmission',\n  SolutionOrSnapshotSize: {\n    voters: 'Compact<u32>',\n    targets: 'Compact<u32>'\n  },\n  SolutionSupport: {\n    total: 'ExtendedBalance',\n    voters: 'Vec<(AccountId, ExtendedBalance)>'\n  },\n  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n  Supports: 'SolutionSupports',\n  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n  Voter: {\n    votes: 'Vec<AccountId>',\n    stake: 'Balance',\n    deposit: 'Balance'\n  },\n  VoteWeight: 'u64'\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, deprecated, phragmen, {\n    ActiveEraInfo: {\n      index: 'EraIndex',\n      start: 'Option<Moment>'\n    },\n    EraIndex: 'u32',\n    EraRewardPoints: {\n      total: 'RewardPoint',\n      individual: 'BTreeMap<AccountId, RewardPoint>'\n    },\n    EraRewards: {\n      total: 'u32',\n      rewards: 'Vec<u32>'\n    },\n    Exposure: {\n      total: 'Compact<Balance>',\n      own: 'Compact<Balance>',\n      others: 'Vec<IndividualExposure>'\n    },\n    Forcing: {\n      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']\n    },\n    IndividualExposure: {\n      who: 'AccountId',\n      value: 'Compact<Balance>'\n    },\n    KeyType: 'AccountId',\n    MomentOf: 'Moment',\n    Nominations: {\n      targets: 'Vec<AccountId>',\n      submittedIn: 'EraIndex',\n      suppressed: 'bool'\n    },\n    NominatorIndex: 'u32',\n    NominatorIndexCompact: 'Compact<NominatorIndex>',\n    OffchainAccuracy: 'PerU16',\n    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n    PhragmenScore: '[u128; 3]',\n    Points: 'u32',\n    RewardDestination: {\n      _enum: {\n        Staked: 'Null',\n        Stash: 'Null',\n        Controller: 'Null',\n        Account: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RewardPoint: 'u32',\n    SlashJournalEntry: {\n      who: 'AccountId',\n      amount: 'Balance',\n      ownSlash: 'Balance'\n    },\n    SlashingSpansTo204: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SlashingSpans: {\n      spanIndex: 'SpanIndex',\n      lastStart: 'EraIndex',\n      lastNonzeroSlash: 'EraIndex',\n      prior: 'Vec<EraIndex>'\n    },\n    SpanIndex: 'u32',\n    SpanRecord: {\n      slashed: 'Balance',\n      paidOut: 'Balance'\n    },\n    StakingLedgerTo223: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>'\n    },\n    StakingLedgerTo240: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      lastReward: 'Option<EraIndex>'\n    },\n    StakingLedger: {\n      stash: 'AccountId',\n      total: 'Compact<Balance>',\n      active: 'Compact<Balance>',\n      unlocking: 'Vec<UnlockChunk>',\n      claimedRewards: 'Vec<EraIndex>'\n    },\n    UnappliedSlashOther: '(AccountId, Balance)',\n    UnappliedSlash: {\n      validator: 'AccountId',\n      own: 'Balance',\n      others: 'Vec<UnappliedSlashOther>',\n      reporters: 'Vec<AccountId>',\n      payout: 'Balance'\n    },\n    UnlockChunk: {\n      value: 'Compact<Balance>',\n      era: 'Compact<BlockNumber>'\n    },\n    ValidatorIndex: 'u16',\n    ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n    ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n    ValidatorPrefsWithCommission: {\n      commission: 'Compact<Perbill>'\n    },\n    ValidatorPrefsWithBlocked: {\n      commission: 'Compact<Perbill>',\n      blocked: 'bool'\n    },\n    ValidatorPrefsTo196: {\n      validatorPayment: 'Compact<Balance>'\n    },\n    ValidatorPrefsTo145: {\n      unstakeThreshold: 'Compact<u32>',\n      validatorPayment: 'Compact<Balance>'\n    }\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    call: {\n      alias: ['state_callAt'],\n      description: 'Perform a call to a builtin on the chain',\n      params: [{\n        name: 'method',\n        type: 'Text'\n      }, {\n        name: 'data',\n        type: 'Bytes'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Bytes'\n    },\n    getKeys: {\n      description: 'Retrieves the keys with a certain prefix',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getPairs: {\n      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n      params: [{\n        name: 'prefix',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<KeyValue>'\n    },\n    getKeysPaged: {\n      alias: ['state_getKeysPagedAt'],\n      description: 'Returns the keys with prefix with pagination support.',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'count',\n        type: 'u32'\n      }, {\n        name: 'startKey',\n        type: 'StorageKey',\n        isOptional: true\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n      alias: ['state_getStorageAt'],\n      description: 'Retrieves the storage for a key',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getStorageHash: {\n      alias: ['state_getStorageHashAt'],\n      description: 'Retrieves the storage hash',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getStorageSize: {\n      alias: ['state_getStorageSizeAt'],\n      description: 'Retrieves the storage size',\n      params: [{\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getChildKeys: {\n      description: 'Retrieves the keys with prefix of a specific child storage',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageKey>'\n    },\n    getChildStorage: {\n      description: 'Retrieves the child storage for a key',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'StorageData'\n    },\n    getChildStorageHash: {\n      description: 'Retrieves the child storage hash',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Hash'\n    },\n    getChildStorageSize: {\n      description: 'Retrieves the child storage size',\n      params: [{\n        name: 'childStorageKey',\n        type: 'StorageKey'\n      }, {\n        name: 'childDefinition',\n        type: 'StorageKey'\n      }, {\n        name: 'childType',\n        type: 'u32'\n      }, {\n        name: 'key',\n        type: 'StorageKey'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'u64'\n    },\n    getMetadata: {\n      description: 'Returns the runtime metadata',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Metadata'\n    },\n    getRuntimeVersion: {\n      alias: ['chain_getRuntimeVersion'],\n      description: 'Get the runtime version',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'RuntimeVersion'\n    },\n    queryStorage: {\n      description: 'Query historical storage entries (by key) starting from a start block',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'fromBlock',\n        type: 'Hash'\n      }, {\n        name: 'toBlock',\n        type: 'BlockHash',\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n      description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Vec<StorageChangeSet>'\n    },\n    getChildReadProof: {\n      description: 'Returns proof of storage for child key entries at a specific block state.',\n      params: [{\n        name: 'childStorageKey',\n        type: 'PrefixedStorageKey'\n      }, {\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    getReadProof: {\n      description: 'Returns proof of storage entries at a specific block state',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ReadProof'\n    },\n    subscribeRuntimeVersion: {\n      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n      description: 'Retrieves the runtime version via subscription',\n      params: [],\n      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],\n      type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n      description: 'Subscribes to storage changes for the provided keys',\n      params: [{\n        name: 'keys',\n        type: 'Vec<StorageKey>',\n        isOptional: true\n      }],\n      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],\n      type: 'StorageChangeSet'\n    },\n    traceBlock: {\n      description: 'Provides a way to trace the re-execution of a single block',\n      params: [{\n        name: 'block',\n        type: 'Hash'\n      }, {\n        name: 'targets',\n        type: 'Option<Text>'\n      }, {\n        name: 'storageKeys',\n        type: 'Option<Text>'\n      }, {\n        name: 'methods',\n        type: 'Option<Text>'\n      }],\n      type: 'TraceBlockResponse'\n    },\n    trieMigrationStatus: {\n      description: 'Check current migration state',\n      params: [{\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'MigrationStatusResult'\n    }\n  },\n  types: {\n    ApiId: '[u8; 8]',\n    BlockTrace: {\n      blockHash: 'Text',\n      parentHash: 'Text',\n      tracingTargets: 'Text',\n      storageKeys: 'Text',\n      spans: 'Vec<BlockTraceSpan>',\n      events: 'Vec<BlockTraceEvent>'\n    },\n    BlockTraceEvent: {\n      target: 'Text',\n      data: 'BlockTraceEventData',\n      parentId: 'Option<u64>'\n    },\n    BlockTraceEventData: {\n      stringValues: 'HashMap<Text, Text>'\n    },\n    BlockTraceSpan: {\n      id: 'u64',\n      parentId: 'Option<u64>',\n      name: 'Text',\n      target: 'Text',\n      wasm: 'bool'\n    },\n    KeyValueOption: '(StorageKey, Option<StorageData>)',\n    MigrationStatusResult: {\n      topRemainingToMigrate: 'u64',\n      childRemainingToMigrate: 'u64'\n    },\n    ReadProof: {\n      at: 'Hash',\n      proof: 'Vec<Bytes>'\n    },\n    RuntimeVersionApi: '(ApiId, u32)',\n    RuntimeVersion: {\n      specName: 'Text',\n      implName: 'Text',\n      authoringVersion: 'u32',\n      specVersion: 'u32',\n      implVersion: 'u32',\n      apis: 'Vec<RuntimeVersionApi>',\n      transactionVersion: 'u32'\n    },\n    RuntimeVersionPartial: {\n      specName: 'Text',\n      specVersion: 'u32'\n    },\n    SpecVersion: 'u32',\n    StorageChangeSet: {\n      block: 'Hash',\n      changes: 'Vec<KeyValueOption>'\n    },\n    TraceBlockResponse: {\n      _enum: {\n        TraceError: 'TraceError',\n        BlockTrace: 'BlockTrace'\n      }\n    },\n    TraceError: {\n      error: 'Text'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    WeightToFeeCoefficient: {\n      coeffInteger: 'Balance',\n      coeffFrac: 'Perbill',\n      negative: 'bool',\n      degree: 'u8'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {\n    genSyncSpec: {\n      endpoint: 'sync_state_genSyncSpec',\n      description: 'Returns the json-serialized chainspec running the node, with a sync state.',\n      params: [{\n        name: 'raw',\n        type: 'bool'\n      }],\n      type: 'Json'\n    }\n  },\n  types: {}\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { rpc } from \"./rpc.js\";\nexport default {\n  rpc,\n  types: {\n    AccountInfo: 'AccountInfoWithTripleRefCount',\n    AccountInfoWithRefCountU8: {\n      nonce: 'Index',\n      refcount: 'u8',\n      data: 'AccountData'\n    },\n    AccountInfoWithRefCount: {\n      _fallback: 'AccountInfoWithRefCountU8',\n      nonce: 'Index',\n      refcount: 'RefCount',\n      data: 'AccountData'\n    },\n    AccountInfoWithDualRefCount: {\n      _fallback: 'AccountInfoWithRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      data: 'AccountData'\n    },\n    // original naming\n    AccountInfoWithProviders: 'AccountInfoWithDualRefCount',\n    AccountInfoWithTripleRefCount: {\n      _fallback: 'AccountInfoWithDualRefCount',\n      nonce: 'Index',\n      consumers: 'RefCount',\n      providers: 'RefCount',\n      sufficients: 'RefCount',\n      data: 'AccountData'\n    },\n    ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',\n    ArithmeticError: {\n      _enum: ['Underflow', 'Overflow', 'DivisionByZero']\n    },\n    BlockLength: {\n      max: 'PerDispatchClassU32'\n    },\n    BlockWeights: {\n      baseBlock: 'Weight',\n      maxBlock: 'Weight',\n      perClass: 'PerDispatchClassWeightsPerClass'\n    },\n    ChainProperties: 'GenericChainProperties',\n    ChainType: {\n      _enum: {\n        Development: 'Null',\n        Local: 'Null',\n        Live: 'Null',\n        Custom: 'Text'\n      }\n    },\n    ConsumedWeight: 'PerDispatchClassWeight',\n    DigestOf: 'Digest',\n    DispatchClass: {\n      _enum: ['Normal', 'Operational', 'Mandatory']\n    },\n    DispatchError: {\n      _enum: {\n        Other: 'Null',\n        CannotLookup: 'Null',\n        BadOrigin: 'Null',\n        Module: 'DispatchErrorModule',\n        ConsumerRemaining: 'Null',\n        NoProviders: 'Null',\n        TooManyConsumers: 'Null',\n        Token: 'TokenError',\n        Arithmetic: 'ArithmeticError',\n        Transactional: 'TransactionalError'\n      }\n    },\n    DispatchErrorModuleU8: {\n      index: 'u8',\n      error: 'u8'\n    },\n    DispatchErrorModuleU8a: {\n      index: 'u8',\n      error: '[u8; 4]'\n    },\n    DispatchErrorModule: 'DispatchErrorModuleU8a',\n    DispatchErrorTo198: {\n      module: 'Option<u8>',\n      error: 'u8'\n    },\n    DispatchInfo: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'Pays'\n    },\n    DispatchInfoTo190: {\n      weight: 'Weight',\n      class: 'DispatchClass'\n    },\n    DispatchInfoTo244: {\n      weight: 'Weight',\n      class: 'DispatchClass',\n      paysFee: 'bool'\n    },\n    DispatchOutcome: 'Result<(), DispatchError>',\n    DispatchResult: 'Result<(), DispatchError>',\n    DispatchResultOf: 'DispatchResult',\n    DispatchResultTo198: 'Result<(), Text>',\n    Event: 'GenericEvent',\n    EventId: '[u8; 2]',\n    EventIndex: 'u32',\n    EventRecord: {\n      phase: 'Phase',\n      event: 'Event',\n      topics: 'Vec<Hash>'\n    },\n    Health: {\n      peers: 'u64',\n      isSyncing: 'bool',\n      shouldHavePeers: 'bool'\n    },\n    InvalidTransaction: {\n      _enum: {\n        Call: 'Null',\n        Payment: 'Null',\n        Future: 'Null',\n        Stale: 'Null',\n        BadProof: 'Null',\n        AncientBirthBlock: 'Null',\n        ExhaustsResources: 'Null',\n        Custom: 'u8',\n        BadMandatory: 'Null',\n        MandatoryDispatch: 'Null'\n      }\n    },\n    Key: 'Bytes',\n    LastRuntimeUpgradeInfo: {\n      specVersion: 'Compact<u32>',\n      specName: 'Text'\n    },\n    NetworkState: {\n      peerId: 'Text',\n      listenedAddresses: 'Vec<Text>',\n      externalAddresses: 'Vec<Text>',\n      connectedPeers: 'HashMap<Text, Peer>',\n      notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',\n      averageDownloadPerSec: 'u64',\n      averageUploadPerSec: 'u64',\n      peerset: 'NetworkStatePeerset'\n    },\n    NetworkStatePeerset: {\n      messageQueue: 'u64',\n      nodes: 'HashMap<Text, NetworkStatePeersetInfo>'\n    },\n    NetworkStatePeersetInfo: {\n      connected: 'bool',\n      reputation: 'i32'\n    },\n    NodeRole: {\n      _enum: {\n        Full: 'Null',\n        LightClient: 'Null',\n        Authority: 'Null',\n        UnknownRole: 'u8'\n      }\n    },\n    NotConnectedPeer: {\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'Option<PeerPing>',\n      versionString: 'Option<Text>'\n    },\n    Peer: {\n      enabled: 'bool',\n      endpoint: 'PeerEndpoint',\n      knownAddresses: 'Vec<Text>',\n      latestPingTime: 'PeerPing',\n      open: 'bool',\n      versionString: 'Text'\n    },\n    PeerEndpoint: {\n      listening: 'PeerEndpointAddr'\n    },\n    PeerEndpointAddr: {\n      _alias: {\n        localAddr: 'local_addr',\n        sendBackAddr: 'send_back_addr'\n      },\n      localAddr: 'Text',\n      sendBackAddr: 'Text'\n    },\n    PeerPing: {\n      nanos: 'u64',\n      secs: 'u64'\n    },\n    PeerInfo: {\n      peerId: 'Text',\n      roles: 'Text',\n      protocolVersion: 'u32',\n      bestHash: 'Hash',\n      bestNumber: 'BlockNumber'\n    },\n    PerDispatchClassU32: {\n      normal: 'u32',\n      operational: 'u32',\n      mandatory: 'u32'\n    },\n    PerDispatchClassWeight: {\n      normal: 'Weight',\n      operational: 'Weight',\n      mandatory: 'Weight'\n    },\n    PerDispatchClassWeightsPerClass: {\n      normal: 'WeightPerClass',\n      operational: 'WeightPerClass',\n      mandatory: 'WeightPerClass'\n    },\n    Phase: {\n      _enum: {\n        ApplyExtrinsic: 'u32',\n        Finalization: 'Null',\n        Initialization: 'Null'\n      }\n    },\n    RawOrigin: {\n      _enum: {\n        Root: 'Null',\n        Signed: 'AccountId',\n        None: 'Null'\n      }\n    },\n    RefCount: 'u32',\n    RefCountTo259: 'u8',\n    SyncState: {\n      startingBlock: 'BlockNumber',\n      currentBlock: 'BlockNumber',\n      highestBlock: 'Option<BlockNumber>'\n    },\n    SystemOrigin: 'RawOrigin',\n    TokenError: {\n      _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', 'Unsupported', // these are dropped, but still in older versions\n      // (if this adjusts, will need to take a re-look)\n      'Underflow', 'Overflow']\n    },\n    TransactionValidityError: {\n      _enum: {\n        Invalid: 'InvalidTransaction',\n        Unknown: 'UnknownTransaction'\n      }\n    },\n    TransactionalError: {\n      _enum: ['LimitReached', 'NoLayer']\n    },\n    UnknownTransaction: {\n      _enum: {\n        CannotLookup: 'Null',\n        NoUnsignedValidator: 'Null',\n        Custom: 'u8'\n      }\n    },\n    WeightPerClass: {\n      baseExtrinsic: 'Weight',\n      maxExtrinsic: 'Option<Weight>',\n      maxTotal: 'Option<Weight>',\n      reserved: 'Option<Weight>'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// As per frontier\nexport const rpc = {\n  accountNextIndex: {\n    alias: ['account_nextIndex'],\n    description: 'Retrieves the next accountIndex as available on the node',\n    params: [{\n      name: 'accountId',\n      type: 'AccountId'\n    }],\n    type: 'Index'\n  },\n  addLogFilter: {\n    description: 'Adds the supplied directives to the current log filter',\n    params: [{\n      name: 'directives',\n      type: 'Text'\n    }],\n    type: 'Null'\n  },\n  addReservedPeer: {\n    description: 'Adds a reserved peer',\n    params: [{\n      name: 'peer',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  chain: {\n    description: 'Retrieves the chain',\n    params: [],\n    type: 'Text'\n  },\n  chainType: {\n    description: 'Retrieves the chain type',\n    params: [],\n    type: 'ChainType'\n  },\n  dryRun: {\n    alias: ['system_dryRunAt'],\n    description: 'Dry run an extrinsic at a given block',\n    params: [{\n      name: 'extrinsic',\n      type: 'Bytes'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'ApplyExtrinsicResult'\n  },\n  health: {\n    description: 'Return health status of the node',\n    noErrorLog: true,\n    params: [],\n    type: 'Health'\n  },\n  localListenAddresses: {\n    description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  localPeerId: {\n    description: 'Returns the base58-encoded PeerId of the node',\n    params: [],\n    type: 'Text'\n  },\n  name: {\n    description: 'Retrieves the node name',\n    params: [],\n    type: 'Text'\n  },\n  networkState: {\n    alias: ['system_unstable_networkState'],\n    description: 'Returns current state of the network',\n    params: [],\n    type: 'NetworkState'\n  },\n  nodeRoles: {\n    description: 'Returns the roles the node is running as',\n    params: [],\n    type: 'Vec<NodeRole>'\n  },\n  peers: {\n    description: 'Returns the currently connected peers',\n    params: [],\n    type: 'Vec<PeerInfo>'\n  },\n  properties: {\n    description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n    params: [],\n    type: 'ChainProperties'\n  },\n  removeReservedPeer: {\n    description: 'Remove a reserved peer',\n    params: [{\n      name: 'peerId',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  reservedPeers: {\n    description: 'Returns the list of reserved peers',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  resetLogFilter: {\n    description: 'Resets the log filter to Substrate defaults',\n    params: [],\n    type: 'Null'\n  },\n  syncState: {\n    description: 'Returns the state of the syncing of the node',\n    params: [],\n    type: 'SyncState'\n  },\n  version: {\n    description: 'Retrieves the version of the node',\n    params: [],\n    type: 'Text'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Bounty: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      fee: 'Balance',\n      curatorDeposit: 'Balance',\n      bond: 'Balance',\n      status: 'BountyStatus'\n    },\n    BountyIndex: 'u32',\n    BountyStatus: {\n      _enum: {\n        Proposed: 'Null',\n        Approved: 'Null',\n        Funded: 'Null',\n        CuratorProposed: 'BountyStatusCuratorProposed',\n        Active: 'BountyStatusActive',\n        PendingPayout: 'BountyStatusPendingPayout'\n      }\n    },\n    BountyStatusActive: {\n      curator: 'AccountId',\n      updateDue: 'BlockNumber'\n    },\n    BountyStatusCuratorProposed: {\n      curator: 'AccountId'\n    },\n    BountyStatusPendingPayout: {\n      curator: 'AccountId',\n      beneficiary: 'AccountId',\n      unlockAt: 'BlockNumber'\n    },\n    OpenTip: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'AccountId',\n      deposit: 'Balance',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>',\n      findersFee: 'bool'\n    },\n    OpenTipTo225: {\n      reason: 'Hash',\n      who: 'AccountId',\n      finder: 'Option<OpenTipFinderTo225>',\n      closes: 'Option<BlockNumber>',\n      tips: 'Vec<OpenTipTip>'\n    },\n    OpenTipFinderTo225: '(AccountId, Balance)',\n    OpenTipTip: '(AccountId, Balance)',\n    TreasuryProposal: {\n      proposer: 'AccountId',\n      value: 'Balance',\n      beneficiary: 'AccountId',\n      bond: 'Balance'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport default {\n  rpc: {},\n  types: {\n    Multiplier: 'Fixed128'\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    ClassId: 'u32',\n    InstanceId: 'u32',\n    DepositBalance: 'Balance',\n    DepositBalanceOf: 'Balance',\n    ClassDetails: {\n      owner: 'AccountId',\n      issuer: 'AccountId',\n      admin: 'AccountId',\n      freezer: 'AccountId',\n      totalDeposit: 'DepositBalance',\n      freeHolding: 'bool',\n      instances: 'u32',\n      instanceMetadatas: 'u32',\n      attributes: 'u32',\n      isFrozen: 'bool'\n    },\n    DestroyWitness: {\n      instances: 'Compact<u32>',\n      instanceMetadatas: 'Compact<u32>',\n      attributes: 'Compact<u32>'\n    },\n    InstanceDetails: {\n      owner: 'AccountId',\n      approved: 'Option<AccountId>',\n      isFrozen: 'bool',\n      deposit: 'DepositBalance'\n    },\n    ClassMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    },\n    InstanceMetadata: {\n      deposit: 'DepositBalance',\n      data: 'Vec<u8>',\n      isFrozen: 'bool'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    Multisig: {\n      when: 'Timepoint',\n      deposit: 'Balance',\n      depositor: 'AccountId',\n      approvals: 'Vec<AccountId>'\n    },\n    Timepoint: {\n      height: 'BlockNumber',\n      index: 'u32'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport default {\n  rpc: {},\n  types: {\n    VestingInfo: {\n      locked: 'Balance',\n      perBlock: 'Balance',\n      startingBlock: 'BlockNumber'\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nimport { mapXcmTypes } from '@polkadot/types-create';\nimport { objectSpread } from '@polkadot/util';\nimport { v0 } from \"./v0.js\";\nimport { v1 } from \"./v1.js\";\nimport { v2 } from \"./v2.js\";\nconst XCM_LATEST = 'V2';\nconst xcm = {\n  XcmOrigin: {\n    _enum: {\n      Xcm: 'MultiLocation'\n    }\n  },\n  XcmpMessageFormat: {\n    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n  },\n  XcmAssetId: {\n    _enum: {\n      Concrete: 'MultiLocation',\n      Abstract: 'Bytes'\n    }\n  },\n  InboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  OutboundStatus: {\n    _enum: ['Ok', 'Suspended']\n  },\n  MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n  BodyId: {\n    _enum: {\n      Unit: 'Null',\n      Named: 'Vec<u8>',\n      Index: 'Compact<u32>',\n      Executive: 'Null',\n      Technical: 'Null',\n      Legislative: 'Null',\n      Judicial: 'Null'\n    }\n  },\n  BodyPart: {\n    _enum: {\n      Voice: 'Null',\n      Members: 'Compact<u32>',\n      Fraction: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      AtLeastProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      },\n      MoreThanProportion: {\n        nom: 'Compact<u32>',\n        denom: 'Compact<u32>'\n      }\n    }\n  },\n  InteriorMultiLocation: 'Junctions',\n  NetworkId: {\n    _enum: {\n      Any: 'Null',\n      Named: 'Vec<u8>',\n      Polkadot: 'Null',\n      Kusama: 'Null'\n    }\n  }\n};\nexport default {\n  rpc: {},\n  types: objectSpread({}, location, xcm, v0, v1, v2, mapXcmTypes(XCM_LATEST), {\n    DoubleEncodedCall: {\n      encoded: 'Vec<u8>'\n    },\n    XcmOriginKind: {\n      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    Outcome: {\n      _enum: {\n        Complete: 'Weight',\n        Incomplete: '(Weight, XcmErrorV0)',\n        Error: 'XcmErrorV0'\n      }\n    },\n    QueryId: 'u64',\n    QueryStatus: {\n      _enum: {\n        Pending: {\n          responder: 'VersionedMultiLocation',\n          maybeNotify: 'Option<(u8, u8)>',\n          timeout: 'BlockNumber'\n        },\n        Ready: {\n          response: 'VersionedResponse',\n          at: 'BlockNumber'\n        }\n      }\n    },\n    QueueConfigData: {\n      suspendThreshold: 'u32',\n      dropThreshold: 'u32',\n      resumeThreshold: 'u32',\n      thresholdWeight: 'Weight',\n      weightRestrictDecay: 'Weight'\n    },\n    VersionMigrationStage: {\n      _enum: {\n        MigrateSupportedVersion: 'Null',\n        MigrateVersionNotifiers: 'Null',\n        NotifyCurrentTargets: 'Option<Bytes>',\n        MigrateAndNotifyOldTargets: 'Null'\n      }\n    },\n    VersionedMultiAsset: {\n      _enum: {\n        V0: 'MultiAssetV0',\n        V1: 'MultiAssetV1',\n        V2: 'MultiAssetV2'\n      }\n    },\n    VersionedMultiAssets: {\n      _enum: {\n        V0: 'Vec<MultiAssetV0>',\n        V1: 'MultiAssetsV1',\n        V2: 'MultiAssetsV2'\n      }\n    },\n    VersionedMultiLocation: {\n      _enum: {\n        V0: 'MultiLocationV0',\n        V1: 'MultiLocationV1',\n        V2: 'MultiLocationV2'\n      }\n    },\n    VersionedResponse: {\n      V0: 'ResponseV0',\n      V1: 'ResponseV1',\n      V2: 'ResponseV2'\n    },\n    VersionedXcm: {\n      _enum: {\n        V0: 'XcmV0',\n        V1: 'XcmV1',\n        V2: 'XcmV2'\n      }\n    },\n    XcmVersion: 'u32'\n  })\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v0 = {\n  FungibilityV0: 'FungibilityV1',\n  WildFungibilityV0: 'WildFungibilityV1',\n  AssetInstanceV0: {\n    _enum: {\n      Undefined: 'Null',\n      Index8: 'u8',\n      Index16: 'Compact<u16>',\n      Index32: 'Compact<u32>',\n      Index64: 'Compact<u64>',\n      Index128: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Vec<u8>'\n    }\n  },\n  JunctionV0: {\n    _enum: {\n      Parent: 'Null',\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  MultiAssetV0: {\n    _enum: {\n      None: 'Null',\n      All: 'Null',\n      AllFungible: 'Null',\n      AllNonFungible: 'Null',\n      AllAbstractFungible: 'Vec<u8>',\n      AllAbstractNonFungible: 'Vec<u8>',\n      AllConcreteFungible: 'MultiLocationV0',\n      AllConcreteNonFungible: 'MultiLocationV0',\n      AbstractFungible: {\n        id: 'Vec<u8>',\n        instance: 'Compact<u128>'\n      },\n      AbstractNonFungible: {\n        class: 'Vec<u8>',\n        instance: 'AssetInstanceV0'\n      },\n      ConcreteFungible: {\n        id: 'MultiLocationV0',\n        amount: 'Compact<u128>'\n      },\n      ConcreteNonFungible: {\n        class: 'MultiLocationV0',\n        instance: 'AssetInstanceV0'\n      }\n    }\n  },\n  MultiLocationV0: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV0',\n      X2: '(JunctionV0, JunctionV0)',\n      X3: '(JunctionV0, JunctionV0, JunctionV0)',\n      X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n      X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'\n    }\n  },\n  OriginKindV0: {\n    _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n  },\n  ResponseV0: {\n    _enum: {\n      Assets: 'Vec<MultiAssetV0>'\n    }\n  },\n  XcmV0: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV0'\n      },\n      TransferAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      TransferReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV0',\n        message: 'XcmV0'\n      }\n    }\n  },\n  XcmErrorV0: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocation, Xcm)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV0: {\n    _enum: {\n      Null: 'Null',\n      DepositAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0'\n      },\n      DepositReserveAsset: {\n        assets: 'Vec<MultiAssetV0>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      ExchangeAsset: {\n        give: 'Vec<MultiAssetV0>',\n        receive: 'Vec<MultiAssetV0>'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'Vec<MultiAssetV0>',\n        reserve: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      InitiateTeleport: {\n        assets: 'Vec<MultiAsset>',\n        dest: 'MultiLocationV0',\n        effects: 'Vec<XcmOrderV0>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV0',\n        assets: 'Vec<MultiAssetV0>'\n      },\n      BuyExecution: {\n        fees: 'MultiAsset',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        xcm: 'Vec<XcmV0>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v1 = {\n  AssetInstanceV1: {\n    _enum: {\n      Undefined: 'Null',\n      Index: 'Compact<u128>',\n      Array4: '[u8; 4]',\n      Array8: '[u8; 8]',\n      Array16: '[u8; 16]',\n      Array32: '[u8; 32]',\n      Blob: 'Bytes'\n    }\n  },\n  FungibilityV1: {\n    _enum: {\n      Fungible: 'Compact<u128>',\n      NonFungible: 'AssetInstanceV1'\n    }\n  },\n  JunctionV1: {\n    _enum: {\n      Parachain: 'Compact<u32>',\n      AccountId32: {\n        network: 'NetworkId',\n        id: 'AccountId'\n      },\n      AccountIndex64: {\n        network: 'NetworkId',\n        index: 'Compact<u64>'\n      },\n      AccountKey20: {\n        network: 'NetworkId',\n        key: '[u8; 20]'\n      },\n      PalletInstance: 'u8',\n      GeneralIndex: 'Compact<u128>',\n      GeneralKey: 'Vec<u8>',\n      OnlyChild: 'Null',\n      Plurality: {\n        id: 'BodyId',\n        part: 'BodyPart'\n      }\n    }\n  },\n  JunctionsV1: {\n    _enum: {\n      Here: 'Null',\n      X1: 'JunctionV1',\n      X2: '(JunctionV1, JunctionV1)',\n      X3: '(JunctionV1, JunctionV1, JunctionV1)',\n      X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n      X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'\n    }\n  },\n  MultiAssetsV1: 'Vec<MultiAssetV1>',\n  MultiAssetV1: {\n    id: 'XcmAssetId',\n    fungibility: 'FungibilityV1'\n  },\n  MultiAssetFilterV1: {\n    _enum: {\n      Definite: 'MultiAssetsV1',\n      Wild: 'WildMultiAssetV1'\n    }\n  },\n  MultiLocationV1: {\n    parents: 'u8',\n    interior: 'JunctionsV1'\n  },\n  OriginKindV1: 'OriginKindV0',\n  ResponseV1: {\n    _enum: {\n      Assets: 'MultiAssetsV1'\n    }\n  },\n  WildFungibilityV1: {\n    _enum: ['Fungible', 'NonFungible']\n  },\n  WildMultiAssetV1: {\n    _enum: {\n      All: 'Null',\n      AllOf: {\n        id: 'XcmAssetId',\n        fungibility: 'WildFungibilityV1'\n      }\n    }\n  },\n  XcmV1: {\n    _enum: {\n      WithdrawAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReserveAssetDeposit: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ReceiveTeleportedAsset: {\n        assets: 'MultiAssetsV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV1'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      Transact: {\n        originType: 'XcmOriginKind',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      RelayedFrom: {\n        who: 'MultiLocationV1',\n        message: 'XcmV1'\n      }\n    }\n  },\n  XcmErrorV1: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      SendFailed: 'Null',\n      CannotReachDestination: '(MultiLocationV1, XcmV1)',\n      MultiLocationFull: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null'\n    }\n  },\n  XcmOrderV1: {\n    _enum: {\n      Noop: 'Null',\n      DepositAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV1'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV1',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV1',\n        receive: 'MultiAssetsV1'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV1',\n        reserve: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV1',\n        dest: 'MultiLocationV1',\n        effects: 'Vec<XcmOrderV1>'\n      },\n      QueryHolding: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV1',\n        assets: 'MultiAssetFilterV1'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV1',\n        weight: 'u64',\n        debt: 'u64',\n        haltOnError: 'bool',\n        instructions: 'Vec<XcmV1>'\n      }\n    }\n  }\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nexport const v2 = {\n  AssetInstanceV2: 'AssetInstanceV1',\n  FungibilityV2: 'FungibilityV1',\n  JunctionV2: 'JunctionV1',\n  JunctionsV2: 'JunctionsV1',\n  MultiAssetsV2: 'MultiAssetsV1',\n  MultiAssetV2: 'MultiAssetV1',\n  MultiAssetFilterV2: 'MultiAssetFilterV1',\n  MultiLocationV2: 'MultiLocationV1',\n  OriginKindV2: 'OriginKindV1',\n  WildFungibilityV2: 'WildFungibilityV1',\n  ResponseV2: {\n    _enum: {\n      Null: 'Null',\n      Assets: 'MultiAssetsV2',\n      ExecutionResult: 'ResponseV2Result'\n    }\n  },\n  ResponseV2Error: '(u32, XcmErrorV2)',\n  ResponseV2Result: 'Result<Null, ResponseV2Error>',\n  WeightLimitV2: {\n    _enum: {\n      Unlimited: 'Null',\n      Limited: 'Compact<u64>'\n    }\n  },\n  InstructionV2: {\n    _enum: {\n      WithdrawAsset: 'MultiAssetsV2',\n      ReserveAssetDeposited: 'MultiAssetsV2',\n      ReceiveTeleportedAsset: 'MultiAssetsV2',\n      QueryResponse: {\n        queryId: 'Compact<u64>',\n        response: 'ResponseV2',\n        maxWeight: 'Compact<u64>'\n      },\n      TransferAsset: {\n        assets: 'MultiAssetsV2',\n        beneficiary: 'MultiLocationV2'\n      },\n      TransferReserveAsset: {\n        assets: 'MultiAssetsV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      Transact: {\n        originType: 'OriginKindV2',\n        requireWeightAtMost: 'u64',\n        call: 'DoubleEncodedCall'\n      },\n      HrmpNewChannelOpenRequest: {\n        sender: 'Compact<u32>',\n        maxMessageSize: 'Compact<u32>',\n        maxCapacity: 'Compact<u32>'\n      },\n      HrmpChannelAccepted: {\n        recipient: 'Compact<u32>'\n      },\n      HrmpChannelClosing: {\n        initiator: 'Compact<u32>',\n        sender: 'Compact<u32>',\n        recipient: 'Compact<u32>'\n      },\n      ClearOrigin: 'Null',\n      DescendOrigin: 'InteriorMultiLocation',\n      ReportError: {\n        queryId: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        maxResponseWeight: 'Compact<u64>'\n      },\n      DepositAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        beneficiary: 'MultiLocationV2'\n      },\n      DepositReserveAsset: {\n        assets: 'MultiAssetFilterV2',\n        maxAssets: 'u32',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      ExchangeAsset: {\n        give: 'MultiAssetFilterV2',\n        receive: 'MultiAssetsV2'\n      },\n      InitiateReserveWithdraw: {\n        assets: 'MultiAssetFilterV2',\n        reserve: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      InitiateTeleport: {\n        assets: 'MultiAssetFilterV2',\n        dest: 'MultiLocationV2',\n        xcm: 'XcmV2'\n      },\n      QueryHolding: {\n        query_id: 'Compact<u64>',\n        dest: 'MultiLocationV2',\n        assets: 'MultiAssetFilterV2',\n        maxResponse_Weight: 'Compact<u64>'\n      },\n      BuyExecution: {\n        fees: 'MultiAssetV2',\n        weightLimit: 'WeightLimitV2'\n      },\n      RefundSurplus: 'Null',\n      SetErrorHandler: 'XcmV2',\n      SetAppendix: 'XcmV2',\n      ClearError: 'Null',\n      ClaimAsset: {\n        assets: 'MultiAssetsV2',\n        ticket: 'MultiLocationV2'\n      },\n      Trap: 'u64'\n    }\n  },\n  WildMultiAssetV2: 'WildMultiAssetV1',\n  XcmV2: 'Vec<InstructionV2>',\n  XcmErrorV2: {\n    _enum: {\n      Undefined: 'Null',\n      Overflow: 'Null',\n      Unimplemented: 'Null',\n      UnhandledXcmVersion: 'Null',\n      UnhandledXcmMessage: 'Null',\n      UnhandledEffect: 'Null',\n      EscalationOfPrivilege: 'Null',\n      UntrustedReserveLocation: 'Null',\n      UntrustedTeleportLocation: 'Null',\n      DestinationBufferOverflow: 'Null',\n      MultiLocationFull: 'Null',\n      MultiLocationNotInvertible: 'Null',\n      FailedToDecode: 'Null',\n      BadOrigin: 'Null',\n      ExceedsMaxMessageSize: 'Null',\n      FailedToTransactAsset: 'Null',\n      WeightLimitReached: 'Weight',\n      Wildcard: 'Null',\n      TooMuchWeightRequired: 'Null',\n      NotHoldingFees: 'Null',\n      WeightNotComputable: 'Null',\n      Barrier: 'Null',\n      NotWithdrawable: 'Null',\n      LocationCannotHold: 'Null',\n      TooExpensive: 'Null',\n      AssetNotFound: 'Null',\n      DestinationUnsupported: 'Null',\n      RecursionLimitReached: 'Null',\n      Transport: 'Null',\n      Unroutable: 'Null',\n      UnknownWeightRequired: 'Null',\n      Trap: 'u64',\n      UnknownClaim: 'Null',\n      InvalidLocation: 'Null'\n    }\n  },\n  XcmOrderV2: 'XcmOrderV1'\n};","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U32 } from '@polkadot/types-codec';\nexport const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding\n\nexport class MagicNumber extends U32 {\n  constructor(registry, value) {\n    super(registry, value);\n\n    if (!this.isEmpty && !this.eq(MAGIC_NUMBER)) {\n      throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);\n    }\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from \"./MetadataVersioned.js\"; // magic u32 preceding the version id\n\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\n/** @internal */\n\nfunction decodeU8a(registry, value) {\n  const u8a = value.length === 0 ? EMPTY_METADATA : value; // This is an f-ing hack as a follow-up to another ugly hack\n  // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n  // when we fail on V9, try to re-parse it as v10...\n\n  if (u8a[VERSION_IDX] === 9) {\n    try {\n      return new MetadataVersioned(registry, u8a);\n    } catch (error) {\n      u8a[VERSION_IDX] = 10;\n      return u8a;\n    }\n  }\n\n  return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nexport class Metadata extends MetadataVersioned {\n  constructor(registry, value) {\n    // console.time('Metadata')\n    super(registry, isU8a(value) || isString(value) ? decodeU8a(registry, u8aToU8a(value)) : value); // console.timeEnd('Metadata')\n  }\n\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Struct } from '@polkadot/types-codec';\nimport { toV10 } from \"./v9/toV10.js\";\nimport { toV11 } from \"./v10/toV11.js\";\nimport { toV12 } from \"./v11/toV12.js\";\nimport { toV13 } from \"./v12/toV13.js\";\nimport { toV14 } from \"./v13/toV14.js\";\nimport { toLatest } from \"./v14/toLatest.js\";\nimport { MagicNumber } from \"./MagicNumber.js\";\nimport { getUniqTypes, toCallsOnly } from \"./util/index.js\";\nconst LATEST_VERSION = 14;\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\nexport class MetadataVersioned extends Struct {\n  #converted = new Map();\n\n  constructor(registry, value) {\n    // console.time('MetadataVersioned')\n    super(registry, {\n      magicNumber: MagicNumber,\n      metadata: 'MetadataAll'\n    }, value); // console.timeEnd('MetadataVersioned')\n  }\n\n  #assertVersion = version => {\n    if (this.version > version) {\n      throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);\n    }\n\n    return this.version === version;\n  };\n  #getVersion = (version, fromPrev) => {\n    const asCurr = `asV${version}`;\n    const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;\n\n    if (version !== 'latest' && this.#assertVersion(version)) {\n      return this.#metadata()[asCurr];\n    }\n\n    if (!this.#converted.has(version)) {\n      this.#converted.set(version, fromPrev(this.registry, this[asPrev], this.version));\n    }\n\n    return this.#converted.get(version);\n  };\n  /**\n   * @description the metadata wrapped\n   */\n\n  #metadata = () => {\n    return this.getT('metadata');\n  };\n  /**\n   * @description Returns the wrapped metadata as a limited calls-only (latest) version\n   */\n\n  get asCallsOnly() {\n    return new MetadataVersioned(this.registry, {\n      magicNumber: this.magicNumber,\n      metadata: this.registry.createTypeUnsafe('MetadataAll', [toCallsOnly(this.registry, this.asLatest), LATEST_VERSION])\n    });\n  }\n  /**\n   * @description Returns the wrapped metadata as a V9 object\n   */\n\n\n  get asV9() {\n    this.#assertVersion(9);\n    return this.#metadata().asV9;\n  }\n  /**\n   * @description Returns the wrapped values as a V10 object\n   */\n\n\n  get asV10() {\n    return this.#getVersion(10, toV10);\n  }\n  /**\n   * @description Returns the wrapped values as a V11 object\n   */\n\n\n  get asV11() {\n    return this.#getVersion(11, toV11);\n  }\n  /**\n   * @description Returns the wrapped values as a V12 object\n   */\n\n\n  get asV12() {\n    return this.#getVersion(12, toV12);\n  }\n  /**\n   * @description Returns the wrapped values as a V13 object\n   */\n\n\n  get asV13() {\n    return this.#getVersion(13, toV13);\n  }\n  /**\n   * @description Returns the wrapped values as a V14 object\n   */\n\n\n  get asV14() {\n    return this.#getVersion(14, toV14);\n  }\n  /**\n   * @description Returns the wrapped values as a latest version object\n   */\n\n\n  get asLatest() {\n    return this.#getVersion('latest', toLatest);\n  }\n  /**\n   * @description The magicNumber for the Metadata (known constant)\n   */\n\n\n  get magicNumber() {\n    return this.getT('magicNumber');\n  }\n  /**\n   * @description the metadata version this structure represents\n   */\n\n\n  get version() {\n    return this.#metadata().index;\n  }\n\n  getUniqTypes(throwError) {\n    return getUniqTypes(this.registry, this.asLatest, throwError);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n    // needed to ensure we have the correct overrides (which is only applied in toLatest)\n    // eslint-disable-next-line no-unused-expressions\n    this.asLatest;\n    return super.toJSON();\n  }\n\n}","import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sanitize, Struct } from '@polkadot/types-codec';\nimport { getTypeDef, TypeDefInfo, withTypeString } from '@polkadot/types-create';\nimport { assertUnreachable, isNumber, isString, logger, objectSpread, stringCamelCase, stringify, stringPascalCase } from '@polkadot/util';\nconst l = logger('PortableRegistry');\n// Just a placeholder for a type.unrwapOr()\nconst TYPE_UNWRAP = {\n  toNumber: () => -1\n}; // Alias the primitive enum with out known values\n\nconst PRIMITIVE_ALIAS = {\n  Char: 'u32',\n  // Rust char is 4-bytes\n  Str: 'Text'\n}; // These are types where we have a specific decoding/encoding override + helpers\n\nconst PATHS_ALIAS = splitNamespace([// full matching on exact names...\n// these are well-known types with additional encoding\n'sp_core::crypto::AccountId32', 'sp_runtime::generic::era::Era', 'sp_runtime::multiaddress::MultiAddress', // ethereum overrides (Frontier, Moonbeam, Polkadot claims)\n'account::AccountId20', 'polkadot_runtime_common::claims::EthereumAddress', // wildcard matching in place...\n// these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy\n'*_democracy::vote::Vote', '*_conviction_voting::vote::Vote', '*_identity::types::Data', // shorten some well-known types\n'primitive_types::*', 'sp_arithmetic::per_things::*', // ink!\n'ink_env::types::*']); // Mappings for types that should be converted to set via BitVec\n\nconst PATHS_SET = splitNamespace(['pallet_identity::types::BitFlags']); // These are the set namespaces for BitVec definitions (the last 2 appear in types as well)\n\nconst BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];\nconst BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];\nconst BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB]; // These we never use these as top-level names, they are wrappers\n\nconst WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque']; // These are reserved and/or conflicts with built-in Codec or JS definitions\n\nconst RESERVED = ['entries', 'hash', 'keys', 'new', 'size']; // Remove these from all paths at index 1\n\nconst PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];\n/** @internal */\n\nfunction sanitizeDocs(docs) {\n  const result = new Array(docs.length);\n\n  for (let i = 0; i < docs.length; i++) {\n    result[i] = docs[i].toString();\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction splitNamespace(values) {\n  const result = new Array(values.length);\n\n  for (let i = 0; i < values.length; i++) {\n    result[i] = values[i].split('::');\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction matchParts(first, second) {\n  return first.length === second.length && first.every((a, index) => {\n    const b = second[index].toString();\n\n    if (a === '*' || a === b) {\n      return true;\n    }\n\n    if (a.includes('*') && a.includes('_') && b.includes('_')) {\n      let suba = a.split('_');\n      let subb = b.split('_'); // match initial *'s to multiples if we have a match for the other\n\n      if (suba[0] === '*') {\n        const indexOf = subb.indexOf(suba[1]);\n\n        if (indexOf !== -1) {\n          suba = suba.slice(1);\n          subb = subb.slice(indexOf);\n        }\n      } // check for * matches at the end, adjust accordingly\n\n\n      if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {\n        return true;\n      }\n\n      return matchParts(suba, subb);\n    }\n\n    return false;\n  });\n} // check if the path matches the PATHS_ALIAS (with wildcards)\n\n/** @internal */\n\n\nfunction getAliasPath(path) {\n  // TODO We need to handle ink! Balance in some way\n  return path.length && PATHS_ALIAS.some(a => matchParts(a, path)) ? path[path.length - 1].toString() : null;\n}\n/** @internal */\n\n\nfunction extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {\n  const count = path.length; // if we have no path or determined as a wrapper, we just skip it\n\n  if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {\n    return null;\n  }\n\n  const camels = new Array(count);\n  const lowers = new Array(count); // initially just create arrays of the camelCase and lowercase path\n  // parts - we will check these to extract the final values. While\n  // we have 2 loops here, we also don't do the same operation twice\n\n  for (let i = 0; i < count; i++) {\n    const c = stringPascalCase(isInternal ? path[i].replace('pallet_', '') : path[i]);\n    const l = c.toLowerCase();\n    camels[i] = c;\n    lowers[i] = l;\n  }\n\n  let name = '';\n\n  for (let i = 0; i < count; i++) {\n    const l = lowers[i]; // Remove ::{generic, misc, pallet, traits, types}::\n\n    if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {\n      // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest\n      // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress\n      if (l !== lowers[i + 1]) {\n        name += camels[i];\n      }\n    }\n  } // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin\n\n\n  if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {\n    const instanceType = portable[params[1].type.unwrap().toNumber()];\n\n    if (instanceType.type.path.length === 2) {\n      name = `${name}${instanceType.type.path[1].toString()}`;\n    }\n  }\n\n  return {\n    lookupIndex,\n    name,\n    params\n  };\n}\n/** @internal */\n\n\nfunction extractName(portable, lookupIndex, {\n  type: {\n    params,\n    path\n  }\n}) {\n  return extractNameFlat(portable, lookupIndex, params, path);\n}\n/** @internal */\n\n\nfunction nextDupeMatches(name, startAt, names) {\n  const result = [names[startAt]];\n\n  for (let i = startAt + 1; i < names.length; i++) {\n    const v = names[i];\n\n    if (v.name === name) {\n      result.push(v);\n    }\n  }\n\n  return result;\n}\n/** @internal */\n\n\nfunction rewriteDupes(input, rewrite) {\n  const count = input.length;\n\n  for (let i = 0; i < count; i++) {\n    const a = input[i];\n\n    for (let j = i + 1; j < count; j++) {\n      const b = input[j]; // if the indexes are not the same and the names match, we have a dupe\n\n      if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {\n        return false;\n      }\n    }\n  } // add all the adjusted values to the rewite map\n\n\n  for (let i = 0; i < count; i++) {\n    const p = input[i];\n    rewrite[p.lookupIndex] = p.name;\n  }\n\n  return true;\n}\n/** @internal */\n\n\nfunction removeDupeNames(lookup, portable, names) {\n  const rewrite = {};\n  return names.map((original, startAt) => {\n    const {\n      lookupIndex,\n      name,\n      params\n    } = original;\n\n    if (!name) {\n      // the name is empty (this is not expected, but have a failsafe)\n      return null;\n    } else if (rewrite[lookupIndex]) {\n      // we have already rewritten this one, we can skip it\n      return original;\n    } // those where the name is matching starting from this index\n\n\n    const allSame = nextDupeMatches(name, startAt, names); // we only have one, so all ok\n\n    if (allSame.length === 1) {\n      return original;\n    } // are there param differences between matching names\n\n\n    const anyDiff = allSame.some(o => params.length !== o.params.length || params.some((p, index) => !p.name.eq(o.params[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber())); // everything matches, we can combine these\n\n    if (!anyDiff) {\n      return original;\n    } // TODO We probably want to attach all the indexes with differences,\n    // not just the first\n    // find the first parameter that yields differences\n\n\n    const paramIdx = params.findIndex(({\n      type\n    }, index) => allSame.every(({\n      params\n    }, aIndex) => params[index].type.isSome && (aIndex === 0 || !params[index].type.eq(type)))); // No param found that is different\n\n    if (paramIdx === -1) {\n      return original;\n    } // see if using the param type helps\n\n\n    const adjusted = new Array(allSame.length); // loop through all, specifically checking that index where the\n    // first param yields differences\n\n    for (let i = 0; i < allSame.length; i++) {\n      const {\n        lookupIndex,\n        name,\n        params\n      } = allSame[i];\n      const {\n        def,\n        path\n      } = lookup.getSiType(params[paramIdx].type.unwrap()); // if it is not a primitive and it doesn't have a path, we really cannot\n      // do anything at this point\n\n      if (!def.isPrimitive && !path.length) {\n        return null;\n      }\n\n      adjusted[i] = {\n        lookupIndex,\n        name: def.isPrimitive ? `${name}${def.asPrimitive.toString()}` : `${name}${path[path.length - 1].toString()}`\n      };\n    } // check to see if the adjusted names have no issues\n\n\n    if (rewriteDupes(adjusted, rewrite)) {\n      return original;\n    } // TODO This is duplicated from the section just above...\n    // ... we certainly need a better solution here\n    //\n    // Last-ditch effort to use the full type path - ugly\n    // loop through all, specifically checking that index where the\n    // first param yields differences\n\n\n    for (let i = 0; i < allSame.length; i++) {\n      const {\n        lookupIndex,\n        name,\n        params\n      } = allSame[i];\n      const {\n        def,\n        path\n      } = lookup.getSiType(params[paramIdx].type.unwrap());\n      const flat = extractNameFlat(portable, lookupIndex, params, path, true);\n\n      if (def.isPrimitive || !flat) {\n        return null;\n      }\n\n      adjusted[i] = {\n        lookupIndex,\n        name: `${name}${flat.name}`\n      };\n    } // check to see if the adjusted names have no issues\n\n\n    if (rewriteDupes(adjusted, rewrite)) {\n      return original;\n    }\n\n    return null;\n  }).filter(n => !!n).map(({\n    lookupIndex,\n    name,\n    params\n  }) => ({\n    lookupIndex,\n    name: rewrite[lookupIndex] || name,\n    params\n  }));\n}\n/** @internal */\n\n\nfunction registerTypes(lookup, lookups, names, params) {\n  // Register the types we extracted\n  lookup.registry.register(lookups); // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [addrParam,, sigParam] = params.SpRuntimeUncheckedExtrinsic;\n    const siAddress = lookup.getSiType(addrParam.type.unwrap());\n    const siSignature = lookup.getSiType(sigParam.type.unwrap());\n    const nsSignature = siSignature.path.join('::');\n    let nsAccountId = siAddress.path.join('::');\n    const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress'; // With multiaddress, we check the first type param again\n\n    if (isMultiAddress) {\n      // AccountId, AccountIndex\n      const [idParam] = siAddress.params;\n      nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');\n    }\n\n    lookup.registry.register({\n      AccountId: ['sp_core::crypto::AccountId32'].includes(nsAccountId) ? 'AccountId32' : ['account::AccountId20', 'primitive_types::H160'].includes(nsAccountId) ? 'AccountId20' : 'AccountId32',\n      // other, default to AccountId32\n      Address: isMultiAddress ? 'MultiAddress' : 'AccountId',\n      ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'\n    });\n  }\n} // this extracts aliases based on what we know the runtime config looks like in a\n// Substrate chain. Specifically we want to have access to the Call and Event params\n\n/** @internal */\n\n\nfunction extractAliases(params, isContract) {\n  const hasParams = Object.keys(params).some(k => !k.startsWith('Pallet'));\n  const alias = {};\n\n  if (params.SpRuntimeUncheckedExtrinsic) {\n    // Address, Call, Signature, Extra\n    const [, {\n      type\n    }] = params.SpRuntimeUncheckedExtrinsic;\n    alias[type.unwrap().toNumber()] = 'Call';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');\n  }\n\n  if (params.FrameSystemEventRecord) {\n    // Event, Topic\n    const [{\n      type\n    }] = params.FrameSystemEventRecord;\n    alias[type.unwrap().toNumber()] = 'Event';\n  } else if (hasParams && !isContract) {\n    l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');\n  }\n\n  return alias;\n}\n/** @internal */\n\n\nfunction extractTypeInfo(lookup, portable) {\n  const nameInfo = [];\n  const types = {};\n  const porCount = portable.length;\n\n  for (let i = 0; i < porCount; i++) {\n    const type = portable[i];\n    const lookupIndex = type.id.toNumber();\n    const extracted = extractName(portable, lookupIndex, portable[i]);\n\n    if (extracted) {\n      nameInfo.push(extracted);\n    }\n\n    types[lookupIndex] = type;\n  }\n\n  const lookups = {};\n  const names = {};\n  const params = {};\n  const dedup = removeDupeNames(lookup, portable, nameInfo);\n  const dedupCount = dedup.length;\n\n  for (let i = 0; i < dedupCount; i++) {\n    const {\n      lookupIndex,\n      name,\n      params: p\n    } = dedup[i];\n    names[lookupIndex] = name;\n    lookups[name] = lookup.registry.createLookupType(lookupIndex);\n    params[name] = p;\n  }\n\n  return {\n    lookups,\n    names,\n    params,\n    types\n  };\n}\n\nvar _alias = /*#__PURE__*/_classPrivateFieldLooseKey(\"alias\");\n\nvar _lookups = /*#__PURE__*/_classPrivateFieldLooseKey(\"lookups\");\n\nvar _names = /*#__PURE__*/_classPrivateFieldLooseKey(\"names\");\n\nvar _params = /*#__PURE__*/_classPrivateFieldLooseKey(\"params\");\n\nvar _typeDefs = /*#__PURE__*/_classPrivateFieldLooseKey(\"typeDefs\");\n\nvar _types = /*#__PURE__*/_classPrivateFieldLooseKey(\"types\");\n\nvar _createSiDef = /*#__PURE__*/_classPrivateFieldLooseKey(\"createSiDef\");\n\nvar _getLookupId = /*#__PURE__*/_classPrivateFieldLooseKey(\"getLookupId\");\n\nvar _extract = /*#__PURE__*/_classPrivateFieldLooseKey(\"extract\");\n\nvar _extractArray = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractArray\");\n\nvar _extractBitSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractBitSequence\");\n\nvar _extractCompact = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompact\");\n\nvar _extractComposite = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractComposite\");\n\nvar _extractCompositeSet = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractCompositeSet\");\n\nvar _extractFields = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFields\");\n\nvar _extractFieldsAlias = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractFieldsAlias\");\n\nvar _extractHistoric = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractHistoric\");\n\nvar _extractPrimitive = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractPrimitive\");\n\nvar _extractAliasPath = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractAliasPath\");\n\nvar _extractSequence = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractSequence\");\n\nvar _extractTuple = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractTuple\");\n\nvar _extractVariant = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariant\");\n\nvar _extractVariantEnum = /*#__PURE__*/_classPrivateFieldLooseKey(\"extractVariantEnum\");\n\nexport class PortableRegistry extends Struct {\n  constructor(registry, value, isContract) {\n    // console.time('PortableRegistry')\n    super(registry, {\n      types: 'Vec<PortableType>'\n    }, value);\n    Object.defineProperty(this, _extractVariantEnum, {\n      value: _extractVariantEnum2\n    });\n    Object.defineProperty(this, _extractVariant, {\n      value: _extractVariant2\n    });\n    Object.defineProperty(this, _extractTuple, {\n      value: _extractTuple2\n    });\n    Object.defineProperty(this, _extractSequence, {\n      value: _extractSequence2\n    });\n    Object.defineProperty(this, _extractAliasPath, {\n      value: _extractAliasPath2\n    });\n    Object.defineProperty(this, _extractPrimitive, {\n      value: _extractPrimitive2\n    });\n    Object.defineProperty(this, _extractHistoric, {\n      value: _extractHistoric2\n    });\n    Object.defineProperty(this, _extractFieldsAlias, {\n      value: _extractFieldsAlias2\n    });\n    Object.defineProperty(this, _extractFields, {\n      value: _extractFields2\n    });\n    Object.defineProperty(this, _extractCompositeSet, {\n      value: _extractCompositeSet2\n    });\n    Object.defineProperty(this, _extractComposite, {\n      value: _extractComposite2\n    });\n    Object.defineProperty(this, _extractCompact, {\n      value: _extractCompact2\n    });\n    Object.defineProperty(this, _extractBitSequence, {\n      value: _extractBitSequence2\n    });\n    Object.defineProperty(this, _extractArray, {\n      value: _extractArray2\n    });\n    Object.defineProperty(this, _extract, {\n      value: _extract2\n    });\n    Object.defineProperty(this, _getLookupId, {\n      value: _getLookupId2\n    });\n    Object.defineProperty(this, _createSiDef, {\n      value: _createSiDef2\n    });\n    Object.defineProperty(this, _alias, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _lookups, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _names, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _params, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _typeDefs, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _types, {\n      writable: true,\n      value: void 0\n    });\n    const {\n      lookups,\n      names,\n      params: _params2,\n      types\n    } = extractTypeInfo(this, this.types);\n    _classPrivateFieldLooseBase(this, _alias)[_alias] = extractAliases(_params2, isContract);\n    _classPrivateFieldLooseBase(this, _lookups)[_lookups] = lookups;\n    _classPrivateFieldLooseBase(this, _names)[_names] = names;\n    _classPrivateFieldLooseBase(this, _params)[_params] = _params2;\n    _classPrivateFieldLooseBase(this, _types)[_types] = types; // console.timeEnd('PortableRegistry')\n  }\n\n  get names() {\n    return Object.values(_classPrivateFieldLooseBase(this, _names)[_names]).sort();\n  }\n  /**\n   * @description The types of the registry\n   */\n\n\n  get types() {\n    return this.getT('types');\n  }\n\n  register() {\n    registerTypes(this, _classPrivateFieldLooseBase(this, _lookups)[_lookups], _classPrivateFieldLooseBase(this, _names)[_names], _classPrivateFieldLooseBase(this, _params)[_params]);\n  }\n  /**\n   * @description Returns the name for a specific lookup\n   */\n\n\n  getName(lookupId) {\n    return _classPrivateFieldLooseBase(this, _names)[_names][_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n  }\n  /**\n   * @description Finds a specific type in the registry\n   */\n\n\n  getSiType(lookupId) {\n    // NOTE catch-22 - this may already be used as part of the constructor, so\n    // ensure that we have actually initialized it correctly\n    const found = (_classPrivateFieldLooseBase(this, _types)[_types] || this.types)[_classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId)];\n\n    if (!found) {\n      throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);\n    }\n\n    return found.type;\n  }\n  /**\n   * @description Lookup the type definition for the index\n   */\n\n\n  getTypeDef(lookupId) {\n    const lookupIndex = _classPrivateFieldLooseBase(this, _getLookupId)[_getLookupId](lookupId);\n\n    if (!_classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex]) {\n      const lookupName = _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex];\n\n      const empty = {\n        info: TypeDefInfo.DoNotConstruct,\n        lookupIndex,\n        lookupName,\n        type: this.registry.createLookupType(lookupIndex)\n      }; // Set named items since we will get into circular lookups along the way\n\n      if (lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      const extracted = _classPrivateFieldLooseBase(this, _extract)[_extract](this.getSiType(lookupId), lookupIndex); // For non-named items, we only set this right at the end\n\n\n      if (!lookupName) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex] = empty;\n      }\n\n      Object.keys(extracted).forEach(k => {\n        if (k !== 'lookupName' || extracted[k]) {\n          // these are safe since we are looking through the keys as set\n          _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex][k] = extracted[k];\n        }\n      }); // don't set lookupName on lower-level, we want to always direct to the type\n\n      if (extracted.info === TypeDefInfo.Plain) {\n        _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupNameRoot = _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n        delete _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;\n      }\n    }\n\n    return _classPrivateFieldLooseBase(this, _typeDefs)[_typeDefs][lookupIndex];\n  }\n\n  sanitizeField(name) {\n    let nameField = null;\n    let nameOrig = null;\n\n    if (name.isSome) {\n      nameField = stringCamelCase(name.unwrap());\n\n      if (nameField.includes('#')) {\n        nameOrig = nameField;\n        nameField = nameOrig.replace(/#/g, '_');\n      } else if (RESERVED.includes(nameField)) {\n        nameOrig = nameField;\n        nameField = `${nameField}_`;\n      }\n    }\n\n    return [nameField, nameOrig];\n  }\n\n}\n\nfunction _createSiDef2(lookupId) {\n  const typeDef = this.getTypeDef(lookupId);\n  const lookupIndex = lookupId.toNumber(); // Setup for a lookup on complex types\n\n  return [TypeDefInfo.DoNotConstruct, TypeDefInfo.Enum, TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName ? {\n    docs: typeDef.docs,\n    info: TypeDefInfo.Si,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    type: this.registry.createLookupType(lookupId)\n  } : typeDef;\n}\n\nfunction _getLookupId2(lookupId) {\n  if (isString(lookupId)) {\n    if (!this.registry.isLookupType(lookupId)) {\n      throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);\n    }\n\n    return parseInt(lookupId.replace('Lookup', ''), 10);\n  } else if (isNumber(lookupId)) {\n    return lookupId;\n  }\n\n  return lookupId.toNumber();\n}\n\nfunction _extract2(type, lookupIndex) {\n  const namespace = type.path.join('::');\n  let typeDef;\n  const aliasType = _classPrivateFieldLooseBase(this, _alias)[_alias][lookupIndex] || getAliasPath(type.path);\n\n  try {\n    if (aliasType) {\n      typeDef = _classPrivateFieldLooseBase(this, _extractAliasPath)[_extractAliasPath](lookupIndex, aliasType);\n    } else {\n      switch (type.def.type) {\n        case 'Array':\n          typeDef = _classPrivateFieldLooseBase(this, _extractArray)[_extractArray](lookupIndex, type.def.asArray);\n          break;\n\n        case 'BitSequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractBitSequence)[_extractBitSequence](lookupIndex, type.def.asBitSequence);\n          break;\n\n        case 'Compact':\n          typeDef = _classPrivateFieldLooseBase(this, _extractCompact)[_extractCompact](lookupIndex, type.def.asCompact);\n          break;\n\n        case 'Composite':\n          typeDef = _classPrivateFieldLooseBase(this, _extractComposite)[_extractComposite](lookupIndex, type, type.def.asComposite);\n          break;\n\n        case 'HistoricMetaCompat':\n          typeDef = _classPrivateFieldLooseBase(this, _extractHistoric)[_extractHistoric](lookupIndex, type.def.asHistoricMetaCompat);\n          break;\n\n        case 'Primitive':\n          typeDef = _classPrivateFieldLooseBase(this, _extractPrimitive)[_extractPrimitive](lookupIndex, type);\n          break;\n\n        case 'Sequence':\n          typeDef = _classPrivateFieldLooseBase(this, _extractSequence)[_extractSequence](lookupIndex, type.def.asSequence);\n          break;\n\n        case 'Tuple':\n          typeDef = _classPrivateFieldLooseBase(this, _extractTuple)[_extractTuple](lookupIndex, type.def.asTuple);\n          break;\n\n        case 'Variant':\n          typeDef = _classPrivateFieldLooseBase(this, _extractVariant)[_extractVariant](lookupIndex, type, type.def.asVariant);\n          break;\n\n        default:\n          assertUnreachable(type.def.type);\n      }\n    }\n  } catch (error) {\n    throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${stringify(type)}: ${error.message}`);\n  }\n\n  return objectSpread({\n    docs: sanitizeDocs(type.docs),\n    namespace\n  }, typeDef);\n}\n\nfunction _extractArray2(_, {\n  len,\n  type\n}) {\n  const length = len.toNumber();\n\n  if (length > 2048) {\n    throw new Error('Only support for [Type; <length>], where length <= 2048');\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.VecFixed,\n    length,\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractBitSequence2(_, {\n  bitOrderType,\n  bitStoreType\n}) {\n  // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine\n  // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly\n  const a = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitOrderType);\n\n  const b = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](bitStoreType);\n\n  const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '') ? [a, b] : [b, a]; // NOTE: Currently the BitVec type is one-way only, i.e. we only use it to decode, not\n  // re-encode stuff. As such we ignore the msb/lsb identifier given by bitOrderType, or rather\n  // we don't pass it though at all (all displays in LSB)\n\n  if (!BITVEC_NS.includes(bitOrder.namespace || '')) {\n    throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);\n  } else if (bitStore.info !== TypeDefInfo.Plain || bitStore.type !== 'u8') {\n    throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);\n  }\n\n  return {\n    info: TypeDefInfo.Plain,\n    type: 'BitVec'\n  };\n}\n\nfunction _extractCompact2(_, {\n  type\n}) {\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Compact,\n    sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type)\n  });\n}\n\nfunction _extractComposite2(lookupIndex, {\n  params,\n  path\n}, {\n  fields\n}) {\n  const pathFirst = path[0].toString();\n  const pathLast = path[path.length - 1].toString();\n\n  if (path.length === 1 && pathFirst === 'BTreeMap') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeMap,\n      sub: params.map(({\n        type\n      }) => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap()))\n    });\n  } else if (path.length === 1 && pathFirst === 'BTreeSet') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.BTreeSet,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap())\n    });\n  } else if (['Range', 'RangeInclusive'].includes(pathFirst)) {\n    return withTypeString(this.registry, {\n      info: pathFirst === 'Range' ? TypeDefInfo.Range : TypeDefInfo.RangeInclusive,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathFirst\n    });\n  } else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {\n    return withTypeString(this.registry, {\n      info: pathLast === 'WrapperKeepOpaque' ? TypeDefInfo.WrapperKeepOpaque : TypeDefInfo.WrapperOpaque,\n      sub: _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()),\n      type: pathLast\n    });\n  }\n\n  return PATHS_SET.some(p => matchParts(p, path)) ? _classPrivateFieldLooseBase(this, _extractCompositeSet)[_extractCompositeSet](lookupIndex, params, fields) : _classPrivateFieldLooseBase(this, _extractFields)[_extractFields](lookupIndex, fields);\n}\n\nfunction _extractCompositeSet2(_, params, fields) {\n  if (params.length !== 1 || fields.length !== 1) {\n    throw new Error('Set handling expects param/field as single entries');\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Set,\n    length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),\n    sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({\n      index,\n      name\n    }) => ({\n      // This will be an issue > 2^53 - 1 ... don't have those (yet)\n      index: index.toNumber(),\n      info: TypeDefInfo.Plain,\n      name: name.toString(),\n      type: 'Null'\n    }))\n  });\n}\n\nfunction _extractFields2(lookupIndex, fields) {\n  let isStruct = true;\n  let isTuple = true;\n\n  for (let f = 0; f < fields.length; f++) {\n    const {\n      name\n    } = fields[f];\n    isStruct = isStruct && name.isSome;\n    isTuple = isTuple && name.isNone;\n  }\n\n  if (!isTuple && !isStruct) {\n    throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');\n  }\n\n  if (fields.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (isTuple && fields.length === 1) {\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](fields[0].type);\n\n    return objectSpread({}, typeDef, lookupIndex === -1 ? null : {\n      lookupIndex,\n      lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n      lookupNameRoot: typeDef.lookupName\n    }, fields[0].typeName.isSome ? {\n      typeName: sanitize(fields[0].typeName.unwrap())\n    } : null);\n  }\n\n  const [sub, alias] = _classPrivateFieldLooseBase(this, _extractFieldsAlias)[_extractFieldsAlias](fields);\n\n  return withTypeString(this.registry, objectSpread({\n    info: isTuple // Tuple check first\n    ? TypeDefInfo.Tuple : TypeDefInfo.Struct,\n    sub\n  }, alias.size ? {\n    alias\n  } : null, lookupIndex === -1 ? null : {\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex]\n  }));\n}\n\nfunction _extractFieldsAlias2(fields) {\n  const alias = new Map();\n  const sub = new Array(fields.length);\n\n  for (let i = 0; i < fields.length; i++) {\n    const {\n      docs,\n      name,\n      type,\n      typeName\n    } = fields[i];\n\n    const typeDef = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n    if (name.isNone) {\n      sub[i] = typeDef;\n    } else {\n      const [nameField, nameOrig] = this.sanitizeField(name);\n\n      if (nameField && nameOrig) {\n        alias.set(nameField, nameOrig);\n      }\n\n      sub[i] = objectSpread({\n        docs: sanitizeDocs(docs),\n        name: nameField\n      }, typeDef, typeName.isSome ? {\n        typeName: sanitize(typeName.unwrap())\n      } : null);\n    }\n  }\n\n  return [sub, alias];\n}\n\nfunction _extractHistoric2(_, type) {\n  return objectSpread({\n    displayName: type.toString(),\n    isFromSi: true\n  }, getTypeDef(type));\n}\n\nfunction _extractPrimitive2(_, type) {\n  const typeStr = type.def.asPrimitive.type.toString();\n  return {\n    info: TypeDefInfo.Plain,\n    type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()\n  };\n}\n\nfunction _extractAliasPath2(_, type) {\n  return {\n    info: TypeDefInfo.Plain,\n    type\n  };\n}\n\nfunction _extractSequence2(lookupIndex, {\n  type\n}) {\n  const sub = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type);\n\n  if (sub.type === 'u8') {\n    return {\n      info: TypeDefInfo.Plain,\n      type: 'Bytes'\n    };\n  }\n\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Vec,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractTuple2(lookupIndex, ids) {\n  if (ids.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  } else if (ids.length === 1) {\n    return this.getTypeDef(ids[0]);\n  }\n\n  const sub = ids.map(t => _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](t));\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Tuple,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}\n\nfunction _extractVariant2(lookupIndex, {\n  params,\n  path\n}, {\n  variants\n}) {\n  const specialVariant = path[0].toString();\n\n  if (specialVariant === 'Option') {\n    const sub = _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](params[0].type.unwrap()); // NOTE This is opt-in (unhandled), not by default\n    // if (sub.type === 'bool') {\n    //   return withTypeString(this.registry, {\n    //     info: TypeDefInfo.Plain,\n    //     type: 'OptionBool'\n    //   });\n    // }\n\n\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Option,\n      sub\n    });\n  } else if (specialVariant === 'Result') {\n    return withTypeString(this.registry, {\n      info: TypeDefInfo.Result,\n      sub: params.map(({\n        type\n      }, index) => objectSpread({\n        name: ['Ok', 'Error'][index]\n      }, _classPrivateFieldLooseBase(this, _createSiDef)[_createSiDef](type.unwrap())))\n    });\n  } else if (variants.length === 0) {\n    return {\n      info: TypeDefInfo.Null,\n      type: 'Null'\n    };\n  }\n\n  return _classPrivateFieldLooseBase(this, _extractVariantEnum)[_extractVariantEnum](lookupIndex, variants);\n}\n\nfunction _extractVariantEnum2(lookupIndex, variants) {\n  const sub = []; // we may get entries out of order, arrange them first before creating with gaps filled\n  // NOTE: Since we mutate, use a copy of the array as an input\n\n  variants.slice().sort((a, b) => a.index.cmp(b.index)).forEach(({\n    fields,\n    index: bnIndex,\n    name\n  }) => {\n    const index = bnIndex.toNumber();\n\n    while (sub.length !== index) {\n      sub.push({\n        index: sub.length,\n        info: TypeDefInfo.Null,\n        name: `__Unused${sub.length}`,\n        type: 'Null'\n      });\n    }\n\n    sub.push(objectSpread(_classPrivateFieldLooseBase(this, _extractFields)[_extractFields](-1, fields), {\n      index,\n      name: name.toString()\n    }));\n  });\n  return withTypeString(this.registry, {\n    info: TypeDefInfo.Enum,\n    lookupIndex,\n    lookupName: _classPrivateFieldLooseBase(this, _names)[_names][lookupIndex],\n    sub\n  });\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from \"../util.js\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport function decorateConstants(registry, {\n  pallets\n}, _version) {\n  const result = {};\n\n  for (let i = 0; i < pallets.length; i++) {\n    const {\n      constants,\n      name\n    } = pallets[i];\n\n    if (!constants.isEmpty) {\n      lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, constant => {\n        const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n        codec.meta = constant;\n        return codec;\n      }, objectNameToCamel));\n    }\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\n\nfunction isTx(tx, callIndex) {\n  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\n\n\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n  const expectedArgs = callMetadata.fields;\n  const funcName = stringCamelCase(callMetadata.name);\n\n  const extrinsicFn = (...args) => {\n    if (expectedArgs.length !== args.length) {\n      throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);\n    }\n\n    return registry.createTypeUnsafe('Call', [{\n      args,\n      callIndex\n    }, callMetadata]);\n  };\n\n  extrinsicFn.is = tx => isTx(tx, callIndex);\n\n  extrinsicFn.callIndex = callIndex;\n  extrinsicFn.meta = callMetadata;\n  extrinsicFn.method = funcName;\n  extrinsicFn.section = section;\n\n  extrinsicFn.toJSON = () => callMetadata.toJSON();\n\n  return extrinsicFn;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\n\nfunction extractSubSingle(_, {\n  sub\n}) {\n  const {\n    lookupName,\n    type\n  } = sub;\n  return extractTypes([lookupName || type]);\n}\n\nfunction extractSubArray(_, {\n  sub\n}) {\n  return extractTypes(sub.map(({\n    lookupName,\n    type\n  }) => lookupName || type));\n}\n\nfunction unhandled(type, {\n  info\n}) {\n  throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n} // we only handle the types with params here\n\n\nconst mapping = {\n  [TypeDefInfo.BTreeMap]: extractSubArray,\n  [TypeDefInfo.BTreeSet]: extractSubSingle,\n  [TypeDefInfo.Compact]: extractSubSingle,\n  [TypeDefInfo.DoNotConstruct]: unhandled,\n  [TypeDefInfo.Enum]: extractSubArray,\n  [TypeDefInfo.HashMap]: extractSubArray,\n  [TypeDefInfo.Int]: unhandled,\n  [TypeDefInfo.Linkage]: extractSubSingle,\n  [TypeDefInfo.Null]: unhandled,\n  [TypeDefInfo.Option]: extractSubSingle,\n  [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n  [TypeDefInfo.Range]: extractSubSingle,\n  [TypeDefInfo.RangeInclusive]: extractSubSingle,\n  [TypeDefInfo.Result]: extractSubArray,\n  [TypeDefInfo.Set]: extractSubArray,\n  [TypeDefInfo.Si]: unhandled,\n  [TypeDefInfo.Struct]: extractSubArray,\n  [TypeDefInfo.Tuple]: extractSubArray,\n  [TypeDefInfo.UInt]: unhandled,\n  [TypeDefInfo.Vec]: extractSubSingle,\n  [TypeDefInfo.VecFixed]: extractSubSingle,\n  [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n  [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\n\nexport function extractTypes(types) {\n  const count = types.length;\n  const result = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    const type = types[i];\n    const typeDef = getTypeDef(type);\n    result[i] = mapping[typeDef.info](type, typeDef);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function flattenUniq(list, result = []) {\n  for (let i = 0; i < list.length; i++) {\n    const entry = list[i];\n\n    if (Array.isArray(entry)) {\n      flattenUniq(entry, result);\n    } else {\n      result.push(entry);\n    }\n  }\n\n  return [...new Set(result)];\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function getSiName(lookup, type) {\n  const typeDef = lookup.getTypeDef(type);\n  return typeDef.lookupName || typeDef.type;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { flattenUniq } from \"./flattenUniq.js\";\nimport { validateTypes } from \"./validateTypes.js\";\n/** @internal */\n\nfunction extractTypes(lookup, types) {\n  return types.map(({\n    type\n  }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\n\n\nfunction extractFieldTypes(lookup, type) {\n  return lookup.getSiType(type).def.asVariant.variants.map(({\n    fields\n  }) => extractTypes(lookup, fields));\n}\n/** @internal */\n\n\nfunction getPalletNames({\n  lookup,\n  pallets\n}) {\n  return pallets.reduce((all, {\n    calls,\n    constants,\n    events,\n    storage\n  }) => {\n    all.push([extractTypes(lookup, constants)]);\n\n    if (calls.isSome) {\n      all.push(extractFieldTypes(lookup, calls.unwrap().type));\n    }\n\n    if (events.isSome) {\n      all.push(extractFieldTypes(lookup, events.unwrap().type));\n    }\n\n    if (storage.isSome) {\n      all.push(storage.unwrap().items.map(({\n        type\n      }) => {\n        if (type.isPlain) {\n          return [lookup.getTypeDef(type.asPlain).type];\n        }\n\n        const {\n          hashers,\n          key,\n          value\n        } = type.asMap;\n        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type, ...lookup.getSiType(key).def.asTuple.map(t => lookup.getTypeDef(t).type)];\n      }));\n    }\n\n    return all;\n  }, []);\n}\n/** @internal */\n\n\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(docs) {\n  const strings = docs.map(d => d.toString().trim());\n  const firstEmpty = strings.findIndex(d => !d.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n/** @internal */\n\n\nexport function toCallsOnly(registry, {\n  extrinsic,\n  lookup,\n  pallets\n}) {\n  return registry.createTypeUnsafe('MetadataLatest', [{\n    extrinsic,\n    lookup: {\n      types: lookup.types.map(({\n        id,\n        type\n      }) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type: { ...type,\n          docs: trimDocs(type.docs)\n        }\n      }]))\n    },\n    pallets: pallets.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n      index,\n      name\n    }))\n  }]).toJSON();\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { logger } from '@polkadot/util';\nimport { extractTypes } from \"./extractTypes.js\";\nimport { flattenUniq } from \"./flattenUniq.js\";\nconst l = logger('metadata');\n/** @internal */\n\nexport function validateTypes(registry, throwError, types) {\n  const missing = flattenUniq(extractTypes(types)).filter(type => !registry.hasType(type) && !registry.isLookupType(type)).sort();\n\n  if (missing.length !== 0) {\n    const message = `Unknown types found, no types for ${missing.join(', ')}`;\n\n    if (throwError) {\n      throw new Error(message);\n    } else {\n      l.warn(message);\n    }\n  }\n\n  return types;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport function toV11(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV11', [{\n    // This is new in V11, pass V0 here - something non-existing, telling the API to use\n    // the fallback for this information (on-chain detection)\n    extrinsic: {\n      signedExtensions: [],\n      version: 0\n    },\n    modules\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV12(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV12', [{\n    extrinsic,\n    modules: modules.map(mod => registry.createTypeUnsafe('ModuleMetadataV12', [{ ...mod,\n      index: 255\n    }]))\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @internal\n **/\nexport function toV13(registry, metadata) {\n  return registry.createTypeUnsafe('MetadataV13', [metadata]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringCamelCase } from '@polkadot/util';\nimport { getAliasTypes } from \"../../interfaces/alias.js\";\nimport { knownOrigins } from \"../../interfaces/runtime/definitions.js\";\nconst BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];\n/**\n * Creates a compatible type mapping\n * @internal\n **/\n\nfunction compatType(specs, _type) {\n  const type = _type.toString();\n\n  const index = specs.findIndex(({\n    def\n  }) => def.HistoricMetaCompat === type);\n\n  if (index !== -1) {\n    return index;\n  }\n\n  return specs.push({\n    def: {\n      HistoricMetaCompat: type\n    }\n  }) - 1;\n}\n\nfunction compatTypes(specs, ...types) {\n  for (let i = 0; i < types.length; i++) {\n    compatType(specs, types[i]);\n  }\n}\n\nfunction makeTupleType(specs, entries) {\n  return specs.push({\n    def: {\n      Tuple: entries\n    }\n  }) - 1;\n}\n\nfunction makeVariantType(modName, variantType, specs, variants) {\n  return specs.push({\n    def: {\n      Variant: {\n        variants\n      }\n    },\n    path: [`pallet_${modName.toString()}`, 'pallet', variantType]\n  }) - 1;\n}\n/**\n * @internal\n * generate & register the OriginCaller type\n **/\n\n\nfunction registerOriginCaller(registry, modules, metaVersion) {\n  registry.register({\n    OriginCaller: {\n      _enum: modules.map((mod, index) => [mod.name.toString(), metaVersion >= 12 ? mod.index.toNumber() : index]).sort((a, b) => a[1] - b[1]).reduce((result, [name, index]) => {\n        for (let i = Object.keys(result).length; i < index; i++) {\n          result[`Empty${i}`] = 'Null';\n        }\n\n        result[name] = knownOrigins[name] || 'Null';\n        return result;\n      }, {})\n    }\n  });\n}\n/**\n * Find and apply the correct type override\n * @internal\n **/\n\n\nfunction setTypeOverride(sectionTypes, types) {\n  types.forEach(type => {\n    const override = Object.keys(sectionTypes).find(aliased => type.eq(aliased));\n\n    if (override) {\n      type.setOverride(sectionTypes[override]);\n    } else {\n      // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)\n      const orig = type.toString();\n      const alias = Object.entries(sectionTypes).reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);\n\n      if (orig !== alias) {\n        type.setOverride(alias);\n      }\n    }\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertCalls(specs, registry, modName, calls, sectionTypes) {\n  const variants = calls.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args.map(({\n      type\n    }) => type));\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(({\n        name,\n        type\n      }) => registry.createTypeUnsafe('SiField', [{\n        name,\n        type: compatType(specs, type)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletCallMetadataV14', [{\n    type: makeVariantType(modName, 'Call', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n\n\nfunction convertConstants(specs, registry, constants, sectionTypes) {\n  return constants.map(({\n    docs,\n    name,\n    type,\n    value\n  }) => {\n    setTypeOverride(sectionTypes, [type]);\n    return registry.createTypeUnsafe('PalletConstantMetadataV14', [{\n      docs,\n      name,\n      type: compatType(specs, type),\n      value\n    }]);\n  });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertErrors(specs, registry, modName, errors, _sectionTypes) {\n  const variants = errors.map(({\n    docs,\n    name\n  }, index) => registry.createTypeUnsafe('SiVariant', [{\n    docs,\n    fields: [],\n    index,\n    name\n  }]));\n  return registry.createTypeUnsafe('PalletErrorMetadataV14', [{\n    type: makeVariantType(modName, 'Error', specs, variants)\n  }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\n\n\nfunction convertEvents(specs, registry, modName, events, sectionTypes) {\n  const variants = events.map(({\n    args,\n    docs,\n    name\n  }, index) => {\n    setTypeOverride(sectionTypes, args);\n    return registry.createTypeUnsafe('SiVariant', [{\n      docs,\n      fields: args.map(t => registry.createTypeUnsafe('SiField', [{\n        type: compatType(specs, t)\n      }])),\n      index,\n      name\n    }]);\n  });\n  return registry.createTypeUnsafe('PalletEventMetadataV14', [{\n    type: makeVariantType(modName, 'Event', specs, variants)\n  }]);\n}\n\nfunction createMapEntry(specs, registry, sectionTypes, {\n  hashers,\n  isLinked,\n  isOptional,\n  keys,\n  value\n}) {\n  setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);\n  return registry.createTypeUnsafe('StorageEntryTypeV14', [{\n    Map: {\n      hashers,\n      key: hashers.length === 1 ? compatType(specs, keys[0]) : makeTupleType(specs, keys.map(t => compatType(specs, t))),\n      value: isLinked // For previous-generation linked-map support, the actual storage result\n      // is a Tuple with the value and the Linkage (Option appears in teh value-part only)\n      ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`) : compatType(specs, value)\n    }\n  }]);\n}\n/**\n * Apply module-specific storage type overrides (always part of toV14)\n * @internal\n **/\n\n\nfunction convertStorage(specs, registry, {\n  items,\n  prefix\n}, sectionTypes) {\n  return registry.createTypeUnsafe('PalletStorageMetadataV14', [{\n    items: items.map(({\n      docs,\n      fallback,\n      modifier,\n      name,\n      type\n    }) => {\n      let entryType;\n\n      if (type.isPlain) {\n        const plain = type.asPlain;\n        setTypeOverride(sectionTypes, [plain]);\n        entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{\n          Plain: compatType(specs, plain)\n        }]);\n      } else if (type.isMap) {\n        const map = type.asMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [map.hasher],\n          isLinked: map.linked.isTrue,\n          isOptional: modifier.isOptional,\n          keys: [map.key],\n          value: map.value\n        });\n      } else if (type.isDoubleMap) {\n        const dm = type.asDoubleMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: [dm.hasher, dm.key2Hasher],\n          isLinked: false,\n          isOptional: modifier.isOptional,\n          keys: [dm.key1, dm.key2],\n          value: dm.value\n        });\n      } else {\n        const nm = type.asNMap;\n        entryType = createMapEntry(specs, registry, sectionTypes, {\n          hashers: nm.hashers,\n          isLinked: false,\n          isOptional: modifier.isOptional,\n          keys: nm.keyVec,\n          value: nm.value\n        });\n      }\n\n      return registry.createTypeUnsafe('StorageEntryMetadataV14', [{\n        docs,\n        fallback,\n        modifier,\n        name,\n        type: entryType\n      }]);\n    }),\n    prefix\n  }]);\n}\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\nfunction convertExtrinsic(registry, {\n  signedExtensions,\n  version\n}) {\n  return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{\n    signedExtensions: signedExtensions.map(identifier => ({\n      identifier,\n      type: 0 // we don't map the fields at all\n\n    })),\n    type: 0,\n    // Map to extrinsic like in v14?\n    version\n  }]);\n}\n/** @internal */\n\n\nfunction createPallet(specs, registry, mod, {\n  calls,\n  constants,\n  errors,\n  events,\n  storage\n}) {\n  const sectionTypes = getAliasTypes(registry, stringCamelCase(mod.name));\n  return registry.createTypeUnsafe('PalletMetadataV14', [{\n    calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),\n    constants: convertConstants(specs, registry, constants, sectionTypes),\n    errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),\n    events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),\n    index: mod.index,\n    name: mod.name,\n    storage: storage && convertStorage(specs, registry, storage, sectionTypes)\n  }]);\n}\n/**\n * Convert the Metadata to v14\n * @internal\n **/\n\n\nexport function toV14(registry, v13, metaVersion) {\n  const specs = []; // position 0 always has Null, additionally add internal defaults\n\n  compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');\n  registerOriginCaller(registry, v13.modules, metaVersion);\n  const extrinsic = convertExtrinsic(registry, v13.extrinsic);\n  const pallets = v13.modules.map(mod => createPallet(specs, registry, mod, {\n    calls: mod.calls.unwrapOr(null),\n    constants: mod.constants,\n    errors: mod.errors.length ? mod.errors : null,\n    events: mod.events.unwrapOr(null),\n    storage: mod.storage.unwrapOr(null)\n  }));\n  return registry.createTypeUnsafe('MetadataV14', [{\n    extrinsic,\n    lookup: {\n      types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type\n      }]))\n    },\n    pallets\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Convert the Metadata (which is an alias) to latest\n * @internal\n **/\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function toLatest(registry, v14, _metaVersion) {\n  return v14;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// migrate a storage hasher type\n// see https://github.com/paritytech/substrate/pull/4462\n\n/** @internal */\nfunction createStorageHasher(registry, hasher) {\n  // Blake2_128_Concat has been added at index 2, so we increment all the\n  // indexes greater than 2\n  if (hasher.toNumber() >= 2) {\n    return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);\n  }\n\n  return registry.createTypeUnsafe('StorageHasherV10', [hasher]);\n}\n/** @internal */\n\n\nfunction createStorageType(registry, entryType) {\n  if (entryType.isMap) {\n    return [{ ...entryType.asMap,\n      hasher: createStorageHasher(registry, entryType.asMap.hasher)\n    }, 1];\n  }\n\n  if (entryType.isDoubleMap) {\n    return [{ ...entryType.asDoubleMap,\n      hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),\n      key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)\n    }, 2];\n  }\n\n  return [entryType.asPlain, 0];\n}\n/** @internal */\n\n\nfunction convertModule(registry, mod) {\n  const storage = mod.storage.unwrapOr(null);\n  return registry.createTypeUnsafe('ModuleMetadataV10', [{ ...mod,\n    storage: storage ? { ...storage,\n      items: storage.items.map(item => ({ ...item,\n        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))\n      }))\n    } : null\n  }]);\n}\n/** @internal */\n\n\nexport function toV10(registry, {\n  modules\n}) {\n  return registry.createTypeUnsafe('MetadataV10', [{\n    modules: modules.map(mod => convertModule(registry, mod))\n  }]);\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Enum } from '@polkadot/types-codec';\nimport { assert, isString, isU8a, u8aToU8a } from '@polkadot/util';\n/** @internal */\n\nfunction decodeDataU8a(registry, value) {\n  const indicator = value[0];\n\n  if (!indicator) {\n    return [undefined, undefined];\n  } else if (indicator >= 1 && indicator <= 33) {\n    const length = indicator - 1;\n    const data = value.subarray(1, length + 1); // in this case, we are passing a Raw back (since we have no length)\n\n    return [registry.createTypeUnsafe('Raw', [data]), 1];\n  } else if (indicator >= 34 && indicator <= 37) {\n    return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2\n  }\n\n  throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);\n}\n/** @internal */\n\n\nfunction decodeData(registry, value) {\n  if (isU8a(value) || isString(value)) {\n    return decodeDataU8a(registry, u8aToU8a(value));\n  } else if (!value) {\n    return [undefined, undefined];\n  } // assume we have an Enum or an  object input, handle this via the normal Enum decoding\n\n\n  return [value, undefined];\n}\n/**\n * @name Data\n * @description\n * A [[Data]] container with node, raw or hashed data\n */\n\n\nexport class Data extends Enum {\n  constructor(registry, value) {\n    super(registry, {\n      None: 'Null',\n      // 0\n      Raw: 'Bytes',\n      // 1\n      // eslint-disable-next-line sort-keys\n      BlakeTwo256: 'H256',\n      // 2\n      Sha256: 'H256',\n      // 3\n      // eslint-disable-next-line sort-keys\n      Keccak256: 'H256',\n      // 4\n      ShaThree256: 'H256' // 5\n\n    }, ...decodeData(registry, value));\n    assert(!this.isRaw || this.asRaw.length <= 32, 'Data.Raw values are limited to a maximum length of 32 bytes');\n  }\n\n  get asBlakeTwo256() {\n    return this.value;\n  }\n\n  get asKeccak256() {\n    return this.value;\n  }\n\n  get asRaw() {\n    return this.value;\n  }\n\n  get asSha256() {\n    return this.value;\n  }\n\n  get asShaThree256() {\n    return this.value;\n  }\n\n  get isBlakeTwo256() {\n    return this.index === 2;\n  }\n\n  get isKeccak256() {\n    return this.index === 4;\n  }\n\n  get isNone() {\n    return this.index === 0;\n  }\n\n  get isRaw() {\n    return this.index === 1;\n  }\n\n  get isSha256() {\n    return this.index === 3;\n  }\n\n  get isShaThree256() {\n    return this.index === 5;\n  }\n  /**\n   * @description The encoded length\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   */\n\n\n  toU8a() {\n    if (this.index === 0) {\n      return new Uint8Array(1);\n    } else if (this.index === 1) {\n      // don't add the length, just the data\n      const data = this.value.toU8a(true);\n      const length = Math.min(data.length, 32);\n      const u8a = new Uint8Array(length + 1);\n      u8a.set([length + 1], 0);\n      u8a.set(data.subarray(0, length), 1);\n      return u8a;\n    } // otherwise we simply have a hash\n\n\n    const u8a = new Uint8Array(33);\n    u8a.set([this.index + 32], 0);\n    u8a.set(this.value.toU8a(), 1);\n    return u8a;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sshash } from \"./sshash.js\";\nexport function checkAddressChecksum(decoded) {\n  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix\n\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = sshash(decoded.subarray(0, length));\n  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  return [isValid, length, ss58Length, ss58Decoded];\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6\nimport { assert, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from \"../base58/index.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n  assert(encoded, 'Invalid empty address passed');\n\n  if (isU8a(encoded) || isHex(encoded)) {\n    return u8aToU8a(encoded);\n  }\n\n  try {\n    const decoded = base58Decode(encoded);\n    assert(defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n    assert(ignoreChecksum || isValid, 'Invalid decoded address checksum');\n    assert([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n    return decoded.slice(ss58Length, endPos);\n  } catch (error) {\n    throw new Error(`Decoding ${encoded}: ${error.message}`);\n  }\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { availableNetworks } from \"../networks.js\";\nexport const defaults = {\n  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n  allowedPrefix: availableNetworks.map(({\n    prefix\n  }) => prefix),\n  prefix: 42\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34\nimport { assert, u8aConcat } from '@polkadot/util';\nimport { base58Encode } from \"../base58/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { defaults } from \"./defaults.js\";\nimport { sshash } from \"./sshash.js\";\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n  assert(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');\n  assert(defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n  return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToU8a } from '@polkadot/util'; // re-export the type so *.d.ts files don't have ../src imports\n\n/** @internal */\nexport function createDecode({\n  coder,\n  ipfs\n}, validate) {\n  return (value, ipfsCompat) => {\n    validate(value, ipfsCompat);\n    return coder.decode(ipfs && ipfsCompat ? value.substring(1) : value);\n  };\n}\n/** @internal */\n\nexport function createEncode({\n  coder,\n  ipfs\n}) {\n  return (value, ipfsCompat) => {\n    const out = coder.encode(u8aToU8a(value));\n    return ipfs && ipfsCompat ? `${ipfs}${out}` : out;\n  };\n}\n/** @internal */\n\nexport function createIs(validate) {\n  return (value, ipfsCompat) => {\n    try {\n      return validate(value, ipfsCompat);\n    } catch (error) {\n      return false;\n    }\n  };\n}\n/** @internal */\n\nexport function createValidate({\n  chars,\n  ipfs,\n  type\n}) {\n  return (value, ipfsCompat) => {\n    assert(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);\n\n    if (ipfs && ipfsCompat) {\n      assert(value[0] === ipfs, () => `Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n    }\n\n    for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n      assert(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])), () => `Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n    }\n\n    return true;\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  coder: base58,\n  ipfs: 'z',\n  type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\n\nexport const base58Validate = createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\n\nexport const base58Decode = createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\n\nexport const base58Encode = createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\n\nexport const isBase58 = createIs(base58Validate);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from \"../helpers.js\";\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\n\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : blake2bJs(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nexport const blake2AsHex = createAsHex(blake2AsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const BN_BE_OPTS = {\n  isLe: false\n};\nexport const BN_LE_OPTS = {\n  isLe: true\n};\nexport const BN_LE_16_OPTS = {\n  bitLength: 16,\n  isLe: true\n};\nexport const BN_BE_32_OPTS = {\n  bitLength: 32,\n  isLe: false\n};\nexport const BN_LE_32_OPTS = {\n  bitLength: 32,\n  isLe: true\n};\nexport const BN_BE_256_OPTS = {\n  bitLength: 256,\n  isLe: false\n};\nexport const BN_LE_256_OPTS = {\n  bitLength: 256,\n  isLe: true\n};\nexport const BN_LE_512_OPTS = {\n  bitLength: 512,\n  isLe: true\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { assert, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\nimport { secp256k1Expand } from \"../secp256k1/index.js\";\n\nfunction getH160(u8a) {\n  if ([33, 65].includes(u8a.length)) {\n    u8a = keccakAsU8a(secp256k1Expand(u8a));\n  }\n\n  return u8a.slice(-20);\n}\n\nexport function ethereumEncode(addressOrPublic) {\n  if (!addressOrPublic) {\n    return '0x';\n  }\n\n  const u8aAddress = u8aToU8a(addressOrPublic);\n  assert([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');\n  const address = u8aToHex(getH160(u8aAddress), -1, false);\n  const hash = u8aToHex(keccakAsU8a(address), -1, false);\n  let result = '';\n\n  for (let i = 0; i < 40; i++) {\n    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n  }\n\n  return `0x${result}`;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from \"./isChecksum.js\";\nexport function isEthereumAddress(address) {\n  if (!address || address.length !== 42 || !isHex(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  }\n\n  return isEthereumChecksum(address);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToHex } from '@polkadot/util';\nimport { keccakAsU8a } from \"../keccak/index.js\";\n\nfunction isInvalidChar(char, byte) {\n  return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());\n}\n\nexport function isEthereumChecksum(_address) {\n  const address = _address.replace('0x', '');\n\n  const hash = u8aToHex(keccakAsU8a(address.toLowerCase()), -1, false);\n\n  for (let i = 0; i < 40; i++) {\n    if (isInvalidChar(address[i], parseInt(hash[i], 16))) {\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBigInt, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { isReady } from '@polkadot/wasm-crypto'; // re-export so TS *.d.ts generation is correct\n\n/** @internal */\nexport function createAsHex(fn) {\n  return (...args) => u8aToHex(fn(...args));\n}\n/** @internal */\n\nexport function createBitHasher(bitLength, fn) {\n  return (data, onlyJs) => fn(data, bitLength, onlyJs);\n}\n/** @internal */\n\nexport function createDualHasher(wa, js) {\n  return (value, bitLength = 256, onlyJs) => {\n    const u8a = u8aToU8a(value);\n    return !hasBigInt || !onlyJs && isReady() ? wa[bitLength](u8a) : js[bitLength](u8a);\n  };\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from \"../helpers.js\";\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\n\nexport const keccakAsU8a = createDualHasher({\n  256: keccak256,\n  512: keccak512\n}, {\n  256: keccak256Js,\n  512: keccak512Js\n});\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\n\nexport const keccak256AsU8a = createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\n\nexport const keccak512AsU8a = createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\n\nexport const keccakAsHex = createAsHex(keccakAsU8a);","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, toBytes, u32 } from './utils.js';\n// prettier-ignore\nexport const SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        assert.number(blockLen);\n        assert.number(outputLen);\n        assert.number(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('Blake2: outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`Salt should be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`Personalization should be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        assert.exists(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                this.compress(buffer32, 0, false);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = data.byteOffset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        this.compress(buffer32, 0, true);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = v));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { BLAKE2, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nfunction G2(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends BLAKE2 {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = IV[0] | 0;\n        this.v0h = IV[1] | 0;\n        this.v1l = IV[2] | 0;\n        this.v1h = IV[3] | 0;\n        this.v2l = IV[4] | 0;\n        this.v2h = IV[5] | 0;\n        this.v3l = IV[6] | 0;\n        this.v3h = IV[7] | 0;\n        this.v4l = IV[8] | 0;\n        this.v4h = IV[9] | 0;\n        this.v5l = IV[10] | 0;\n        this.v5h = IV[11] | 0;\n        this.v6l = IV[12] | 0;\n        this.v6h = IV[13] | 0;\n        this.v7l = IV[14] | 0;\n        this.v7h = IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= salt[0];\n            this.v4h ^= salt[1];\n            this.v5l ^= salt[2];\n            this.v5h ^= salt[3];\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= pers[0];\n            this.v6h ^= pers[1];\n            this.v7l ^= pers[2];\n            this.v7h ^= pers[3];\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n        BUF.set(IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BUF[24] = IV[8] ^ l; // Low word of the offset.\n        BUF[25] = IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BUF[28] = ~BUF[28];\n            BUF[29] = ~BUF[29];\n        }\n        let j = 0;\n        const s = SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BUF[0] ^ BUF[16];\n        this.v0h ^= BUF[1] ^ BUF[17];\n        this.v1l ^= BUF[2] ^ BUF[18];\n        this.v1h ^= BUF[3] ^ BUF[19];\n        this.v2l ^= BUF[4] ^ BUF[20];\n        this.v2h ^= BUF[5] ^ BUF[21];\n        this.v3l ^= BUF[6] ^ BUF[22];\n        this.v3h ^= BUF[7] ^ BUF[23];\n        this.v4l ^= BUF[8] ^ BUF[24];\n        this.v4h ^= BUF[9] ^ BUF[25];\n        this.v5l ^= BUF[10] ^ BUF[26];\n        this.v5h ^= BUF[11] ^ BUF[27];\n        this.v6l ^= BUF[12] ^ BUF[28];\n        this.v6h ^= BUF[13] ^ BUF[29];\n        this.v7l ^= BUF[14] ^ BUF[30];\n        this.v7h ^= BUF[15] ^ BUF[31];\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Point } from '@noble/secp256k1';\nimport { assert, bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from \"../bn.js\";\nexport function secp256k1Expand(publicKey, onlyJs) {\n  if (publicKey.length === 65) {\n    return publicKey.subarray(1);\n  }\n\n  assert(publicKey.length === 33, 'Invalid publicKey provided');\n\n  if (!hasBigInt || !onlyJs && isReady()) {\n    return wasm(publicKey).subarray(1);\n  }\n\n  const {\n    x,\n    y\n  } = Point.fromHex(publicKey);\n  return u8aConcat(bnToU8a(x, BN_BE_256_OPTS), bnToU8a(y, BN_BE_256_OPTS));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./is/function.js\";\nimport { isNull } from \"./is/null.js\";\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(isFunction(message) ? message() : message);\n  }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\n\nexport function assertReturn(value, message) {\n  assert(!isUndefined(value) && !isNull(value), message);\n  return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\n\nexport function assertUnreachable(x) {\n  throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToBn } from \"../hex/toBn.js\";\nimport { isBigInt } from \"../is/bigInt.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isToBigInt } from \"../is/toBigInt.js\";\nimport { isToBn } from \"../is/toBn.js\";\nimport { BN } from \"./bn.js\";\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\n\nexport function bnToBn(value) {\n  return value ? BN.isBN(value) ? value : isHex(value) ? hexToBn(value.toString()) : isBigInt(value) ? new BN(value.toString()) : isToBn(value) ? value.toBn() : isToBigInt(value) ? new BN(value.toBigInt().toString()) : new BN(value) : new BN(0);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { objectSpread } from \"../object/spread.js\";\nimport { u8aToHex } from \"../u8a/index.js\";\nimport { bnToU8a } from \"./toU8a.js\";\nconst ZERO_STR = '0x00';\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: false,\n  isNegative: false\n};\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\n\n/** @deprecated Use bnToHex (value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\nfunction bnToHex(value, arg1 = DEFAULT_OPTS, arg2 = false) {\n  return !value ? ZERO_STR : u8aToHex(bnToU8a(value, objectSpread( // We spread here, the default for hex values is BE (JSONRPC via substrate)\n  {\n    isLe: false,\n    isNegative: false\n  }, isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1)));\n}\n\nexport { bnToHex };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isNumber } from \"../is/number.js\";\nimport { bnToBn } from \"./toBn.js\";\nconst DEFAULT_OPTS = {\n  bitLength: -1,\n  isLe: true,\n  isNegative: false\n};\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\n\n/** @deprecated Use bnToU8a(value?: ExtToBn | BN | bigint | number | null, options?: NumberOptions) */\nfunction bnToU8a(value, arg1 = DEFAULT_OPTS, arg2 = true) {\n  const {\n    bitLength = -1,\n    isLe = true,\n    isNegative = false\n  } = isNumber(arg1) ? {\n    bitLength: arg1,\n    isLe: arg2\n  } : arg1;\n  const valueBn = bnToBn(value);\n  const byteLength = bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((bitLength || 0) / 8);\n\n  if (!value) {\n    return bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);\n  }\n\n  const output = new Uint8Array(byteLength);\n  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;\n  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n  return output;\n}\n\nexport { bnToU8a };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcatStrict } from \"../u8a/index.js\";\nimport { compactToU8a } from \"./toU8a.js\";\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\n\nexport function compactAddLength(input) {\n  return u8aConcatStrict([compactToU8a(input.length), input]);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/index.js\";\nimport { u8aToBn, u8aToU8a } from \"../u8a/index.js\";\n/**\n * @name compactFromU8a\n * @description Retrives the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\n\nexport function compactFromU8a(input) {\n  const u8a = u8aToU8a(input); // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n  // than doing an additional call to u8aToBn (as with variable length)\n\n  switch (u8a[0] & 0b11) {\n    case 0b00:\n      return [1, new BN(u8a[0] >>> 2)];\n\n    case 0b01:\n      return [2, new BN(u8a[0] + (u8a[1] << 8) >>> 2)];\n\n    case 0b10:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return [4, new BN(u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2)];\n    // 0b11\n\n    default:\n      {\n        // add 5 to shifted (4 for base length, 1 for this byte)\n        const offset = (u8a[0] >>> 2) + 5; // we unroll the loop\n\n        switch (offset) {\n          // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n          case 5:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return [5, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000)];\n\n          case 6:\n            return [6, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000)];\n          // 6 bytes data is the maximum, 48 bits (56 would overflow)\n\n          case 7:\n            return [7, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000)];\n          // for anything else, use the non-unrolled version\n\n          default:\n            return [offset, u8aToBn(u8a.subarray(1, offset))];\n        }\n      }\n  }\n}\n/**\n * @name compactFromU8aLim\n * @description A limited version of [[compactFromU8a]], accepting only Uint8Array inputs for values <= 48 bits\n */\n\nexport function compactFromU8aLim(u8a) {\n  // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n  // than doing an additional call to u8aToBn (as with variable length)\n  switch (u8a[0] & 0b11) {\n    case 0b00:\n      return [1, u8a[0] >>> 2];\n\n    case 0b01:\n      return [2, u8a[0] + (u8a[1] << 8) >>> 2];\n\n    case 0b10:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return [4, u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1000000 >>> 2];\n    // 0b11\n\n    default:\n      {\n        // add 5 to shifted (4 for base length, 1 for this byte)\n        // we unroll the loop\n        switch ((u8a[0] >>> 2) + 5) {\n          // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n          case 5:\n            return [5, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1000000];\n\n          case 6:\n            return [6, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1000000];\n          // 6 bytes data is the maximum, 48 bits (56 would overflow)\n\n          case 7:\n            return [7, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1000000];\n          // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out\n\n          default:\n            throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');\n        }\n      }\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { compactFromU8a } from \"./fromU8a.js\";\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\n\nexport function compactStripLength(input) {\n  const [offset, length] = compactFromU8a(input);\n  const total = offset + length.toNumber();\n  return [total, input.subarray(offset, total)];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from \"../bn/index.js\";\nimport { u8aConcatStrict } from \"../u8a/index.js\";\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = {\n  bitLength: 16\n};\nconst BL_32 = {\n  bitLength: 32\n};\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n  }\n\n  const u8a = bnToU8a(bn);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  if (length < 4) {\n    throw new Error('Invalid length, previous checks match anything less than 2^30');\n  }\n\n  return u8aConcatStrict([// subtract 4 as minimum (also catered for in decoding)\n  new Uint8Array([(length - 4 << 2) + 0b11]), u8a.subarray(0, length)]);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { isUndefined } from \"../is/undefined.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\nimport { calcSi, findSi, SI, SI_MID } from \"./si.js\";\nconst DEFAULT_DECIMALS = 0;\nconst DEFAULT_UNIT = SI[SI_MID].text;\nlet defaultDecimals = DEFAULT_DECIMALS;\nlet defaultUnit = DEFAULT_UNIT;\n\nfunction getUnits(si, withSi, withSiFull, withUnit) {\n  const unit = isBoolean(withUnit) ? SI[SI_MID].text : withUnit;\n  return withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${unit}` : '' : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}` : '';\n}\n\nfunction getPrePost(text, decimals, forceUnit) {\n  // NOTE We start at midpoint (8) minus 1 - this means that values display as\n  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we use ceil\n  // so there are at most 3 decimal before the decimal separator\n  const si = calcSi(text, decimals, forceUnit);\n  const mid = text.length - (decimals + si.power);\n  const prefix = text.substring(0, mid);\n  const padding = mid < 0 ? 0 - mid : 0;\n  const postfix = `${`${new Array(padding + 1).join('0')}${text}`.substring(mid < 0 ? 0 : mid)}0000`.substring(0, 4);\n  return [si, prefix || '0', postfix];\n} // Formats a string/number with <prefix>.<postfix><type> notation\n\n\nfunction _formatBalance(input, options = true, optDecimals = defaultDecimals) {\n  let text = bnToBn(input).toString();\n\n  if (text.length === 0 || text === '0') {\n    return '0';\n  } // extract options - the boolean case is for backwards-compat\n\n\n  const {\n    decimals = optDecimals,\n    forceUnit = undefined,\n    withSi = true,\n    withSiFull = false,\n    withUnit = true\n  } = isBoolean(options) ? {\n    withSi: options\n  } : options; // strip the negative sign so we can work with clean groupings, re-add this in the\n  // end when we return the result (from here on we work with positive numbers)\n\n  let sign = '';\n\n  if (text[0].startsWith('-')) {\n    sign = '-';\n    text = text.substring(1);\n  }\n\n  const [si, prefix, postfix] = getPrePost(text, decimals, forceUnit);\n  const units = getUnits(si, withSi, withSiFull, withUnit);\n  return `${sign}${formatDecimal(prefix)}.${postfix}${units}`;\n}\n\nexport const formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.calcSi = (text, decimals = defaultDecimals) => calcSi(text, decimals); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.findSi = findSi; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.getDefaults = () => {\n  return {\n    decimals: defaultDecimals,\n    unit: defaultUnit\n  };\n}; // get allowable options to display in a dropdown\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.getOptions = (decimals = defaultDecimals) => {\n  return SI.filter(({\n    power\n  }) => power < 0 ? decimals + power >= 0 : true);\n}; // Sets the default decimals to use for formatting (ui-wide)\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.setDefaults = ({\n  decimals,\n  unit\n}) => {\n  defaultDecimals = isUndefined(decimals) ? defaultDecimals : Array.isArray(decimals) ? decimals[0] : decimals;\n  defaultUnit = isUndefined(unit) ? defaultUnit : Array.isArray(unit) ? unit[0] : unit;\n  SI[SI_MID].text = defaultUnit;\n};","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction zeroPad(value) {\n  return value.toString().padStart(2, '0');\n}\n/**\n * @name formatDate\n * @description Formats a date in CCYY-MM-DD HH:MM:SS format\n */\n\n\nexport function formatDate(date) {\n  const year = date.getFullYear().toString();\n  const month = zeroPad(date.getMonth() + 1);\n  const day = zeroPad(date.getDate());\n  const hour = zeroPad(date.getHours());\n  const minute = zeroPad(date.getMinutes());\n  const second = zeroPad(date.getSeconds());\n  return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line prefer-regex-literals\nconst NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\n/**\n * @name formatDecimal\n * @description Formats a number into string format with thousand seperators\n */\n\nexport function formatDecimal(value) {\n  // We can do this by adjusting the regx, however for the sake of clarity\n  // we rather strip and re-add the negative sign in the output\n  const isNegative = value[0].startsWith('-');\n  const matched = isNegative ? value.substring(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);\n  return matched ? `${isNegative ? '-' : ''}${matched.join(',')}` : value;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bnToBn } from \"../bn/toBn.js\";\nimport { formatDecimal } from \"./formatDecimal.js\";\n/**\n * @name formatNumber\n * @description Formats a number into string format with thousand seperators\n */\n\nexport function formatNumber(value) {\n  return formatDecimal(bnToBn(value).toString());\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nexport const SI_MID = 8;\n/** @internal */\n\nexport const SI = [{\n  power: -24,\n  text: 'yocto',\n  value: 'y'\n}, {\n  power: -21,\n  text: 'zepto',\n  value: 'z'\n}, {\n  power: -18,\n  text: 'atto',\n  value: 'a'\n}, {\n  power: -15,\n  text: 'femto',\n  value: 'f'\n}, {\n  power: -12,\n  text: 'pico',\n  value: 'p'\n}, {\n  power: -9,\n  text: 'nano',\n  value: 'n'\n}, {\n  power: -6,\n  text: 'micro',\n  value: 'µ'\n}, {\n  power: -3,\n  text: 'milli',\n  value: 'm'\n}, {\n  power: 0,\n  text: 'Unit',\n  value: '-'\n}, // position 8\n{\n  power: 3,\n  text: 'Kilo',\n  value: 'k'\n}, {\n  power: 6,\n  text: 'Mill',\n  value: 'M'\n}, // Mega, M\n{\n  power: 9,\n  text: 'Bill',\n  value: 'B'\n}, // Giga, G\n{\n  power: 12,\n  text: 'Tril',\n  value: 'T'\n}, // Tera, T\n{\n  power: 15,\n  text: 'Peta',\n  value: 'P'\n}, {\n  power: 18,\n  text: 'Exa',\n  value: 'E'\n}, {\n  power: 21,\n  text: 'Zeta',\n  value: 'Z'\n}, {\n  power: 24,\n  text: 'Yotta',\n  value: 'Y'\n}]; // Given a SI type (e.g. k, m, Y) find the SI definition\n\n/** @internal */\n\nexport function findSi(type) {\n  // use a loop here, better RN support (which doesn't have [].find)\n  for (let i = 0; i < SI.length; i++) {\n    if (SI[i].value === type) {\n      return SI[i];\n    }\n  }\n\n  return SI[SI_MID];\n}\n/** @internal */\n\nexport function calcSi(text, decimals, forceUnit) {\n  if (forceUnit) {\n    return findSi(forceUnit);\n  }\n\n  const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);\n  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint';\n/** true if the environment has proper BigInt support */\n\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\n/** true if the environment has support for Buffer */\n\nexport const hasBuffer = typeof Buffer !== 'undefined';\n/** true if the environment is CJS */\n\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\n\nexport const hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\n\nexport const hasEsm = !hasCjs;\n/** true if the environment has process available (typically Node.js) */\n\nexport const hasProcess = typeof process === 'object';\n/** true if the environment has WebAssembly available */\n\nexport const hasWasm = typeof WebAssembly !== 'undefined';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from \"../is/hex.js\";\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\n\nexport function hexStripPrefix(value) {\n  if (!value || value === '0x') {\n    return '';\n  } else if (REGEX_HEX_PREFIXED.test(value)) {\n    return value.substring(2);\n  } else if (REGEX_HEX_NOPREFIX.test(value)) {\n    return value;\n  }\n\n  throw new Error(`Expected hex value to convert, found '${value}'`);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\nimport { hexStripPrefix } from \"./stripPrefix.js\";\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\n\n/** @deprecated Use hexToBn (value?: string | null, options?: ToBnOptions) */\nfunction hexToBn(value, options = {}) {\n  if (!value || value === '0x') {\n    return new BN(0);\n  } // For hex, default to BE\n\n\n  const {\n    isLe = false,\n    isNegative = false\n  } = isBoolean(options) ? {\n    isLe: options\n  } : options;\n  const stripped = hexStripPrefix(value);\n  const bn = new BN(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length\n  // multiplied by 4 (2 bytes being 8 bits)\n\n  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;\n}\n\nexport { hexToBn };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexStripPrefix } from \"./stripPrefix.js\";\nconst CHARS = '0123456789abcdef';\nconst UNHEX = new Array(256);\n\nfor (let i = 0; i < CHARS.length; i++) {\n  UNHEX[CHARS[i].charCodeAt(0)] = i;\n\n  if (i > 9) {\n    UNHEX[CHARS[i].toUpperCase().charCodeAt(0)] = i;\n  }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\n\n\nexport function hexToU8a(value, bitLength = -1) {\n  if (!value) {\n    return new Uint8Array();\n  }\n\n  const str = hexStripPrefix(value);\n  const strLength = str.length / 2;\n  const endLength = Math.ceil(bitLength === -1 ? strLength : bitLength / 8);\n  const result = new Uint8Array(endLength);\n  const offset = endLength > strLength ? endLength - strLength : 0;\n\n  for (let i = offset, s = 0; i < endLength; i++, s += 2) {\n    // The big factor here is actually the string lookups. If we do\n    // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n    // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n    // also the faster operation by at least 2x with the character map above\n    result[i] = (UNHEX[str.charCodeAt(s)] << 4) + UNHEX[str.charCodeAt(s + 1)] | 0;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isHex } from \"./hex.js\";\nimport { isString } from \"./string.js\";\n/** @internal */\n\nfunction isAsciiStr(str) {\n  const count = str.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = str.charCodeAt(i); // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/** @internal */\n\n\nfunction isAsciiU8a(u8a) {\n  const count = u8a.length;\n\n  for (let i = 0; i < count; i++) {\n    const b = u8a[i]; // check is inlined here, it is faster than making a call\n\n    if (!(b < 127 && (b >= 32 || b === 10 || b === 9 || b === 13))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\n\n\nexport function isAscii(value) {\n  return isString(value) && !isHex(value) ? isAsciiStr(value) : value ? isAsciiU8a(u8aToU8a(value)) : false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n  return typeof value === 'bigint';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\n\nexport function isBn(value) {\n  return BN.isBN(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBuffer } from \"../has.js\";\nimport { isFunction } from \"./function.js\";\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\n\nexport function isBuffer(value) {\n  // we do check a function first, since it is slightly faster than isBuffer itself\n  return hasBuffer && isFunction(value && value.readDoubleLE) && Buffer.isBuffer(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOnObject } from \"./helpers.js\";\nconst checkCodec = isOnObject('toHex', 'toU8a');\nconst checkRegistry = isOnObject('get');\nexport function isCodec(value) {\n  return checkCodec(value) && checkRegistry(value.registry);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isFunction } from \"./function.js\";\nimport { isObject } from \"./object.js\";\nexport function isOn(...fns) {\n  return value => (isObject(value) || isFunction(value)) && fns.every(f => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n  return value => isObject(value) && fns.every(f => isFunction(value[f]));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n\nexport function isHex(value, bitLength = -1, ignoreLength) {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n  return value === null;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n  return typeof value === 'number';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n  return !!value && typeof value === 'object';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBigInt = isOn('toBigInt');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isOn } from \"./helpers.js\";\nexport const isToBn = isOn('toBn');","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n  // here we defer the instanceof check which is actually slightly\n  // slower than just checking the constrctor (direct instances)\n  return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Adapted from https://github.com/JulienPalard/is_utf8/blob/master/is_utf8.c\nimport { u8aToU8a } from \"../u8a/toU8a.js\";\nimport { isString } from \"./string.js\";\n/**\n * @name isUtf8\n * @summary Tests if the input is valid Utf8\n * @description\n * Checks to see if the input string or Uint8Array is valid Utf8\n */\n\nexport function isUtf8(value) {\n  if (!value) {\n    return isString(value);\n  }\n\n  const u8a = u8aToU8a(value);\n  const len = u8a.length;\n  let i = 0;\n\n  while (i < len) {\n    if (u8a[i] <= 0x7F)\n      /* 00..7F */\n      {\n        i += 1;\n      } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF)\n      /* C2..DF 80..BF */\n      {\n        if (i + 1 < len)\n          /* Expect a 2nd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between C2 and DF, expecting a 2nd byte.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 2;\n      } else if (u8a[i] === 0xE0)\n      /* E0 A0..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 2nd byte between A0 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of E0, expecting a 3nd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of E0, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC)\n      /* E1..EC 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between E1 and EC, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xED)\n      /* ED 80..9F 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {\n              // *message = \"After a first byte of ED, expecting 2nd byte between 80 and 9F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of ED, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of ED, expecting two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF)\n      /* EE..EF 80..BF 80..BF */\n      {\n        if (i + 2 < len)\n          /* Expect a 2nd and 3rd byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte between EE and EF, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte between EE and EF, two following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 3;\n      } else if (u8a[i] === 0xF0)\n      /* F0 90..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 2nd byte between 90 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F0, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F0, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3)\n      /* F1..F3 80..BF 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F1, F2, or F3, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else if (u8a[i] === 0xF4)\n      /* F4 80..8F 80..BF 80..BF */\n      {\n        if (i + 3 < len)\n          /* Expect a 2nd, 3rd 3th byte */\n          {\n            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {\n              // *message = \"After a first byte of F4, expecting 2nd byte between 80 and 8F.\";\n              // *faulty_bytes = 2;\n              return false;\n            }\n\n            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 3rd byte between 80 and BF.\";\n              // *faulty_bytes = 3;\n              return false;\n            }\n\n            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n              // *message = \"After a first byte of F4, expecting 4th byte between 80 and BF.\";\n              // *faulty_bytes = 4;\n              return false;\n            }\n          } else {\n          // *message = \"After a first byte of F4, expecting three following bytes.\";\n          // *faulty_bytes = 1;\n          return false;\n        }\n\n        i += 4;\n      } else {\n      // *message = \"Expecting bytes in the following ranges: 00..7F C2..F4.\";\n      // *faulty_bytes = 1;\n      return false;\n    }\n  }\n\n  return true;\n}","// Copyright 2017-2022 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isUndefined } from \"./is/undefined.js\";\n\n/**\n * @name lazyMethod\n * @description\n * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.\n */\nexport function lazyMethod(result, item, creator, getName) {\n  const name = getName ? getName(item) : item.toString();\n  let value;\n  Object.defineProperty(result, name, {\n    // This allows for re-configuration with the embedded defineProperty below\n    // and ensures that on tested browsers and Node, it _will_ be redefined\n    // and thus short-circuited for future access\n    configurable: true,\n    enumerable: true,\n    // Use a function here, we don't want to capture the outer this, i.e.\n    // don't use arrow functions in this context since we have a this inside\n    get: function () {\n      // This check should _always_ be false and unneeded, since we override\n      // with a value below ... however we ensure we are quire vigilant against\n      // all environment failures, so we are rather be safe than sorry\n      if (isUndefined(value)) {\n        value = creator(item);\n\n        try {\n          // re-define the property as a value, next time around this\n          // getter will only return the computed value\n          Object.defineProperty(this, name, {\n            value\n          });\n        } catch {// ignore any errors, since this _should_ not happen due to\n          // the \"configurable\" property above. But if it ever does\n          // from here-on we will be the cached value the next time\n          // around (with a very slight dip in performance)\n        }\n      }\n\n      return value;\n    }\n  });\n}\n/**\n * @name lazyMethods\n * @description\n * Creates lazy, on-demand getters for the specific values.\n */\n\nexport function lazyMethods(result, items, creator, getName) {\n  for (let i = 0; i < items.length; i++) {\n    lazyMethod(result, items[i], creator, getName);\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { formatDate } from \"./format/formatDate.js\";\nimport { isBn } from \"./is/bn.js\";\nimport { isBuffer } from \"./is/buffer.js\";\nimport { isFunction } from \"./is/function.js\";\nimport { isObject } from \"./is/object.js\";\nimport { isU8a } from \"./is/u8a.js\";\nimport { u8aToHex } from \"./u8a/toHex.js\";\nimport { u8aToU8a } from \"./u8a/toU8a.js\";\nimport { hasProcess } from \"./has.js\";\nconst logTo = {\n  debug: 'log',\n  error: 'error',\n  log: 'log',\n  warn: 'warn'\n};\n\nfunction formatOther(value) {\n  if (value && isObject(value) && value.constructor === Object) {\n    const result = {};\n\n    for (const k of Object.keys(value)) {\n      result[k] = loggerFormat(value[k]);\n    }\n\n    return result;\n  }\n\n  return value;\n}\n\nexport function loggerFormat(value) {\n  if (Array.isArray(value)) {\n    return value.map(loggerFormat);\n  } else if (isBn(value)) {\n    return value.toString();\n  } else if (isU8a(value) || isBuffer(value)) {\n    return u8aToHex(u8aToU8a(value));\n  }\n\n  return formatOther(value);\n}\n\nfunction formatWithLength(maxLength) {\n  return v => {\n    if (maxLength <= 0) {\n      return v;\n    }\n\n    const r = `${v}`;\n    return r.length < maxLength ? v : `${r.substring(0, maxLength)} ...`;\n  };\n}\n\nfunction apply(log, type, values, maxSize = -1) {\n  if (values.length === 1 && isFunction(values[0])) {\n    const fnResult = values[0]();\n    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);\n  }\n\n  console[logTo[log]](formatDate(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));\n}\n\nfunction noop() {// noop\n}\n\nfunction isDebugOn(e, type) {\n  return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));\n}\n\nfunction isDebugOff(e, type) {\n  return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));\n}\n\nfunction getDebugFlag(env, type) {\n  let flag = false;\n\n  for (const e of env) {\n    if (isDebugOn(e, type)) {\n      flag = true;\n    } else if (isDebugOff(e, type)) {\n      flag = false;\n    }\n  }\n\n  return flag;\n}\n\nfunction parseEnv(type) {\n  const env = (hasProcess ? process : {}).env || {};\n  const maxSize = parseInt(env.DEBUG_MAX || '-1', 10);\n  return [getDebugFlag((env.DEBUG || '').toLowerCase().split(','), type), isNaN(maxSize) ? -1 : maxSize];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot';\n *\n * const l = logger('test');\n * ```\n */\n\n\nexport function logger(_type) {\n  const type = `${_type.toUpperCase()}:`.padStart(16);\n  const [isDebug, maxSize] = parseEnv(_type.toLowerCase());\n  return {\n    debug: isDebug ? (...values) => apply('debug', type, values, maxSize) : noop,\n    error: (...values) => apply('error', type, values),\n    log: (...values) => apply('log', type, values),\n    noop,\n    warn: (...values) => apply('warn', type, values)\n  };\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectProperty\n * @summary Assign a get property on the input object\n */\nexport function objectProperty(that, key, getter) {\n  // There are 3 approaches here -\n  //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e\n  //    will retuirn false if the property is set in the parent class\n  //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.\n  //    Additionally, on pre-defined getters it may make a call\n  //  - key in that - Does not need to be combined with either of the above and checks the full chain\n  if (!(key in that)) {\n    Object.defineProperty(that, key, {\n      enumerable: true,\n      // Unlike in lazy, we always call into the upper function, i.e. this method\n      // does not cache old values (it is expected to be used for dynamic values)\n      get: () => getter(key)\n    });\n  }\n}\n/**\n * @name objectProperties\n * @summary Assign get properties on the input object\n */\n\nexport function objectProperties(that, keys, getter) {\n  for (let i = 0; i < keys.length; i++) {\n    objectProperty(that, keys[i], k => getter(k, i));\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest, ...sources) {\n  for (let i = 0; i < sources.length; i++) {\n    const src = sources[i];\n\n    if (src) {\n      Object.assign(dest, src);\n    }\n  }\n\n  return dest;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const CC_TO_UP = new Array(256);\nexport const CC_TO_LO = new Array(256);\n\nfor (let i = 0; i < CC_TO_UP.length; i++) {\n  CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();\n  CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();\n}\n/** @internal */\n\n\nfunction formatAllCaps(w) {\n  return w.slice(0, w.length - 1).toLowerCase() + CC_TO_UP[w.charCodeAt(w.length - 1)];\n}\n/**\n * @internal\n *\n * Inspired by https://stackoverflow.com/a/2970667\n *\n * This is not as optimal as the original SO answer (we split into per-word),\n * however it does pass the tests (which the SO version doesn't) and is still\n * a major improvement over the original camelcase npm package -\n *\n *   camelcase: 20.88 μs/op\n *        this:  1.00 μs/op\n *\n * Caveat of this: only Ascii, but acceptable for the intended usecase\n */\n\n\nfunction converter(format) {\n  return value => {\n    const parts = value // replace all seperators (including consequtive) with spaces\n    .replace(/[-_., ]+/g, ' ') // we don't want leading or trailing spaces\n    .trim() // split into words\n    .split(' ');\n    const count = parts.length;\n    let result = '';\n\n    for (let i = 0; i < count; i++) {\n      const w = parts[i]; // apply the formatting\n\n      result += format(/^[\\dA-Z]+$/.test(w) // all full uppercase + letters are changed to lowercase\n      ? w.toLowerCase() // all consecutive capitals + letters are changed to lowercase\n      // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder\n      : w.replace(/^[\\dA-Z]{2,}[^a-z]/, formatAllCaps), i);\n    }\n\n    return result;\n  };\n}\n/**\n * @name stringCamelCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase\n */\n\n\nexport const stringCamelCase = converter((w, i) => // lowercase for first letter/first word, else uppercase first, rest unchanged\n(i ? CC_TO_UP[w.charCodeAt(0)] : CC_TO_LO[w.charCodeAt(0)]) + w.slice(1));\n/**\n * @name stringPascalCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase\n */\n\nexport const stringPascalCase = converter(w => // uppercase the first character, leave the rest unchanged\nCC_TO_UP[w.charCodeAt(0)] + w.slice(1));","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\n\nexport function stringToU8a(value) {\n  return value ? encoder.encode(value.toString()) : new Uint8Array();\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { isBigInt } from \"./is/bigInt.js\";\n/** @internal */\n\nfunction replacer(_, v) {\n  return isBigInt(v) ? v.toString() : v;\n}\n/**\n * @name stringify\n * @summary Performs a JSON.stringify, with BigInt handling\n * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.\n */\n\n\nexport function stringify(value, space) {\n  return JSON.stringify(value, replacer, space);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\n\nexport function u8aConcat(...list) {\n  const u8as = new Array(list.length);\n  let length = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    u8as[i] = u8aToU8a(list[i]);\n    length += u8as[i].length;\n  }\n\n  return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\n\nexport function u8aConcatStrict(u8as, length = 0) {\n  let offset = 0;\n\n  if (!length) {\n    for (let i = 0; i < u8as.length; i++) {\n      length += u8as[i].length;\n    }\n  }\n\n  const result = new Uint8Array(length);\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4;\n    const length = u8aa.length - mod;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BN } from \"../bn/bn.js\";\nimport { isBoolean } from \"../is/boolean.js\";\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian (default)\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n/** @deprecated Use u8aToBn (value?: string | null, options?: ToBnOptions) */\nfunction u8aToBn(value, options = {}) {\n  // NOTE: This is the same process as followed in the hexToBn conversion\n  // For Uint8Array, default to LE\n  const {\n    isLe = true,\n    isNegative = false\n  } = isBoolean(options) ? {\n    isLe: options\n  } : options;\n  const count = value.length; // shortcut for <= u48 values - in this case the manual conversion\n  // here seems to be more efficient than passing the full array\n\n  if (count <= 6) {\n    if (isNegative) {\n      let result = 0;\n\n      if (isLe) {\n        // Most common case i{8, 16, 32} default LE SCALE-encoded\n        // For <= 32, we also optimize the xor to a single op\n        // (see the comments around unrolling in the next section)\n        switch (count) {\n          case 0:\n            return new BN(0);\n\n          case 1:\n            result = value[0] ^ 0x000000ff;\n            break;\n\n          case 2:\n            result = value[0] + (value[1] << 8) ^ 0x0000ffff;\n            break;\n\n          case 3:\n            result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;\n            break;\n\n          case 4:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;\n            break;\n\n          case 5:\n            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;\n            break;\n\n          default:\n            // 6\n            result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;\n            break;\n        }\n      } else {\n        for (let i = 0; i < count; i++) {\n          result = result * 0x100 + (value[i] ^ 0xff);\n        }\n      }\n\n      return count ? new BN(result * -1 - 1) : new BN(0);\n    } else if (isLe) {\n      // Most common case - u{8, 16, 32} default LE SCALE-encoded\n      //\n      // There are some slight benefits in unrolling this specific loop,\n      // however it comes with diminishing returns since here the actual\n      // `new BN` does seem to take up the bulk of the time\n      switch (count) {\n        case 0:\n          return new BN(0);\n\n        case 1:\n          return new BN(value[0]);\n\n        case 2:\n          return new BN(value[0] + (value[1] << 8));\n\n        case 3:\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16));\n\n        case 4:\n          // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n          // 32-bit, in the case where the top-most bit is set this yields a negative value\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000);\n\n        case 5:\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000);\n\n        default:\n          // 6\n          return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000);\n      }\n    } else {\n      let result = 0;\n\n      for (let i = 0; i < count; i++) {\n        result = result * 0x100 + value[i];\n      }\n\n      return new BN(result);\n    }\n  }\n\n  return isNegative ? new BN(value, isLe ? 'le' : 'be').fromTwos(value.length * 8) : new BN(value, isLe ? 'le' : 'be');\n}\n\nexport { u8aToBn };","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst U8 = new Array(256);\nconst U16 = new Array(256 * 256);\n\nfor (let n = 0; n < 256; n++) {\n  U8[n] = n.toString(16).padStart(2, '0');\n}\n\nfor (let i = 0; i < 256; i++) {\n  const s = i << 8;\n\n  for (let j = 0; j < 256; j++) {\n    U16[s | j] = U8[i] + U8[j];\n  }\n}\n/** @internal */\n\n\nfunction hex(value) {\n  const mod = value.length % 2;\n  const length = value.length - mod;\n  const dv = new DataView(value.buffer, value.byteOffset);\n  let result = '';\n\n  for (let i = 0; i < length; i += 2) {\n    // we only use getUint16 here instead of getUint32 - at least in our\n    // tests this is faster to execute (both long & short strings tested)\n    result += U16[dv.getUint16(i)];\n  }\n\n  if (mod) {\n    result += U8[dv.getUint8(length)];\n  }\n\n  return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  const length = Math.ceil(bitLength / 8);\n  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : bitLength > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name u8aToNumber\n * @summary Creates a number from a Uint8Array object.\n */\nexport function u8aToNumber(value, {\n  isNegative = false\n} = {}) {\n  const count = value.length;\n\n  if (isNegative) {\n    let result = 0;\n\n    switch (count) {\n      case 0:\n        return 0;\n\n      case 1:\n        result = value[0] ^ 0x000000ff;\n        break;\n\n      case 2:\n        result = value[0] + (value[1] << 8) ^ 0x0000ffff;\n        break;\n\n      case 3:\n        result = value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ffffff;\n        break;\n\n      case 4:\n        // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n        // 32-bit, in the case where the top-most bit is set this yields a negative value\n        result = value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff;\n        break;\n\n      case 5:\n        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] ^ 0xff) * 0x100000000;\n        break;\n\n      case 6:\n        result = (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000 ^ 0xffffffff) + (value[4] + (value[5] << 8) ^ 0x0000ffff) * 0x100000000;\n        break;\n\n      default:\n        throw new Error('Value more than 48-bits cannot be reliably converted');\n    }\n\n    return result * -1 - 1;\n  }\n\n  switch (count) {\n    case 0:\n      return 0;\n\n    case 1:\n      return value[0];\n\n    case 2:\n      return value[0] + (value[1] << 8);\n\n    case 3:\n      return value[0] + (value[1] << 8) + (value[2] << 16);\n\n    case 4:\n      // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n      // 32-bit, in the case where the top-most bit is set this yields a negative value\n      return value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1000000;\n\n    case 5:\n      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1000000;\n\n    case 6:\n      return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1000000;\n\n    default:\n      throw new Error('Value more than 48-bits cannot be reliably converted');\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\n\nexport function u8aToString(value) {\n  return value ? decoder.decode(value) : '';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isU8a } from \"../is/u8a.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\nexport function u8aToU8a(value) {\n  return isU8a(value) ? value : isHex(value) ? hexToU8a(value) : isBuffer(value) || Array.isArray(value) ? new Uint8Array(value) : stringToU8a(value);\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// A number of functions are \"unsafe\" and purposefully so - it is\n// assumed that where the bridge is used, it is correctly wrapped\n// in a safeguard (see withWasm in the wasm-crypto package) which\n// then ensures that the internal wasm instance here is available\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { stringToU8a, u8aToString } from '@polkadot/util';\nimport { Wbg } from \"./wbg.js\";\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function white is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\n\nexport class Bridge {\n  #cachegetInt32;\n  #cachegetUint8;\n  #createWasm;\n  #heap;\n  #heapNext;\n  #wasm;\n  #wasmError;\n  #wasmPromise;\n  #wbg;\n  #type;\n\n  constructor(createWasm) {\n    this.#createWasm = createWasm;\n    this.#cachegetInt32 = null;\n    this.#cachegetUint8 = null;\n    this.#heap = new Array(32).fill(undefined).concat(undefined, null, true, false);\n    this.#heapNext = this.#heap.length;\n    this.#type = 'none';\n    this.#wasm = null;\n    this.#wasmError = null;\n    this.#wasmPromise = null;\n    this.#wbg = { ...new Wbg(this)\n    };\n  }\n  /** @description Returns the init error */\n\n\n  get error() {\n    return this.#wasmError;\n  }\n  /** @description Returns the init type */\n\n\n  get type() {\n    return this.#type;\n  }\n  /** @description Returns the created wasm interface */\n\n\n  get wasm() {\n    return this.#wasm;\n  }\n  /** @description Performs the wasm initialization */\n\n\n  async init(createWasm) {\n    if (!this.#wasmPromise || createWasm) {\n      this.#wasmPromise = (createWasm || this.#createWasm)(this.#wbg);\n    }\n\n    const {\n      error,\n      type,\n      wasm\n    } = await this.#wasmPromise;\n    this.#type = type;\n    this.#wasm = wasm;\n    this.#wasmError = error;\n    return this.#wasm;\n  }\n  /**\n   * @internal\n   * @description Gets an object from the heap\n   */\n\n\n  getObject(idx) {\n    return this.#heap[idx];\n  }\n  /**\n   * @internal\n   * @description Removes an object from the heap\n   */\n\n\n  dropObject(idx) {\n    if (idx < 36) {\n      return;\n    }\n\n    this.#heap[idx] = this.#heapNext;\n    this.#heapNext = idx;\n  }\n  /**\n   * @internal\n   * @description Retrieves and removes an object to the heap\n   */\n\n\n  takeObject(idx) {\n    const ret = this.getObject(idx);\n    this.dropObject(idx);\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Adds an object to the heap\n   */\n\n\n  addObject(obj) {\n    if (this.#heapNext === this.#heap.length) {\n      this.#heap.push(this.#heap.length + 1);\n    }\n\n    const idx = this.#heapNext;\n    this.#heapNext = this.#heap[idx];\n    this.#heap[idx] = obj;\n    return idx;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Int32 in the WASM interface\n   */\n\n\n  getInt32() {\n    if (this.#cachegetInt32 === null || this.#cachegetInt32.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetInt32 = new Int32Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetInt32;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Uint8Array in the WASM interface\n   */\n\n\n  getUint8() {\n    if (this.#cachegetUint8 === null || this.#cachegetUint8.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetUint8 = new Uint8Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetUint8;\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array in the WASM interface\n   */\n\n\n  getU8a(ptr, len) {\n    return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n  }\n  /**\n   * @internal\n   * @description Retrieves a string in the WASM interface\n   */\n\n\n  getString(ptr, len) {\n    return u8aToString(this.getU8a(ptr, len));\n  }\n  /**\n   * @internal\n   * @description Allocates an Uint8Array in the WASM interface\n   */\n\n\n  allocU8a(arg) {\n    const ptr = this.#wasm.__wbindgen_malloc(arg.length * 1);\n\n    this.getUint8().set(arg, ptr / 1);\n    return [ptr, arg.length];\n  }\n  /**\n   * @internal\n   * @description Allocates a string in the WASM interface\n   */\n\n\n  allocString(arg) {\n    return this.allocU8a(stringToU8a(arg));\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array from the WASM interface\n   */\n\n\n  resultU8a() {\n    const r0 = this.getInt32()[8 / 4 + 0];\n    const r1 = this.getInt32()[8 / 4 + 1];\n    const ret = this.getU8a(r0, r1).slice();\n\n    this.#wasm.__wbindgen_free(r0, r1 * 1);\n\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Retrieve a string from the WASM interface\n   */\n\n\n  resultString() {\n    return u8aToString(this.resultU8a());\n  }\n\n}","// Copyright 2019-2022 @polkadot/wasm-bundle authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name createWasmFn\n * @description\n * Create a WASM (or ASM.js) creator interface based on the supplied information.\n *\n * It will attempt to create a WASM interface first and if this fails or is not available in\n * the environment, will fallback to attempting to create an ASM.js interface.\n */\nexport function createWasmFn(root, wasmBytes, asmFn) {\n  return async wbg => {\n    const result = {\n      error: null,\n      type: 'none',\n      wasm: null\n    };\n\n    try {\n      if (!wasmBytes || !wasmBytes.length) {\n        throw new Error('No WebAssembly provided for initialization');\n      } else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {\n        throw new Error('WebAssembly is not available in your environment');\n      }\n\n      const source = await WebAssembly.instantiate(wasmBytes, {\n        wbg\n      });\n      result.wasm = source.instance.exports;\n      result.type = 'wasm';\n    } catch (error) {\n      // if we have a valid supplied asm.js, return that\n      if (typeof asmFn === 'function') {\n        result.wasm = asmFn(wbg);\n        result.type = 'asm';\n      } else {\n        result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;\n        console.error(result.error);\n      }\n    }\n\n    return result;\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nconst DEFAULT_CRYPTO = {\n  getRandomValues\n};\nconst DEFAULT_SELF = {\n  crypto: DEFAULT_CRYPTO\n};\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\n\nexport class Wbg {\n  #bridge;\n\n  constructor(bridge) {\n    this.#bridge = bridge;\n  }\n  /** @internal */\n\n\n  abort = () => {\n    throw new Error('abort');\n  };\n  /** @internal */\n\n  __wbindgen_is_undefined = idx => {\n    return this.#bridge.getObject(idx) === undefined;\n  };\n  /** @internal */\n\n  __wbindgen_throw = (ptr, len) => {\n    throw new Error(this.#bridge.getString(ptr, len));\n  };\n  /** @internal */\n\n  __wbg_self_1b7a39e3a92c949c = () => {\n    return this.#bridge.addObject(DEFAULT_SELF);\n  };\n  /** @internal */\n\n  __wbg_require_604837428532a733 = (ptr, len) => {\n    throw new Error(`Unable to require ${this.#bridge.getString(ptr, len)}`);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_crypto_968f1772287e2df0 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_a3d34b4fee3c2869 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n    DEFAULT_CRYPTO.getRandomValues(this.#bridge.getU8a(ptr, len));\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n    throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));\n  };\n  /** @internal */\n\n  __wbindgen_object_drop_ref = idx => {\n    this.#bridge.takeObject(idx);\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-crypto-init authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createWasmFn } from '@polkadot/wasm-bridge';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name createWasm\n * @description\n * Creates an interface using only WASM\n */\n\nexport const createWasm = createWasmFn('crypto', wasmBytes, null);","// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decode, unzlibSync } from '@polkadot/wasm-util';\nimport { bytes, lenIn, lenOut } from \"./cjs/bytes.js\";\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed form this\n * specific format and returned.\n */\n\nexport const wasmBytes = unzlibSync(base64Decode(bytes, new Uint8Array(lenIn)), new Uint8Array(lenOut));","// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated as part of the build, do not edit\n\nconst lenIn = 171116;\nconst lenOut = 339508;\nconst bytes = '';\n\nmodule.exports = { bytes, lenIn, lenOut };\n","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst chr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst map = {};\n\nfor (let i = 0; i < chr.length; i++) {\n  map[chr[i]] = i;\n}\n/**\n * @name base64Decode\n * @description\n * A base64Decoding function that operates in all environments. Unlike decoding\n * from Buffer (Node.js only) or atob (browser-only) this implementation is\n * slightly slower, but it is platform independent.\n *\n * For our usage, since we have access to the static final size (where used), we\n * decode to a specified output buffer.\n */\n\n\nexport function base64Decode(data, out) {\n  let byte = 0;\n  let bits = 0;\n  let pos = -1;\n\n  for (let i = 0; i < data.length && data[i] !== '='; i++) {\n    // each character represents 6 bits\n    byte = byte << 6 | map[data[i]]; // each byte needs to contain 8 bits\n\n    if ((bits += 6) >= 8) {\n      out[++pos] = byte >>> (bits -= 8) & 0xff;\n    }\n  }\n\n  return out;\n}","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// MIT License\n//\n// Copyright (c) 2020 Arjun Barrett\n//\n// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts\n// This only contains the unzlibSync function, no compression, no async, no workers\n//\n// These 2 issues are addressed as a short-term, stop-gap solution\n//   - https://github.com/polkadot-js/api/issues/2963\n//   - https://github.com/101arrowz/fflate/issues/17\n//\n// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with\n// only the single required function provided (compression is still being done in the build with fflate)\n\n/* eslint-disable */\n// inflate state\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array,\n      u16 = Uint16Array,\n      u32 = Uint32Array; // code length index map\n\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits\n\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n// see fleb note\n\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // get base, reverse index map from extra bits\n\nconst freb = (eb, start) => {\n  const b = new u16(31);\n\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  const r = new u32(b[30]);\n\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return [b, r];\n};\n\nconst [fl, revfl] = freb(fleb, 2); // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0); // map of value to reverse (assuming 16 bits)\n\nconst rev = new u16(32768);\n\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nconst hMap = (cd, mb, r) => {\n  const s = cd.length; // index\n\n  let i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  const l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) ++l[cd[i] - 1]; // u16 \"map\": index -> minimum code for bit length = index\n\n\n  const le = new u16(mb);\n\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  let co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    const rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = i << 4 | cd[i]; // free bits\n\n        const r = mb - cd[i]; // start value\n\n        let v = le[cd[i] - 1]++ << r; // m is end value\n\n        for (const m = v | (1 << r) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n  }\n\n  return co;\n}; // fixed length tree\n\n\nconst flt = new u8(288);\n\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (let i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nconst fdt = new u8(32);\n\nfor (let i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nconst flrm = hMap(flt, 9, 1); // fixed distance map\n\nconst fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m\n\nconst bits = (d, p, m) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nconst bits16 = (d, p) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);\n}; // get end of byte\n\n\nconst shft = p => (p >>> 3) + (p & 7 && 1); // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nconst slc = (v, s, e) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n}; // find max of array\n\n\nconst max = a => {\n  let m = a[0];\n\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // expands raw DEFLATE data\n\n\nconst inflt = (dat, buf, st) => {\n  const noSt = !st || st.i;\n  if (!st) st = {}; // source length\n\n  const sl = dat.length; // have to estimate size\n\n  const noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average\n\n  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  const cbuf = l => {\n    let bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl << 1, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  let final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n;\n  if (final && !lm) return buf; // total bits\n\n  const tbts = sl << 3;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4,\n              l = dat[s - 4] | dat[s - 3] << 8,\n              t = s + l;\n\n        if (t > sl) {\n          if (noSt) throw 'unexpected EOF';\n          break;\n        } // ensure size\n\n\n        if (noBuf) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t << 3;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257,\n              hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        const ldt = new u8(tl); // code length tree\n\n        const clt = new u8(19);\n\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        const clb = max(clt),\n              clbmsk = (1 << clb) - 1;\n        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map\n\n        const clm = hMap(clt, clb, 1);\n\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          const s = r >>> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        const lt = ldt.subarray(0, hLit),\n              dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else throw 'invalid block type';\n\n      if (pos > tbts) throw 'unexpected EOF';\n    } // Make sure the buffer can hold this + the largest possible addition\n    // maximum chunk size (practically, theoretically infinite) is 2^17;\n\n\n    if (noBuf) cbuf(bt + 131072);\n    const lms = (1 << lbt) - 1,\n          dms = (1 << dbt) - 1;\n    const mxa = lbt + dbt + 18;\n\n    while (noSt || pos + mxa < tbts) {\n      // bits read, code\n      const c = lm[bits16(dat, pos) & lms],\n            sym = c >>> 4;\n      pos += c & 15;\n      if (pos > tbts) throw 'unexpected EOF';\n      if (!c) throw 'invalid length/literal';\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lm = undefined;\n        break;\n      } else {\n        let add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          const i = sym - 257,\n                b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        const d = dm[bits16(dat, pos) & dms],\n              dsym = d >>> 4;\n        if (!d) throw 'invalid distance';\n        pos += d & 15;\n        let dt = fd[dsym];\n\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) throw 'unexpected EOF';\n        if (noBuf) cbuf(bt + 131072);\n        const end = bt + add;\n\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n\n        bt = end;\n      }\n    }\n\n    st.l = lm, st.p = pos, st.b = bt;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n}; // zlib valid\n\n\nconst zlv = d => {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';\n  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\n\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n}","// Copyright 2017-2022 @polkadot/x-bigint authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport const BigInt = typeof xglobal.BigInt === 'function' && typeof xglobal.BigInt.asIntN === 'function' ? xglobal.BigInt : () => Number.NaN;","// Copyright 2017-2022 @polkadot/x-global authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { packageInfo } from \"./packageInfo.js\";\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nexport const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nexport function extractGlobal(name, fallback) {\n  // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n  // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n  //\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nexport function exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}","// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport function getRandomValues(arr) {\n  // We use x-global here - this prevents packagers such as rollup\n  // confusing this with the \"normal\" Node.js import and stubbing it\n  // (and also aligns with eg. x-fetch, where x-global is used)\n  return xglobal.crypto.getRandomValues(arr);\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextDecoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextDecoder = extractGlobal('TextDecoder', Fallback);","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    let result = '';\n\n    for (let i = 0; i < value.length; i++) {\n      result += String.fromCharCode(value[i]);\n    }\n\n    return result;\n  }\n\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextEncoder = extractGlobal('TextEncoder', Fallback);","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextEncoder {\n  encode(value) {\n    const u8a = new Uint8Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      u8a[i] = value.charCodeAt(i);\n    }\n\n    return u8a;\n  }\n\n}","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\",\n\t\t\t\"KTON\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://darwinia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-pos-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t11\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Spiritnet\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"poli\",\n\t\t\"displayName\": \"Polimec Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polimec.io/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 54,\n\t\t\"network\": \"cere\",\n\t\t\"displayName\": \"Cere Network\",\n\t\t\"symbols\": [\n\t\t\t\"CERE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cere.network\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 56,\n\t\t\"network\": \"pendulum\",\n\t\t\"displayName\": \"Pendulum chain\",\n\t\t\"symbols\": [\n\t\t\t\"PEN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 57,\n\t\t\"network\": \"amplitude\",\n\t\t\"displayName\": \"Amplitude chain\",\n\t\t\"symbols\": [\n\t\t\t\"AMPE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"HydraDX\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydradx.io\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"AvN Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 89,\n\t\t\"network\": \"polkadexparachain\",\n\t\t\"displayName\": \"Polkadex Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 93,\n\t\t\"network\": \"fragnova\",\n\t\t\"displayName\": \"Fragnova Network\",\n\t\t\"symbols\": [\n\t\t\t\"NOVA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://fragnova.com\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"OTP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.origintrail.io/\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 117,\n\t\t\"network\": \"tinker\",\n\t\t\"displayName\": \"Tinker\",\n\t\t\"symbols\": [\n\t\t\t\"TNKR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://invarch.network\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1221,\n\t\t\"network\": \"peaq\",\n\t\t\"displayName\": \"Peaq Network\",\n\t\t\"symbols\": [\n\t\t\t\"PEAQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1222,\n\t\t\"network\": \"apex\",\n\t\t\"displayName\": \"Apex Network\",\n\t\t\"symbols\": [\n\t\t\t\"APEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1328,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"bajun\",\n\t\t\"displayName\": \"Bajun Network\",\n\t\t\"symbols\": [\n\t\t\t\"BAJU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"subspace\",\n\t\t\"displayName\": \"Subspace\",\n\t\t\"symbols\": [\n\t\t\t\"SSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 7007,\n\t\t\"network\": \"tidefi\",\n\t\t\"displayName\": \"Tidefi\",\n\t\t\"symbols\": [\n\t\t\t\"TIFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://tidefi.com\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 9807,\n\t\t\"network\": \"dentnet\",\n\t\t\"displayName\": \"DENTNet\",\n\t\t\"symbols\": [\n\t\t\t\"DENTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.dentnet.io\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t},\n\t{\n\t\t\"prefix\": 15253,\n\t\t\"network\": \"ice-network\",\n\t\t\"displayName\": \"ICE Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICX\",\n\t\t\t\"ICY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18,\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 12191,\n\t\t\"network\": \"nftmart\",\n\t\t\"displayName\": \"NFTMart\",\n\t\t\"symbols\": [\n\t\t\t\"NMT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nftmart.io\"\n\t}\n];\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["_classPrivateFieldBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldKey","name","FrameSystemAccountInfo","nonce","consumers","providers","sufficients","data","PalletBalancesAccountData","free","reserved","miscFrozen","feeFrozen","FrameSupportWeightsPerDispatchClassU64","normal","operational","mandatory","SpRuntimeDigest","logs","SpRuntimeDigestDigestItem","_enum","Other","__Unused1","__Unused2","__Unused3","Consensus","Seal","PreRuntime","__Unused7","RuntimeEnvironmentUpdated","FrameSystemEventRecord","phase","event","topics","FrameSystemEvent","ExtrinsicSuccess","dispatchInfo","ExtrinsicFailed","dispatchError","CodeUpdated","NewAccount","account","KilledAccount","Remarked","_alias","hash_","sender","FrameSupportWeightsDispatchInfo","weight","class","paysFee","FrameSupportWeightsDispatchClass","FrameSupportWeightsPays","SpRuntimeDispatchError","CannotLookup","BadOrigin","Module","ConsumerRemaining","NoProviders","TooManyConsumers","Token","Arithmetic","Transactional","SpRuntimeModuleError","index","error","SpRuntimeTokenError","SpRuntimeArithmeticError","SpRuntimeTransactionalError","PalletUtilityEvent","BatchInterrupted","BatchCompleted","BatchCompletedWithErrors","ItemCompleted","ItemFailed","DispatchedAs","result","PalletBalancesEvent","Endowed","freeBalance","DustLost","amount","Transfer","from","to","BalanceSet","who","Reserved","Unreserved","ReserveRepatriated","destinationStatus","Deposit","Withdraw","Slashed","FrameSupportTokensMiscBalanceStatus","PalletElectionProviderMultiPhaseEvent","SolutionStored","electionCompute","prevEjected","ElectionFinalized","Rewarded","value","SignedPhaseStarted","round","UnsignedPhaseStarted","PalletElectionProviderMultiPhaseElectionCompute","PalletStakingPalletEvent","EraPaid","OldSlashingReportDiscarded","StakersElected","Bonded","Unbonded","Withdrawn","Kicked","StakingElectionFailed","Chilled","PayoutStarted","ValidatorPrefsSet","PalletStakingValidatorPrefs","commission","blocked","PalletSessionEvent","NewSession","sessionIndex","PalletGrandpaEvent","NewAuthorities","authoritySet","Paused","Resumed","SpFinalityGrandpaAppPublic","SpCoreEd25519Public","PalletImOnlineEvent","HeartbeatReceived","authorityId","AllGood","SomeOffline","offline","PalletImOnlineSr25519AppSr25519Public","SpCoreSr25519Public","PalletStakingExposure","total","own","others","PalletStakingIndividualExposure","PalletOffencesEvent","Offence","kind","timeslot","PalletBagsListEvent","Rebagged","ScoreUpdated","newScore","PalletVestingEvent","VestingUpdated","unvested","VestingCompleted","PalletMultisigEvent","NewMultisig","approving","multisig","callHash","MultisigApproval","timepoint","MultisigExecuted","MultisigCancelled","cancelling","PalletMultisigTimepoint","height","PalletCouncilRawEvent","AnnouncingPeriodStarted","NotEnoughCandidates","VotingPeriodStarted","NewCandidate","NewCouncilElected","NewCouncilNotElected","CandidacyStakeRelease","CandidacyWithdraw","CandidacyNoteSet","RewardPayment","BudgetBalanceSet","BudgetRefill","BudgetRefillPlanned","BudgetIncrementUpdated","CouncilorRewardUpdated","RequestFunded","CouncilBudgetFunded","CouncilorRemarked","CandidateRemarked","PalletReferendumRawEvent","ReferendumStarted","ReferendumStartedForcefully","RevealingStageStarted","ReferendumFinished","VoteCast","VoteRevealed","StakeReleased","AccountOptedOutOfVoting","PalletReferendumInstance1","PalletReferendumOptionResult","optionId","votePower","PalletMembershipRawEvent","MemberInvited","MembershipGifted","MembershipBought","MemberProfileUpdated","MemberAccountsUpdated","MemberVerificationStatusUpdated","ReferralCutUpdated","InvitesTransferred","MembershipPriceUpdated","InitialInvitationBalanceUpdated","LeaderInvitationQuotaUpdated","InitialInvitationCountUpdated","StakingAccountAdded","StakingAccountRemoved","StakingAccountConfirmed","MemberRemarked","MemberCreated","PalletMembershipBuyMembershipParameters","rootAccount","controllerAccount","handle","metadata","referrerId","PalletMembershipInviteMembershipParameters","invitingMemberId","PalletMembershipCreateMemberParameters","isFoundingMember","PalletMembershipGiftMembershipParameters","creditControllerAccount","applyControllerAccountInvitationLock","creditRootAccount","applyRootAccountInvitationLock","PalletForumRawEvent","CategoryCreated","CategoryArchivalStatusUpdated","CategoryTitleUpdated","CategoryDescriptionUpdated","CategoryDeleted","ThreadCreated","ThreadModerated","ThreadUpdated","ThreadMetadataUpdated","ThreadDeleted","ThreadMoved","PostAdded","PostModerated","PostDeleted","PostTextUpdated","CategoryStickyThreadUpdate","CategoryMembershipOfModeratorUpdated","PalletForumPrivilegedActor","Lead","Moderator","PalletForumExtendedPostIdObject","categoryId","threadId","postId","PalletConstitutionRawEvent","ConstutionAmended","PalletBountyRawEvent","BountyCreated","BountyOracleSwitched","BountyTerminated","BountyFunded","BountyMaxFundingReached","BountyFundingWithdrawal","BountyCreatorCherryWithdrawal","BountyCreatorOracleRewardWithdrawal","BountyOracleRewardWithdrawal","BountyRemoved","WorkEntryAnnounced","WorkSubmitted","OracleJudgmentSubmitted","WorkEntrantFundsWithdrawn","BountyContributorRemarked","BountyOracleRemarked","BountyEntrantRemarked","BountyCreatorRemarked","WorkSubmissionPeriodEnded","WorkEntrantStakeUnlocked","WorkEntrantStakeSlashed","FunderStateBloatBondWithdrawn","CreatorStateBloatBondWithdrawn","PalletBountyBountyParametersBTreeSet","oracle","contractType","creator","cherry","oracleReward","entrantStake","fundingType","PalletBountyBountyActor","Council","Member","PalletBountyAssuranceContractTypeBTreeSet","Open","Closed","PalletBountyFundingType","Perpetual","target","Limited","fundingPeriod","PalletBountyOracleWorkEntryJudgment","Winner","reward","Rejected","slashingShare","actionJustification","PalletUtilityRawEvent","Signaled","RuntimeUpgraded","UpdatedWorkingGroupBudget","TokensBurned","PalletCommonWorkingGroupIterableEnumsWorkingGroup","PalletCommonBalanceKind","PalletContentRawEvent","CuratorGroupCreated","CuratorGroupPermissionsUpdated","CuratorGroupStatusSet","CuratorAdded","CuratorRemoved","ChannelCreated","ChannelUpdated","ChannelPrivilegeLevelUpdated","ChannelStateBloatBondValueUpdated","VideoStateBloatBondValueUpdated","ChannelAssetsRemoved","ChannelDeleted","ChannelDeletedByModerator","ChannelVisibilitySetByModerator","ChannelPausedFeaturesUpdatedByModerator","ChannelAssetsDeletedByModerator","ChannelFundsWithdrawn","ChannelRewardClaimedAndWithdrawn","VideoCreated","VideoUpdated","VideoDeleted","VideoDeletedByModerator","VideoVisibilitySetByModerator","VideoAssetsDeletedByModerator","ChannelPayoutsUpdated","ChannelRewardUpdated","EnglishAuctionStarted","OpenAuctionStarted","NftIssued","NftDestroyed","AuctionBidMade","AuctionBidCanceled","AuctionCanceled","EnglishAuctionSettled","BidMadeCompletingAuction","OpenAuctionBidAccepted","OfferStarted","OfferAccepted","OfferCanceled","NftSellOrderMade","NftBought","BuyNowCanceled","BuyNowPriceUpdated","NftSlingedBackToTheOriginalArtist","ChannelOwnerRemarked","ChannelAgentRemarked","NftOwnerRemarked","InitializedChannelTransfer","CancelChannelTransfer","ChannelTransferAccepted","GlobalNftLimitUpdated","ChannelNftLimitUpdated","ToggledNftLimits","CreatorTokenIssued","PalletContentPermissionsContentActor","Curator","PalletContentChannelRecord","owner","numVideos","collaborators","cumulativeRewardClaimed","privilegeLevel","pausedFeatures","transferStatus","dataObjects","dailyNftLimit","weeklyNftLimit","dailyNftCounter","weeklyNftCounter","creatorTokenId","channelStateBloatBond","PalletContentIterableEnumsChannelActionPermission","PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature","PalletCommonBloatBondRepayableBloatBond","repaymentRestrictedTo","PalletContentChannelOwner","CuratorGroup","PalletContentChannelTransferStatus","NoActiveTransfer","PendingTransfer","PalletContentPendingTransfer","newOwner","transferParams","PalletContentTransferCommitmentParametersBoundedBTreeMap","newCollaborators","price","transferId","PalletContentLimitPerPeriod","limit","blockNumberPeriod","PalletContentNftCounter","counter","lastUpdated","PalletContentNftTypesEnglishAuctionParamsRecord","startingPrice","buyNowPrice","whitelist","startsAt","duration","extensionPeriod","minBidStep","PalletContentNftTypesOpenAuctionParamsRecord","bidLockDuration","PalletContentNftTypesNftIssuanceParametersRecord","royalty","nftMetadata","nonChannelOwner","initTransactionalStatus","PalletContentNftTypesInitTransactionalStatusRecord","Idle","BuyNow","InitiatedOfferToMember","EnglishAuction","OpenAuction","PalletContentChannelCreationParametersRecord","assets","meta","storageBuckets","distributionBuckets","expectedChannelStateBloatBond","expectedDataObjectStateBloatBond","PalletContentStorageAssetsRecord","objectCreationList","expectedDataSizeFee","PalletStorageDataObjectCreationParameters","size_","ipfsContentId","PalletStorageDistributionBucketIdRecord","distributionBucketFamilyId","distributionBucketIndex","PalletContentChannelUpdateParametersRecord","assetsToUpload","newMeta","assetsToRemove","storageBucketsNumWitness","PalletContentVideoCreationParametersRecord","autoIssueNft","expectedVideoStateBloatBond","PalletContentVideoUpdateParametersRecord","PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction","HideVideo","HideChannel","ChangeChannelFeatureStatus","DeleteVideo","DeleteChannel","DeleteVideoAssets","DeleteNonVideoChannelAssets","UpdateChannelNftLimits","PalletContentTransferCommitmentParametersBTreeMap","PalletContentUpdateChannelPayoutsParametersRecord","commitment","payload","minCashoutAllowed","maxCashoutAllowed","channelCashoutsEnabled","PalletContentChannelPayoutsPayloadParametersRecord","objectCreationParams","PalletContentChannelFundsDestination","AccountId","CouncilBudget","PalletContentNftLimitPeriod","PalletStorageRawEvent","StorageBucketCreated","StorageBucketInvitationAccepted","StorageBucketsUpdatedForBag","DataObjectsUploaded","StorageOperatorMetadataSet","StorageBucketVoucherLimitsSet","PendingDataObjectsAccepted","StorageBucketInvitationCancelled","StorageBucketOperatorInvited","StorageBucketOperatorRemoved","UploadingBlockStatusUpdated","DataObjectPerMegabyteFeeUpdated","StorageBucketsPerBagLimitUpdated","StorageBucketsVoucherMaxLimitsUpdated","DataObjectsMoved","DataObjectsDeleted","StorageBucketStatusUpdated","UpdateBlacklist","DynamicBagDeleted","DynamicBagCreated","VoucherChanged","StorageBucketDeleted","NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated","DistributionBucketFamilyCreated","DistributionBucketFamilyDeleted","DistributionBucketCreated","DistributionBucketStatusUpdated","DistributionBucketDeleted","DistributionBucketsUpdatedForBag","DistributionBucketsPerBagLimitUpdated","DistributionBucketModeUpdated","FamiliesInDynamicBagCreationPolicyUpdated","DistributionBucketOperatorInvited","DistributionBucketInvitationCancelled","DistributionBucketInvitationAccepted","DistributionBucketMetadataSet","DistributionBucketOperatorRemoved","DistributionBucketFamilyMetadataSet","DataObjectStateBloatBondValueUpdated","DataObjectsUpdated","StorageOperatorRemarked","DistributionOperatorRemarked","PalletStorageUploadParametersRecord","bagId","stateBloatBondSourceAccountId","PalletStorageBagIdType","Static","Dynamic","PalletStorageStaticBagId","WorkingGroup","PalletStorageDynamicBagIdType","Channel","PalletStorageDynBagCreationParametersRecord","PalletStorageVoucher","sizeLimit","objectsLimit","sizeUsed","objectsUsed","PalletStorageDynamicBagType","PalletProjectTokenEventsRawEvent","TokenAmountTransferred","TokenAmountTransferredByIssuer","PatronageRateDecreasedTo","PatronageCreditClaimed","RevenueSplitIssued","RevenueSplitFinalized","UserParticipatedInSplit","RevenueSplitLeft","MemberJoinedWhitelist","AccountDustedBy","TokenDeissued","TokenIssued","TokenSaleInitialized","UpcomingTokenSaleUpdated","TokensPurchasedOnSale","TokenSaleFinalized","TransferPolicyChangedToPermissionless","PalletProjectTokenTransferPolicy","Permissionless","Permissioned","PalletProjectTokenTokenIssuanceParameters","initialAllocation","symbol","transferPolicy","patronageRate","revenueSplitRate","PalletProjectTokenTokenAllocation","vestingScheduleParams","PalletProjectTokenVestingScheduleParams","linearVestingDuration","blocksBeforeCliff","cliffAmountPercentage","PalletProjectTokenTransferPolicyParams","PalletProjectTokenWhitelistParams","PalletProjectTokenSingleDataObjectUploadParams","PalletProjectTokenValidated","Existing","NonExisting","PalletProjectTokenValidatedPayment","payment","vestingCleanupCandidate","PalletProjectTokenPaymentWithVesting","vestingSchedule","PalletProjectTokenVestingSource","InitialIssuance","Sale","IssuerTransfer","PalletProjectTokenTokenSale","unitPrice","quantityLeft","fundsCollected","tokensSource","earningsDestination","startBlock","capPerMember","autoFinalize","PalletProposalsEngineRawEvent","ProposalStatusUpdated","ProposalDecisionMade","ProposalExecuted","Voted","ProposalCancelled","ProposerRemarked","PalletProposalsEngineProposalStatusesProposalStatus","Active","PendingExecution","PendingConstitutionality","PalletProposalsEngineProposalStatusesProposalDecision","Canceled","CanceledByRuntime","Vetoed","Expired","Approved","PalletProposalsEngineProposalStatusesApprovedProposalDecision","PalletProposalsEngineProposalStatusesExecutionStatus","Executed","ExecutionFailed","PalletProposalsEngineVoteKind","PalletProposalsDiscussionRawEvent","PostCreated","PostUpdated","ThreadModeChanged","PalletProposalsDiscussionThreadModeBTreeSet","PalletProposalsCodexRawEvent","ProposalCreated","PalletProposalsCodexGeneralProposalParams","memberId","title","description","stakingAccountId","exactExecutionBlock","PalletProposalsCodexProposalDetails","Signal","RuntimeUpgrade","FundingRequest","SetMaxValidatorCount","CreateWorkingGroupLeadOpening","FillWorkingGroupLeadOpening","UpdateWorkingGroupBudget","DecreaseWorkingGroupLeadStake","SlashWorkingGroupLead","SetWorkingGroupLeadReward","TerminateWorkingGroupLead","AmendConstitution","CancelWorkingGroupLeadOpening","SetMembershipPrice","SetCouncilBudgetIncrement","SetCouncilorReward","SetInitialInvitationBalance","SetInitialInvitationCount","SetMembershipLeadInvitationQuota","SetReferralCut","VetoProposal","UpdateGlobalNftLimit","UpdateChannelPayouts","PalletCommonFundingRequestParameters","PalletProposalsCodexCreateOpeningParameters","stakePolicy","rewardPerBlock","group","PalletWorkingGroupStakePolicy","stakeAmount","leavingUnstakingPeriod","PalletProposalsCodexFillOpeningParameters","openingId","applicationId","workingGroup","PalletProposalsCodexTerminateRoleParameters","workerId","slashingAmount","PalletWorkingGroupRawEventInstance1","OpeningAdded","AppliedOnOpening","OpeningFilled","LeaderSet","WorkerRoleAccountUpdated","LeaderUnset","WorkerExited","WorkerStartedLeaving","TerminatedWorker","TerminatedLeader","StakeSlashed","StakeDecreased","StakeIncreased","ApplicationWithdrawn","OpeningCanceled","BudgetSet","WorkerRewardAccountUpdated","WorkerRewardAmountUpdated","StatusTextChanged","BudgetSpending","RewardPaid","NewMissedRewardLevelReached","WorkingGroupBudgetFunded","LeadRemarked","WorkerRemarked","PalletWorkingGroupOpeningType","PalletWorkingGroupApplyOnOpeningParams","roleAccountId","rewardAccountId","stakeParameters","PalletWorkingGroupStakeParameters","stake","PalletWorkingGroupInstance1","PalletWorkingGroupRewardPaymentType","PalletWorkingGroupRawEventInstance2","PalletWorkingGroupInstance2","PalletWorkingGroupRawEventInstance3","PalletWorkingGroupInstance3","PalletWorkingGroupRawEventInstance4","PalletWorkingGroupInstance4","PalletWorkingGroupRawEventInstance5","PalletWorkingGroupInstance5","PalletWorkingGroupRawEventInstance6","PalletWorkingGroupInstance6","PalletWorkingGroupRawEventInstance7","PalletWorkingGroupInstance7","PalletWorkingGroupRawEventInstance8","PalletWorkingGroupInstance8","PalletWorkingGroupRawEventInstance9","PalletWorkingGroupInstance9","FrameSystemPhase","ApplyExtrinsic","Finalization","Initialization","FrameSystemLastRuntimeUpgradeInfo","specVersion","specName","FrameSystemCall","fill_block","ratio","remark","set_heap_pages","pages","set_code","code","set_code_without_checks","set_storage","items","kill_storage","keys_","kill_prefix","prefix","subkeys","remark_with_event","FrameSystemLimitsBlockWeights","baseBlock","maxBlock","perClass","FrameSupportWeightsPerDispatchClassWeightsPerClass","FrameSystemLimitsWeightsPerClass","baseExtrinsic","maxExtrinsic","maxTotal","FrameSystemLimitsBlockLength","max","FrameSupportWeightsPerDispatchClassU32","FrameSupportWeightsRuntimeDbWeight","read","write","SpVersionRuntimeVersion","implName","authoringVersion","implVersion","apis","transactionVersion","stateVersion","FrameSystemError","PalletUtilityCall","batch","calls","as_derivative","batch_all","dispatch_as","asOrigin","force_batch","PalletBabeCall","report_equivocation","equivocationProof","keyOwnerProof","report_equivocation_unsigned","plan_config_change","config","SpConsensusSlotsEquivocationProof","offender","slot","firstHeader","secondHeader","SpRuntimeHeader","parentHash","number","stateRoot","extrinsicsRoot","digest","SpRuntimeBlakeTwo256","SpConsensusBabeAppPublic","SpSessionMembershipProof","session","trieNodes","validatorCount","SpConsensusBabeDigestsNextConfigDescriptor","__Unused0","V1","c","allowedSlots","SpConsensusBabeAllowedSlots","PalletTimestampCall","set","now","PalletAuthorshipCall","set_uncles","newUncles","PalletBalancesCall","transfer","dest","set_balance","newFree","newReserved","force_transfer","source","transfer_keep_alive","transfer_all","keepAlive","force_unreserve","PalletElectionProviderMultiPhaseCall","submit_unsigned","rawSolution","witness","set_minimum_untrusted_score","maybeNextScore","set_emergency_election_result","supports","submit","governance_fallback","maybeMaxVoters","maybeMaxTargets","PalletElectionProviderMultiPhaseRawSolution","solution","score","JoystreamNodeRuntimeNposSolution16","votes1","votes2","votes3","votes4","votes5","votes6","votes7","votes8","votes9","votes10","votes11","votes12","votes13","votes14","votes15","votes16","SpNposElectionsElectionScore","minimalStake","sumStake","sumStakeSquared","PalletElectionProviderMultiPhaseSolutionOrSnapshotSize","voters","targets","SpNposElectionsSupport","PalletStakingPalletCall","bond","controller","payee","bond_extra","maxAdditional","unbond","withdraw_unbonded","numSlashingSpans","validate","prefs","nominate","chill","set_payee","set_controller","set_validator_count","new_","increase_validator_count","additional","scale_validator_count","factor","force_no_eras","force_new_era","set_invulnerables","invulnerables","force_unstake","stash","force_new_era_always","cancel_deferred_slash","era","slashIndices","payout_stakers","validatorStash","rebond","set_history_depth","newHistoryDepth","eraItemsDeleted","reap_stash","kick","set_staking_configs","minNominatorBond","minValidatorBond","maxNominatorCount","maxValidatorCount","chillThreshold","minCommission","chill_other","force_apply_min_commission","PalletStakingRewardDestination","Staked","Stash","Controller","Account","None","PalletStakingPalletConfigOpU128","Noop","Set","Remove","PalletStakingPalletConfigOpU32","PalletStakingPalletConfigOpPercent","PalletStakingPalletConfigOpPerbill","PalletSessionCall","set_keys","proof","purge_keys","JoystreamNodeRuntimeSessionKeys","grandpa","babe","imOnline","authorityDiscovery","SpAuthorityDiscoveryAppPublic","PalletGrandpaCall","note_stalled","delay","bestFinalizedBlockNumber","SpFinalityGrandpaEquivocationProof","setId","equivocation","SpFinalityGrandpaEquivocation","Prevote","Precommit","FinalityGrandpaEquivocationPrevote","roundNumber","identity","first","second","FinalityGrandpaPrevote","targetHash","targetNumber","SpFinalityGrandpaAppSignature","SpCoreEd25519Signature","FinalityGrandpaEquivocationPrecommit","FinalityGrandpaPrecommit","PalletImOnlineCall","heartbeat","signature","PalletImOnlineHeartbeat","blockNumber","networkState","authorityIndex","validatorsLen","SpCoreOffchainOpaqueNetworkState","peerId","externalAddresses","PalletImOnlineSr25519AppSr25519Signature","SpCoreSr25519Signature","PalletBagsListCall","rebag","dislocated","put_in_front_of","lighter","PalletVestingCall","vest","vest_other","vested_transfer","schedule","force_vested_transfer","merge_schedules","schedule1Index","schedule2Index","PalletVestingVestingInfo","locked","perBlock","startingBlock","PalletMultisigCall","as_multi_threshold_1","otherSignatories","as_multi","threshold","maybeTimepoint","storeCall","maxWeight","approve_as_multi","cancel_as_multi","PalletCouncilCall","announce_candidacy","membershipId","release_candidacy_stake","withdraw_candidacy","set_candidacy_note","note","set_budget","balance","plan_budget_refill","nextRefill","set_budget_increment","budgetIncrement","set_councilor_reward","councilorReward","funding_request","fundingRequests","fund_council_budget","rationale","councilor_remark","councilorId","msg","candidate_remark","candidateId","PalletReferendumCall","vote","reveal_vote","salt","voteOptionId","release_vote_stake","opt_out_of_voting","PalletMembershipCall","buy_membership","params","update_profile","update_accounts","newRootAccount","newControllerAccount","update_profile_verification","targetMemberId","isVerified","set_referral_cut","percentValue","transfer_invites","sourceMemberId","numberOfInvites","invite_member","gift_membership","set_membership_price","newPrice","set_leader_invitation_quota","invitationQuota","set_initial_invitation_balance","newInitialBalance","set_initial_invitation_count","newInvitationCount","add_staking_account_candidate","remove_staking_account","confirm_staking_account","member_remark","create_member","PalletForumCall","update_category_membership_of_moderator","moderatorId","newValue","create_category","parentCategoryId","update_category_archival_status","actor","newArchivalStatus","update_category_title","update_category_description","delete_category","create_thread","forumUserId","text","edit_thread_metadata","newMetadata","delete_thread","hide","move_thread_to_category","newCategoryId","moderate_thread","add_post","editable","edit_post_text","newText","moderate_post","delete_posts","posts","set_stickied_threads","stickiedIds","PalletConstitutionCall","amend_constitution","constitutionText","PalletBountyCall","create_bounty","fund_bounty","funder","bountyId","terminate_bounty","switch_oracle","newOracle","withdraw_funding","announce_work_entry","workDescription","submit_work","entryId","workData","end_working_period","submit_oracle_judgment","judgment","withdraw_entrant_stake","withdraw_oracle_reward","contributor_remark","contributor","oracle_remark","entrant_remark","entrantId","creator_remark","PalletContentCall","create_curator_group","isActive","permissionsByLevel","update_curator_group_permissions","curatorGroupId","set_curator_group_status","add_curator_to_group","curatorId","permissions","remove_curator_from_group","create_channel","channelOwner","update_channel","channelId","update_channel_privilege_level","newPrivilegeLevel","set_channel_paused_features_as_moderator","newPausedFeatures","delete_channel","channelBagWitness","numObjectsToDelete","delete_channel_assets_as_moderator","delete_channel_as_moderator","set_channel_visibility_as_moderator","isHidden","create_video","update_video","videoId","delete_video","delete_video_assets_as_moderator","delete_video_as_moderator","set_video_visibility_as_moderator","update_channel_payouts","uploaderAccount","claim_channel_reward","item","withdraw_from_channel_balance","update_channel_state_bloat_bond","newChannelStateBloatBond","update_video_state_bloat_bond","newVideoStateBloatBond","claim_and_withdraw_channel_reward","issue_nft","destroy_nft","start_open_auction","ownerId","auctionParams","start_english_auction","cancel_english_auction","cancel_open_auction","cancel_offer","cancel_buy_now","update_buy_now_price","make_open_auction_bid","participantId","bidAmount","make_english_auction_bid","cancel_open_auction_bid","settle_english_auction","pick_open_auction_winner","winnerId","commit","offer_nft","sling_nft_back","accept_incoming_offer","witnessPrice","sell_nft","buy_nft","toggle_nft_limits","enabled","channel_owner_remark","channel_agent_remark","nft_owner_remark","initialize_channel_transfer","cancel_channel_transfer","accept_channel_transfer","commitmentParams","update_global_nft_limit","nftLimitPeriod","update_channel_nft_limit","issue_creator_token","init_creator_token_sale","update_upcoming_creator_token_sale","newStartBlock","newDuration","creator_token_issuer_transfer","outputs","make_creator_token_permissionless","reduce_creator_token_patronage_rate_to","targetRate","claim_creator_token_patronage_credit","issue_revenue_split","start","finalize_revenue_split","finalize_creator_token_sale","deissue_creator_token","PalletContentChannelBagWitness","storageBucketsNum","distributionBucketsNum","PalletCommonMerkleTreeProofElementRecord","side","PalletCommonMerkleTreeSide","PalletContentPullPaymentElement","cumulativeRewardEarned","reason","PalletContentInitTransferParameters","PalletProjectTokenTokenSaleParams","upperBoundQuantity","PalletProjectTokenTransfersPaymentWithVesting","PalletStorageCall","delete_storage_bucket","storageBucketId","update_uploading_blocked_status","newStatus","update_data_size_fee","newDataSizeFee","update_storage_buckets_per_bag_limit","newLimit","update_storage_buckets_voucher_max_limits","newObjectsSize","newObjectsNumber","update_data_object_state_bloat_bond","stateBloatBond","update_number_of_storage_buckets_in_dynamic_bag_creation_policy","dynamicBagType","numberOfStorageBuckets","update_blacklist","removeHashes","addHashes","create_storage_bucket","inviteWorker","acceptingNewBags","update_storage_buckets_for_bag","addBuckets","removeBuckets","cancel_storage_bucket_operator_invite","invite_storage_bucket_operator","operatorId","remove_storage_bucket_operator","update_storage_bucket_status","set_storage_bucket_voucher_limits","newObjectsSizeLimit","newObjectsNumberLimit","accept_storage_bucket_invitation","transactorAccountId","set_storage_operator_metadata","accept_pending_data_objects","create_distribution_bucket_family","delete_distribution_bucket_family","familyId","create_distribution_bucket","update_distribution_bucket_status","bucketId","delete_distribution_bucket","update_distribution_buckets_for_bag","addBucketsIndices","removeBucketsIndices","update_distribution_buckets_per_bag_limit","update_distribution_bucket_mode","distributing","update_families_in_dynamic_bag_creation_policy","families","invite_distribution_bucket_operator","operatorWorkerId","cancel_distribution_bucket_operator_invite","remove_distribution_bucket_operator","set_distribution_bucket_family_metadata","accept_distribution_bucket_invitation","set_distribution_operator_metadata","storage_operator_remark","distribution_operator_remark","distributionBucketId","PalletProjectTokenCall","srcMemberId","tokenId","burn","dust_account","join_whitelist","purchase_tokens_on_sale","participate_in_split","exit_revenue_split","PalletProjectTokenTransfersPayment","PalletProjectTokenPayment","PalletProjectTokenMerkleProof","PalletProjectTokenMerkleSide","PalletProposalsEngineCall","voterId","proposalId","cancel_proposal","proposerId","veto_proposal","proposer_remark","PalletProposalsDiscussionCall","postAuthorId","delete_post","deleterId","update_post","change_thread_mode","mode","PalletProposalsCodexCall","create_proposal","generalProposalParameters","proposalDetails","PalletWorkingGroupCall","add_opening","openingType","apply_on_opening","p","fill_opening","successfulApplicationIds","update_role_account","newRoleAccountId","leave_role","terminate_role","penalty","slash_stake","decrease_stake","stakeBalanceDelta","increase_stake","withdraw_application","cancel_opening","newBudget","update_reward_account","newRewardAccountId","update_reward_amount","set_status_text","statusText","spend_from_budget","accountId","fund_working_group_budget","lead_remark","worker_remark","JoystreamNodeRuntimeOriginCaller","system","Void","FrameSupportDispatchRawOrigin","Root","Signed","SpCoreVoid","PalletUtilityError","SpConsensusBabeDigestsPreDigest","Primary","SecondaryPlain","SecondaryVRF","SpConsensusBabeDigestsPrimaryPreDigest","vrfOutput","vrfProof","SpConsensusBabeDigestsSecondaryPlainPreDigest","SpConsensusBabeDigestsSecondaryVRFPreDigest","SpConsensusBabeBabeEpochConfiguration","PalletBabeError","PalletAuthorshipUncleEntryItem","InclusionHeight","Uncle","PalletAuthorshipError","PalletBalancesBalanceLock","reasons","PalletBalancesReasons","PalletBalancesReserveData","PalletBalancesReleases","PalletBalancesError","PalletTransactionPaymentReleases","PalletElectionProviderMultiPhasePhase","Off","Unsigned","Emergency","PalletElectionProviderMultiPhaseReadySolution","compute","PalletElectionProviderMultiPhaseRoundSnapshot","PalletElectionProviderMultiPhaseSignedSignedSubmission","deposit","callFee","PalletElectionProviderMultiPhaseError","PalletStakingStakingLedger","active","unlocking","claimedRewards","PalletStakingUnlockChunk","PalletStakingNominations","submittedIn","suppressed","PalletStakingActiveEraInfo","PalletStakingEraRewardPoints","individual","PalletStakingForcing","PalletStakingUnappliedSlash","validator","reporters","payout","PalletStakingSlashingSlashingSpans","spanIndex","lastStart","lastNonzeroSlash","prior","PalletStakingSlashingSpanRecord","slashed","paidOut","PalletStakingReleases","PalletStakingPalletError","SpCoreCryptoKeyTypeId","PalletSessionError","PalletGrandpaStoredState","Live","PendingPause","scheduledAt","PendingResume","PalletGrandpaStoredPendingChange","nextAuthorities","forced","PalletGrandpaError","PalletImOnlineBoundedOpaqueNetworkState","PalletImOnlineError","SpStakingOffenceOffenceDetails","PalletBagsListListNode","prev","next","bagUpper","PalletBagsListListBag","head","tail","PalletBagsListError","List","PalletBagsListListListError","PalletVestingReleases","PalletVestingError","PalletMultisigMultisig","when","depositor","approvals","PalletMultisigError","PalletCouncilCouncilStageUpdate","stage","changedAt","PalletCouncilCouncilStage","Announcing","Election","PalletCouncilCouncilStageAnnouncing","candidatesCount","endsAt","PalletCouncilCouncilStageElection","PalletCouncilCouncilStageIdle","PalletCouncilCouncilMember","lastPaymentBlock","unpaidReward","PalletCouncilCandidate","cycleId","noteHash","PalletCouncilError","PalletReferendumReferendumStage","Inactive","Voting","Revealing","PalletReferendumReferendumStageVoting","started","winningTargetCount","currentCycleId","PalletReferendumReferendumStageRevealing","intermediateWinners","PalletReferendumCastVote","voteFor","PalletReferendumError","PalletMembershipMembershipObject","handleHash","verified","invites","PalletMembershipStakingAccountMemberBinding","confirmed","PalletMembershipError","PalletForumCategory","titleHash","descriptionHash","archived","numDirectSubcategories","numDirectThreads","numDirectModerators","stickyThreadIds","PalletForumThread","authorId","cleanupPayOff","numberOfEditablePosts","PalletForumPost","textHash","lastEdited","PalletForumError","PalletConstitutionConstitutionInfo","PalletBountyBountyRecord","creationParams","totalFunding","milestone","activeWorkEntryCount","hasUnpaidOracleReward","PalletBountyBountyParametersBoundedBTreeSet","PalletBountyAssuranceContractTypeBoundedBTreeSet","PalletBountyBountyMilestone","Created","createdAt","hasContributions","Terminated","JudgmentSubmitted","successfulBounty","PalletBountyContribution","funderStateBloatBondAmount","PalletBountyEntryRecord","submittedAt","workSubmitted","PalletBountyError","PalletContentVideoRecord","inChannel","nftStatus","videoStateBloatBond","PalletContentNftTypesOwnedNft","transactionalStatus","creatorRoyalty","openAuctionsNonce","PalletContentNftTypesTransactionalStatusRecord","PalletContentNftTypesEnglishAuctionRecord","end","topBid","PalletContentNftTypesEnglishAuctionBid","bidderId","PalletContentNftTypesOpenAuctionRecord","auctionId","PalletContentNftTypesNftOwner","ChannelOwner","PalletContentPermissionsCuratorGroupCuratorGroupRecord","curators","PalletContentNftTypesOpenAuctionBidRecord","madeAtBlock","PalletContentErrorsError","PalletStorageBagRecord","storedBy","distributedBy","objectsTotalSize","objectsNumber","PalletStorageStorageBucketRecord","operatorStatus","voucher","assignedBags","PalletStorageStorageBucketOperatorStatus","Missing","InvitedStorageWorker","StorageWorker","PalletStorageDynamicBagCreationPolicy","PalletStorageDataObject","accepted","PalletStorageDistributionBucketFamilyRecord","nextDistributionBucketIndex","PalletStorageDistributionBucketRecord","pendingInvitations","operators","PalletStorageError","PalletProjectTokenAccountData","vestingSchedules","splitStakingStatus","bloatBond","nextVestingTransferId","lastSaleTotalPurchasedAmount","PalletProjectTokenStakingStatus","splitId","PalletProjectTokenVestingSchedule","linearVestingStartBlock","cliffAmount","postCliffTotalAmount","burnedAmount","PalletProjectTokenTokenData","totalSupply","tokensIssued","nextSaleId","sale","patronageInfo","accountsNumber","revenueSplit","nextRevenueSplitId","PalletProjectTokenRevenueSplitState","PalletProjectTokenRevenueSplitInfo","allocation","timeline","dividendsClaimed","PalletProjectTokenTimeline","PalletProjectTokenPatronageData","rate","unclaimedPatronageTallyAmount","lastUnclaimedPatronageTallyBlock","PalletProjectTokenErrorsError","PalletProposalsEngineProposal","parameters","activatedAt","status","votingResults","nrOfCouncilConfirmations","PalletProposalsEngineProposalParameters","votingPeriod","gracePeriod","approvalQuorumPercentage","approvalThresholdPercentage","slashingQuorumPercentage","slashingThresholdPercentage","requiredStake","constitutionality","PalletProposalsEngineVotingResults","abstentions","rejections","slashes","PalletProposalsEngineError","PalletProposalsDiscussionDiscussionThread","PalletProposalsDiscussionThreadModeBoundedBTreeSet","PalletProposalsDiscussionDiscussionPost","PalletProposalsDiscussionError","PalletProposalsCodexError","PalletWorkingGroupOpening","created","creationStake","PalletWorkingGroupJobApplication","PalletWorkingGroupGroupWorker","startedLeavingAt","jobUnstakingPeriod","missedReward","PalletWorkingGroupErrorsError","SpRuntimeMultiSignature","Ed25519","Sr25519","Ecdsa","SpCoreEcdsaSignature","FrameSystemExtensionsCheckNonZeroSender","FrameSystemExtensionsCheckSpecVersion","FrameSystemExtensionsCheckTxVersion","FrameSystemExtensionsCheckGenesis","FrameSystemExtensionsCheckNonce","FrameSystemExtensionsCheckWeight","PalletTransactionPaymentChargeTransactionPayment","JoystreamNodeRuntimeRuntime","registry","createType","typeName","register","_0n","BigInt","_1n","_2n","_3n","_8n","POW_2_256","CURVE","a","b","P","n","h","Gx","Gy","beta","weistrass","x","x2","mod","x3","USE_ENDOMORPHISM","JacobianPoint","constructor","y","z","this","static","Point","points","toInv","nums","scratch","Array","length","inverted","invert","reduce","acc","num","i","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","equals","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","A","B","C","D","E","F","X3","Y3","Z3","add","H","r","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","normalizeScalar","BASE","P0","d","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","base","window","push","wNAF","affinePoint","_WINDOW_SIZE","Error","precomputes","pointPrecomputes","get","normalizeZ","f","windowSize","mask","maxNumber","shiftBy","offset","wbits","Number","pr","cached","Math","abs","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","bytes","isShort","bytesToNumber","subarray","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","hex","ensureBytes","len","header","fromCompressedHex","fromUncompressedHex","key","isSafeInteger","hexToNumber","isUint8a","isWithinCurveOrder","normalizePrivateKey","msgHash","recovery","hash","delta","truncateHash","s","Signature","fromDER","fromCompact","normalizeSignature","R","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","hexToBytes","toHex","toHexX","slice","toRawX","left","aP","bQ","sum","undefined","sliceDER","parseInt","parseDERInt","bytesToHex","res","arr","str","sBytes","rBytesLeft","parseDERSignature","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","Uint8Array","hexes","v","toString","padStart","uint8a","array","j","hexByte","byte","isNaN","power","modulo","u","q","m","divNearest","POW_2_128","k","a1","b1","a2","c1","c2","self","crypto","knownGenesis","acala","astar","basilisk","bifrost","centrifuge","composable","edgeware","equilibrium","genshiro","hydradx","karura","kulupu","kusama","parallel","picasso","polkadex","polkadot","polymesh","rococo","sora","stafi","statemine","statemint","subsocial","westend","xxnetwork","knownIcon","westmint","knownLedger","knownTestnet","jupiter","subspace_testnet","AbstractArray","super","encodedLength","toU8a","isEmpty","eq","inspect","inner","inspectInner","outer","toArray","toHuman","isExtended","toJSON","join","isBare","encoded","toU8aInner","concat","filter","callbackfn","thisArg","includes","check","some","AbstractBase","initialU8aLength","isLe","toRawType","unwrap","MUL_P","FORMATTERS","AbstractInt","bitLength","isSigned","isNegative","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","decodeAbstractInt","isUnsigned","isNeg","maxBits","isZero","isMax","toBigInt","toBn","isExpanded","rawType","decimals","chainDecimals","withSi","withUnit","chainTokens","divisor","find","type","mul","div","toNumber","toFixed","toPercentage","onlyHex","createClassUnsafe","noopSetDefinition","Compact","Type","definition","setDefinition","raw","decodedLength","bn","decodeCompact","getClassName","DoNotConstruct","getEntryType","def","checkIdx","values","keys","createFromU8a","createFromValue","decodeFromJSON","toLowerCase","keyLower","indexOf","message","Enum","Types","isBasic","isIndexed","_def","isArray","defValues","every","isRustEnum","entries","extractDef","decoded","u8a","decodeEnum","asKeys","isKeys","_","isNone","isNull","defIndexes","defKeys","entry","_toRawStruct","out","Int","Null","Option","decodeOption","isSome","wrapped","unwrapOr","defaultValue","unwrapOrDefault","Result","Ok","Err","asErr","isErr","asError","asOk","isOk","isError","Tuple","Classes","t","decodeTuple","T","UInt","l","decodeVec","startAt","count","Vec","decodeFrom","decodeVecLength","_other","VecFixed","BTreeMap","keyType","valType","BTreeSet","rawValue","ValClass","output","decodeSetFromU8a","forEach","val","decodeSetFromSet","decodeSet","size","strings","json","BitVec","isMsb","ceil","decodeBitVecU8a","decodeBitVec","split","reverse","bitVec","Bytes","decodeBytesU8a","clength","HashMap","decodeMapFromMap","KeyClass","Map","isComplex","JSON","parse","CodecMap","types","decodeMapFromU8a","decodeMap","OptionBool","decodeU8a","isFalse","valueOf","isTrue","Range","rangeName","RangeInclusive","setOverride","U8aFixed","byteLength","decodeU8aFixed","WrapperKeepOpaque","opaqueName","instance","decodeRaw","isDecoded","WrapperOpaque","bool","Boolean","Json","decodeJson","getT","Raw","isAscii","isUtf8","begin","toUtf8","encodeSet","setValues","ior","decodeSetNumber","_value","and","computed","decodeSetArray","CodecSet","valueEncoded","sort","_set","Struct","jsonMap","typeMap","jsonObj","typeofArray","typeofMap","jsonKey","assign","e","decodeStructFromObject","getAtIndex","Text","String","decodeText","override","i128","__IntType","i16","i256","i32","i64","i8","u128","__UIntType","u16","u256","u32","u64","u8","usize","compareArray","compareMapArray","notEntry","hasMismatch","compareMap","compareSetArray","has","compareSet","formatFailure","decodeU8aStruct","decodeU8aVec","mapToTypeMap","input","BOUNDED","ALLOWED_BOXES","BOX_PRECEDING","mappings","alias","findClosing","substring","removeExtensions","from1","from2","from3","from4","from5","from6","lastIndex","replace","removeTraits","replacer","replaceTagWith","removePairOf","removeWrap","box","flattenSingleTuple","trim","depth","src","withChecks","RegExp","matcher","isSized","tag","parts","pop","sanitizeMap","sanitize","startValue","memoized","isArrayLike","arg","isCodec","isEnum","isNumberLike","sortAsc","cmp","sortRes","minLen","min","sortArray","sortSet","sortMap","keyA","keyB","typeToConstructor","typesToMap","hasEq","o","getTypeDefType","lookupName","getSubDefArray","sub","getSubType","getSubDef","getTypeClassMap","subs","getTypeClassArray","createInt","Clazz","displayName","with","createHashMap","valueType","createWithSub","infoMapping","previous","getOrUnknown","getTypeClass","lookup","getTypeDef","constructTypeClass","typeDef","info","__fallbackType","fallbackType","getUnsafe","isLookupType","checkInstance","initType","blockHash","isOptional","isPedantic","checkPedantic","createdAtHash","createTypeUnsafe","options","firstError","TypeDefInfo","stringIdentity","INFO_WRAP","encodeWithParams","transform","paramsNotation","encodeTypeDef","encodeSubTypes","asEnum","extra","names","encoders","lookupIndex","createLookupType","all","_bitLength","encodeType","withLookup","withTypeString","KNOWN_INTERNALS","getTypeString","typeOrObj","stringify","_decodeTuple","subType","_decodeAnyInt","clazz","strLength","hasWrapper","nestedExtraction","vecType","parsed","details","_decodeEnum","_fallback","startsWith","_decodeSet","NAME_LENGTH","wrappedExtraction","extractSubType","_type","nested","typeSplit","XCM_MAPPINGS","mapXcmTypes","version","lazyVariants","getName","variants","getSiType","asVariant","DEFAULT_FIRST_CALL_IDX","sortDecimalStrings","valueToString","getFieldArgs","fields","args","clearRecord","record","getVariantStringIdx","TypeRegistry","Metadata","PortableRegistry","allKnown","_this$chainProperties","tokenDecimals","allDecimals","chainSS58","_this$chainProperties2","ss58Format","_this$chainProperties3","tokenSymbol","allTokens","unit","firstCallIndex","test","lookupId","knownTypes","unknownTypes","signedExtensions","clearCache","createClass","findMetaCall","callIndex","section","method","findMetaError","errorIndex","findMetaEvent","eventIndex","withUnknown","knownTypeDef","BaseType","warn","getChainProperties","getDefinition","getModuleInstances","moduleName","_this$knownTypes","_this$knownTypes$type","_this$knownTypes$type2","_this$knownTypes$type3","_this$knownTypes$type4","typesBundle","spec","instances","getOrThrow","getSignedExtensionExtra","getSignedExtensionTypes","hasClass","hasDef","hasType","arg1","arg2","_registerObject","obj","setChainProperties","properties","setHasher","hasher","setKnownTypes","setLookup","setMetadata","userExtensions","asLatest","pallets","filtered","sectionIndex","variant","injectExtrinsics","errors","sectionName","docs","injectErrors","events","injectEvents","defSection","defMethod","setSignedExtensions","extrinsic","gt","identifier","original","constants","sS58Prefix","ss58Prefix","extractProperties","unknown","decodeAccountId","GenericEthereumAccountId","ACCOUNT_ID_PREFIX","GenericEthereumLookupSource","decodeString","decodeAddressOrIndex","rawLength","_rawLength","VERSIONS","newFromValue","GenericExtrinsic","ExtrinsicBase","signKeys","getter","argsDef","signer","tip","is","decodeExtrinsic","addSignature","sign","signFake","decodeExtrinsicEra","GenericExtrinsicEra","mortal","immortal","MortalEra","ImmortalEra","period","decodeMortalU8a","current","calPeriod","pow","log2","quantizeFactor","quantizedPhase","decodeMortalObject","decodeMortalEra","binary","getTrailingZeros","birth","death","isImmortalEra","asImmortalEra","asMortalEra","isMortalEra","GenericExtrinsicPayload","decodeExtrinsicPayload","genesisHash","signerPair","GenericExtrinsicPayloadUnknown","GenericExtrinsicUnknown","address","runtimeVersion","GenericSignerPayload","extensionTypes","toPayload","toRaw","BIT_SIGNED","BIT_UNSIGNED","EMPTY_U8A","DEFAULT_VERSION","IMMORTAL_ERA","UNMASK_VERSION","emptyCheck","allExtensions","fallbackExtensions","findUnknownExtensions","extensions","expandExtensionTypes","LimitParathreadCommits","OnlyStakingAndClaims","PrevalidateAttests","RestrictFunctionality","TransactionCallFilter","ValidateDoubleVoteReports","shell","DisallowSigned","ChargeAssetTxPayment","assetId","CheckMortality","substrate","ChargeTransactionPayment","CheckBlockGasLimit","CheckEra","CheckGenesis","CheckNonZeroSender","CheckNonce","CheckSpecVersion","CheckTxVersion","CheckVersion","CheckWeight","LockStakingStatus","ValidateEquivocationReport","GenericExtrinsicV4","GenericExtrinsicPayloadV4","withType","FAKE_SIGNATURE","fill","toAddress","GenericExtrinsicSignatureV4","signTypes","decodeExtrinsicSignature","multiSignature","_injectSignature","createPayload","addressRaw","GenericAccountId","MAX_1BYTE","MAX_2BYTE","shln","MAX_4BYTE","decodeAccountIndex","GenericAccountIndex","lte","lt","calcLength","GenericBlock","extrinsics","contentHash","getArgsDef","GenericCallIndex","GenericCall","_meta","decodeCallViaU8a","decodeCallViaObject","decodeCall","argsEntries","_call","_call2","createValue","asArray","GenericChainProperties","decodeValue","decode","CID_AURA","CID_BABE","CID_GRPA","CID_POW","GenericConsensusEngineId","isAura","isBabe","isGrandpa","isPow","extractAuthor","sessionValidators","slotNumber","getAuraAuthor","getBabeAuthor","getBytesAsAuthor","GenericEventData","sanitizeField","GenericEvent","DataType","decodeEvent","GenericLookupSource","Id","Address20","Index","GenericMultiAddress","Address32","decodeMultiAny","decodeVoteBool","AYE_BITS","GenericVote","decodeVoteU8a","aye","conviction","decodeVoteType","decodeVote","isAye","isNay","typesAlias","Approval","ApprovalKey","Balance","DestroyWitness","EquivocationProof","balances","Status","beefy","AuthorityId","contracts","StorageKey","electionProviderMultiPhase","Phase","ethereum","Block","Header","Receipt","Transaction","TransactionStatus","evm","Log","Vicinity","Equivocation","Judgement","inclusion","ValidatorIndex","paraDisputes","paraInclusion","paraScheduler","paraShared","parachains","parasDisputes","parasInclusion","parasScheduler","parasShared","proposeParachain","Proposal","proxy","Announcement","scheduler","shared","society","Vote","staking","treasury","xcm","AssetId","xcmPallet","getAliasTypes","_knownTypes$typesAlia","rpc","AssetApprovalKey","delegate","AssetApproval","AssetBalance","isFrozen","isSufficient","AssetDestroyWitness","accounts","AssetDetails","issuer","admin","freezer","supply","minBalance","AssetMetadata","TAssetBalance","TAssetDepositBalance","BlockAttestations","receipt","valid","invalid","IncludedBlocks","actualNumber","randomSeed","activeParachains","paraBlocks","MoreAttestations","RawAuraPreDigest","hasKey","hasSessionKeys","removeExtrinsic","insertKey","rotateKeys","pendingExtrinsics","submitExtrinsic","submitAndWatchExtrinsic","pubsub","ExtrinsicOrHash","Hash","Extrinsic","ExtrinsicStatus","Future","Ready","Broadcast","InBlock","Retracted","FinalityTimeout","Finalized","Usurped","Dropped","Invalid","UncleEntryItem","epochAuthorship","AllowedSlots","BabeAuthorityWeight","BabeEpochConfiguration","BabeBlockWeight","BabeEquivocationProof","BabeWeight","MaybeRandomness","MaybeVrf","EpochAuthorship","primary","secondary","secondary_vrf","NextConfigDescriptor","V0","NextConfigDescriptorV1","Randomness","RawBabePreDigest","Phantom","RawBabePreDigestPrimary","RawBabePreDigestSecondaryPlain","RawBabePreDigestSecondaryVRF","RawBabePreDigestTo159","Secondary","RawBabePreDigestPrimaryTo159","RawBabePreDigestSecondaryTo159","RawBabePreDigestCompat","Zero","One","Two","Three","SlotNumber","VrfData","VrfOutput","VrfProof","AccountData","BalanceLockTo212","until","BalanceLock","BalanceStatus","Reasons","ReserveData","ReserveIdentifier","VestingSchedule","WithdrawReasons","TransactionPayment","Reserve","Fee","Tip","subscribeJustifications","getFinalizedHead","BeefyCommitment","validatorSetId","BeefyId","BeefySignedCommitment","signatures","BeefyNextAuthoritySet","root","BeefyPayload","MmrRootHash","ValidatorSetId","BridgedBlockHash","BridgedBlockNumber","BridgedHeader","BridgeMessageId","CallOrigin","SourceRoot","TargetAccount","SourceAccount","ChainId","DeliveredMessages","dispatchResults","DispatchFeePayment","InboundLaneData","relayers","lastConfirmedNonce","InboundRelayer","InitializationData","authorityList","isHalted","LaneId","MessageData","fee","MessagesDeliveryProofOf","bridgedHeaderHash","storageProof","lane","MessageKey","laneId","MessageNonce","MessagesProofOf","noncesStart","noncesEnd","OperatingMode","OutboundLaneData","oldestUnprunedNonce","latestReceivedNonce","latestGeneratedNonce","OutboundMessageFee","OutboundPayload","origin","dispatchFeePayment","Parameter","RelayerId","UnrewardedRelayer","relayer","messages","UnrewardedRelayersState","unrewardedRelayer_Entries","messagesInOldestEntry","totalMessages","getHeader","isHistoric","getBlock","getBlockHash","subscribeNewHeads","subscribeFinalizedHeads","subscribeAllHeads","BlockHash","getKeys","getKeysPaged","getStorage","getStorageEntries","getStorageHash","getStorageSize","PrefixedStorageKey","StatementKind","CollectiveOrigin","Members","MemberCount","ProposalIndex","VotesTo230","ayes","nays","Votes","RawVRFOutput","AliveContractInfo","trieId","storageSize","pairCount","codeHash","rentAllowance","rentPaid","deductBlock","lastWrite","_reserved","CodeHash","CodeSource","Upload","CodeUploadRequest","storageDepositLimit","CodeUploadResult","CodeUploadResultValue","ContractCallRequest","gasLimit","inputData","ContractExecResultSuccessTo255","ContractExecResultTo255","Success","ContractExecResultSuccessTo260","flags","gasConsumed","ContractExecResultTo260","ContractExecResultOk","ContractExecResultResult","ContractExecResultTo267","debugMessage","ContractExecResult","gasRequired","storageDeposit","ContractInfo","Alive","Tombstone","ContractCallFlags","ForwardInput","CloneInput","TailCall","AllowReentry","ContractReturnFlags","Revert","ContractStorageKey","DeletedContract","ExecReturnValue","Gas","HostFnWeightsTo264","caller","gasLeft","valueTransferred","minimumBalance","tombstoneDeposit","weightToFee","gas","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiate","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","HostFnWeights","terminatePerCodeByte","restoreToPerCallerCodeByte","restoreToPerTombstoneCodeByte","callPerCodeByte","instantiatePerCodeByte","instantiatePerSaltByte","rentParams","InstantiateRequestV1","InstantiateRequestV2","InstantiateRequest","ContractInstantiateResultTo267","ContractInstantiateResultTo299","ContractInstantiateResult","InstantiateReturnValueTo267","rentProjection","InstantiateReturnValueOk","InstantiateReturnValue","InstructionWeights","i64const","i64load","i64store","select","rIf","br","brIf","brIable","brIablePerEntry","callIndirect","callIndirectPerParam","localGet","localSet","local_tee","globalGet","globalSet","memoryCurrent","memoryGrow","i64clz","i64ctz","i64popcnt","i64eqz","i64extendsi32","i64extendui32","i32wrapi64","i64eq","i64ne","i64lts","i64ltu","i64gts","i64gtu","i64les","i64leu","i64ges","i64geu","i64add","i64sub","i64mul","i64divs","i64divu","i64rems","i64remu","i64and","i64or","i64xor","i64shl","i64shrs","i64shru","i64rotl","i64rotr","LimitsTo264","eventTopics","stackHeight","globals","memoryPages","tableSize","brTableSize","subjectLen","codeSize","Limits","PrefabWasmModule","scheduleVersion","initial","maximum","refcount","originalCodeLen","RentProjection","EvictionAt","NoEviction","ScheduleTo212","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","ScheduleTo264","limits","instructionWeights","hostFnWeights","Schedule","SeedOf","StorageDeposit","Refund","Charge","TombstoneContractInfo","TrieId","isHstoric","uploadCode","endpoint","ContractMetadataV0","ContractProjectInfo","contract","ContractCryptoHasher","ContractDiscriminant","ContractLayoutArray","cellsPerElem","layout","ContractLayoutCell","ty","ContractLayoutEnum","dispatchKey","ContractLayoutHash","strategy","ContractLayoutHashingStrategy","postfix","ContractLayoutKey","ContractLayoutStruct","ContractLayoutStructField","ContractStorageLayout","Cell","ContractConstructorSpecV0","selector","ContractConstructorSpecV1","ContractConstructorSpecV2","label","ContractConstructorSpecV3","payable","ContractContractSpecV0","constructors","ContractContractSpecV1","ContractContractSpecV2","ContractContractSpecV3","ContractDisplayName","ContractEventParamSpecV0","indexed","ContractEventParamSpecV2","ContractEventSpecV0","ContractEventSpecV1","ContractEventSpecV2","ContractMessageParamSpecV0","ContractMessageParamSpecV2","ContractMessageSpecV0","mutates","returnType","ContractMessageSpecV1","ContractMessageSpecV2","ContractSelector","ContractTypeSpec","ContractConstructorSpecLatest","ContractEventSpecLatest","ContractEventParamSpecLatest","ContractMessageParamSpecLatest","ContractMessageSpecLatest","ContractMetadataLatest","ContractMetadataV1","ContractMetadataV2","ContractMetadataV3","ContractMetadata","V2","V3","ContractProjectV0","metadataVersion","ContractProject","ContractProjectContract","authors","repository","homepage","license","ContractProjectSource","wasmHash","language","compiler","wasm","FundIndex","LastContribution","Never","PreEnding","Ending","FundInfo","verifier","raised","cap","lastContribution","firstPeriod","lastPeriod","trieIndex","TrieIndex","ConfigData","maxIndividual","MessageId","OverweightIndex","PageCounter","PageIndexData","beginUsed","endUsed","overweightCount","AccountVote","Standard","Split","AccountVoteSplit","nay","AccountVoteStandard","Conviction","Delegations","votes","capital","PreimageStatus","Available","PreimageStatusAvailable","provider","since","expiry","PriorLock","PropIndex","ProxyState","ReferendumIndex","ReferendumInfoTo239","proposalHash","ReferendumInfo","Ongoing","Finished","ReferendumInfoFinished","approved","ReferendumStatus","tally","Tally","turnout","Direct","Delegating","VotingDirect","delegations","VotingDirectVote","VotingDelegating","getBlockStats","BlockStats","witnessLen","witnessCompactLen","blockLen","blockNumExtrinsics","ApprovalFlag","DefunctVoter","voteCount","candidateCount","Renouncing","RunnerUp","Candidate","SetIndex","VoteIndex","VoterInfo","lastActive","lastWin","pot","VoteThreshold","createBlock","finalizeBlock","CreatedBlock","aux","ImportedAux","headerOnly","clearJustificationRequests","needsJustification","badJustification","needsFinalityProof","isNewBest","BlockV0","transactions","ommers","LegacyTransaction","gasPrice","action","TransactionV0","BlockV1","EIP2930Transaction","chainId","accessList","oddYParity","TransactionV1","Legacy","EIP2930","BlockV2","EIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","TransactionV2","EIP1559","EthereumAccountId","EthereumAddress","EthereumLookupSource","EthereumSignature","EthAccessListItem","slots","EthAccessList","EthAccount","storageHash","accountProof","EthAddress","EthBlock","EthHeader","ommersHash","beneficiary","transactionsRoot","receiptsRoot","logsBloom","difficulty","gasUsed","timestamp","extraData","mixMash","EthRichBlock","blockSize","sha3Uncles","author","miner","totalDifficulty","sealFields","uncles","EthBloom","EthCallRequest","EthFilter","fromBlock","toBlock","EthFilterAddress","Single","Multiple","EthFilterChanges","Logs","Hashes","Empty","EthFilterTopic","EthFilterTopicEntry","EthFilterTopicInner","EthRichHeader","EthLog","transactionHash","transactionIndex","logIndex","transactionLogIndex","removed","EthReceipt","cumulativeGasUsed","contractAddress","statusCode","EthStorageProof","EthSubKind","EthSubParams","EthSubResult","TransactionHash","SyncState","EthSyncInfo","currentBlock","highestBlock","warpChunksAmount","warpChunksProcessed","EthSyncStatus","Info","EthTransaction","EthTransactionSignature","EthTransactionAction","Call","Create","EthTransactionCondition","block","time","EthTransactionRequest","EthTransactionStatus","EthWork","powHash","seedHash","listening","aliasSection","peerCount","clientVersion","sha3","coinbase","estimateGas","getBalance","getBlockByHash","getBlockByNumber","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getCode","getFilterChanges","getFilterLogs","getLogs","getProof","getStorageAt","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionByHash","getTransactionCount","getTransactionReceipt","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getUncleCountByBlockHash","getUncleCountByBlockNumber","getWork","hashrate","mining","newBlockFilter","newFilter","newPendingTransactionFilter","protocolVersion","sendRawTransaction","sendTransaction","submitHashrate","submitWork","subscribe","syncing","uninstallFilter","EvmAccount","EvmLog","EvmVicinity","ExitError","StackUnderflow","StackOverflow","InvalidJump","InvalidRange","DesignatedInvalid","CallTooDeep","CreateCollision","CreateContractLimit","OutOfOffset","OutOfGas","OutOfFund","PCUnderflow","CreateEmpty","ExitFatal","NotSupported","UnhandledInterrupt","CallErrorAsFatal","ExitReason","Succeed","Fatal","ExitRevert","ExitSucceed","ExtrinsicEra","ExtrinsicPayload","ExtrinsicSignature","ExtrinsicV4","ExtrinsicPayloadV4","ExtrinsicSignatureV4","ExtrinsicUnknown","ExtrinsicPayloadUnknown","Era","AnySignature","MultiSignature","SignerPayload","EcdsaSignature","Ed25519Signature","Sr25519Signature","AssetOptions","initalIssuance","Owner","Address","PermissionsV1","update","mint","PermissionVersions","PermissionLatest","ActiveGilt","proportion","ActiveGiltsTotal","frozen","ActiveIndex","GiltBid","proveFinality","roundState","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","GrandpaEquivocationProof","GrandpaEquivocationValue","GrandpaPrevote","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","GrandpaJustification","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","canonHeight","canonHash","delayKind","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","IdentityFields","Display","Legal","Web","Riot","Email","PgpFingerprint","Image","Twitter","IdentityInfoAdditional","IdentityInfoTo198","display","legal","web","riot","email","pgpFingerprint","image","IdentityInfo","twitter","IdentityJudgement","Unknown","FeePaid","Reasonable","KnownGood","OutOfDate","LowQuality","Erroneous","RegistrationJudgement","RegistrationTo198","judgements","Registration","RegistrarIndex","RegistrarInfo","AuthIndex","AuthoritySignature","Heartbeat","HeartbeatTo244","OpaqueMultiaddr","OpaquePeerId","OpaqueNetworkState","CallIndex","LotteryConfig","repeat","v9","ErrorMetadataLatest","EventMetadataLatest","ExtrinsicMetadataLatest","FunctionArgumentMetadataLatest","FunctionMetadataLatest","MetadataLatest","PalletCallMetadataLatest","PalletConstantMetadataLatest","PalletErrorMetadataLatest","PalletEventMetadataLatest","PalletMetadataLatest","PalletStorageMetadataLatest","PortableType","SignedExtensionMetadataLatest","StorageEntryMetadataLatest","StorageEntryModifierLatest","StorageEntryTypeLatest","StorageHasher","MetadataAll","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","AllHashers","Blake2_128","Blake2_256","Blake2_128Concat","Twox128","Twox256","Twox64Concat","Identity","v10","ErrorMetadataV10","EventMetadataV10","FunctionArgumentMetadataV10","FunctionMetadataV10","MetadataV10","modules","ModuleConstantMetadataV10","ModuleMetadataV10","storage","StorageEntryModifierV10","StorageEntryMetadataV10","modifier","fallback","StorageEntryTypeV10","Plain","linked","DoubleMap","key1","key2","key2Hasher","StorageMetadataV10","StorageHasherV10","v11","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","FunctionArgumentMetadataV11","FunctionMetadataV11","MetadataV11","ModuleConstantMetadataV11","ModuleMetadataV11","StorageEntryModifierV11","StorageEntryMetadataV11","StorageEntryTypeV11","StorageMetadataV11","StorageHasherV11","v12","ErrorMetadataV12","EventMetadataV12","ExtrinsicMetadataV12","FunctionArgumentMetadataV12","FunctionMetadataV12","MetadataV12","ModuleConstantMetadataV12","ModuleMetadataV12","StorageEntryModifierV12","StorageEntryMetadataV12","StorageEntryTypeV12","StorageMetadataV12","StorageHasherV12","v13","ErrorMetadataV13","EventMetadataV13","ExtrinsicMetadataV13","FunctionArgumentMetadataV13","FunctionMetadataV13","MetadataV13","ModuleConstantMetadataV13","ModuleMetadataV13","StorageEntryModifierV13","StorageEntryMetadataV13","StorageEntryTypeV13","NMap","keyVec","hashers","StorageMetadataV13","StorageHasherV13","v14","PortableTypeV14","ErrorMetadataV14","EventMetadataV14","FunctionArgumentMetadataV14","FunctionMetadataV14","ExtrinsicMetadataV14","MetadataV14","PalletCallMetadataV14","PalletConstantMetadataV14","PalletErrorMetadataV14","PalletEventMetadataV14","PalletMetadataV14","PalletStorageMetadataV14","SignedExtensionMetadataV14","additionalSigned","StorageEntryMetadataV14","StorageEntryModifierV14","StorageEntryTypeV14","StorageHasherV14","ErrorMetadataV9","EventMetadataV9","FunctionArgumentMetadataV9","FunctionMetadataV9","MetadataV9","ModuleConstantMetadataV9","ModuleMetadataV9","StorageEntryMetadataV9","StorageEntryModifierV9","StorageEntryTypeV9","StorageHasherV9","StorageMetadataV9","generateBatchProof","generateProof","MmrLeafBatchProof","leaves","MmrLeafProof","leaf","localStorageSet","localStorageGet","StorageKind","PERSISTENT","LOCAL","DeferredOffenceOf","Kind","OffenceDetails","Offender","OpaqueTimeSlot","ReportIdOf","Reporter","ServiceQuality","DisputeLocation","DisputeResult","DisputeState","validatorsFor","validatorsAgainst","concludedAt","DisputeStatement","Valid","DisputeStatementSet","candidateHash","statements","ExplicitDisputeStatement","InvalidDisputeStatementKind","MultiDisputeStatementSet","ValidDisputeStatementKind","Explicit","BackingSeconded","BackingValid","ApprovalChecking","ParachainProposal","proposer","genesisHead","validators","RegisteredParachainInfo","AbridgedCandidateReceipt","parachainIndex","relayParent","headData","collator","povBlockHash","commitments","AbridgedHostConfiguration","maxCodeSize","maxHeadDataSize","maxUpwardQueueCount","maxUpwardQueueSize","maxUpwardMessageSize","maxUpwardMessageNumPerCandidate","hrmpMaxMessageNumPerCandidate","validationUpgradeFrequency","validationUpgradeDelay","AbridgedHrmpChannel","maxCapacity","maxTotalSize","maxMessageSize","msgCount","totalSize","mqcHead","AssignmentId","AssignmentKind","Parachain","Parathread","AttestedCandidate","candidate","validityVotes","validatorIndices","AuthorityDiscoveryId","AvailabilityBitfield","AvailabilityBitfieldRecord","bitfield","submittedTt","BackedCandidate","BufferedSessionChange","applyAt","queued","CandidateCommitments","upwardMessages","horizontalMessages","newValidationCode","processedDownwardMessages","hrmpWatermark","CandidateDescriptor","paraId","collatorId","persistedValidationDataHash","povHash","erasureRoot","paraHead","validationCodeHash","CandidateHash","CandidateInfo","CandidatePendingAvailability","core","descriptor","availabilityVotes","backers","relayParentNumber","backedInNumber","backingGroup","CandidateReceipt","commitmentsHash","GlobalValidationData","CollatorId","CollatorSignature","CommittedCandidateReceipt","CoreAssignment","groupIdx","CoreIndex","CoreOccupied","DoubleVoteReport","signingContext","DownwardMessage","GroupIndex","GlobalValidationSchedule","HeadData","HostConfiguration","maxPovSize","maxDownwardMessageSize","preferredDispatchableUpwardMessagesStepWeight","hrmpMaxParachainOutboundChannels","hrmpMaxParathreadOutboundChannels","hrmpOpenRequestTtl","hrmpSenderDeposit","hrmpRecipientDeposit","hrmpChannelMaxCapacity","hrmpChannelMaxTotalSize","hrmpMaxParachainInboundChannels","hrmpMaxParathreadInboundChannels","hrmpChannelMaxMessageSize","codeRetentionPeriod","parathreadCores","parathreadRetries","groupRotationFrequency","chainAvailabilityPeriod","threadAvailabilityPeriod","schedulingLookahead","maxValidatorsPerCore","maxValidators","disputePeriod","disputePostConclusionAcceptancePeriod","disputeMaxSpamSlots","disputeConclusionByTimeOutPeriod","noShowSlots","nDelayTranches","zerothDelayTrancheWidth","neededApprovals","relayVrfModuloSamples","InboundDownwardMessage","pubSentAt","pubMsg","InboundHrmpMessage","sentAt","InboundHrmpMessages","LocalValidationData","parentHead","codeUpgradeAllowed","MessageIngestionType","downwardMessages","MessageQueueChain","OutboundHrmpMessage","recipient","ParachainDispatchOrigin","ParachainInherentData","validationData","relayChainState","ParachainsInherentData","bitfields","backedCandidates","disputes","parentHeader","ParaGenesisArgs","validationCode","parachain","ParaId","ParaInfo","manager","ParaLifecycle","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","ParathreadClaim","ParathreadClaimQueue","queue","nextCoreOffset","ParathreadEntry","claim","retries","ParaValidatorIndex","PersistedValidationData","relayParentStorageRoot","QueuedParathread","coreOffset","RelayBlockNumber","RelayChainBlockNumber","RelayHash","RelayChainHash","Remark","ReplacementTimes","expectedAt","Retriable","WithRetries","Scheduling","SessionInfo","discoveryKeys","assignmentKeys","validatorGroups","nCores","SessionInfoValidatorGroup","SignedAvailabilityBitfield","validatorIndex","SignedAvailabilityBitfields","SigningContext","Statement","TransientValidationData","dmqLength","UpgradeGoAhead","UpgradeRestriction","UpwardMessage","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidationCodeHash","ValidationData","persisted","transient","ValidationDataType","ValidatorSignature","ValidityAttestation","Implicit","MessagingStateSnapshot","relayDispatchQueueSize","egressChannels","MessagingStateSnapshotEgressEntry","SystemInherentData","VecInboundHrmpMessage","HrmpChannel","senderDeposit","recipientDeposit","HrmpChannelId","HrmpOpenChannelRequest","age","SlotRange10","SlotRange","Bidder","New","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainDeploy","initialHeadData","IncomingParachainFixed","NewBidder","SubId","AuctionIndex","LeasePeriod","LeasePeriodOf","WinningData10","WinningData","WinningDataEntry","WinnersData10","WinnersData","WinnersDataTuple10","WinnersDataTuple","QUERY_PARAMS","queryInfo","queryFeeDetails","FeeDetails","inclusionFee","InclusionFee","baseFee","lenFee","adjustedWeightFee","RuntimeDispatchInfo","partialFee","Approvals","ProxyDefinition","proxyType","ProxyType","ProxyAnnouncement","real","AccountStatus","validity","lockedBalance","vat","AccountValidity","ActiveRecovery","friends","RecoveryConfig","delayPeriod","methods","RpcMethods","knownOrigins","System","TechnicalCommittee","Xcm","XcmPallet","Authority","GeneralCouncil","Fixed64","FixedI64","FixedU64","Fixed128","FixedI128","FixedU128","I32F32","U32F32","PerU16","Perbill","Percent","Permill","Perquintill","AccountId20","AccountId32","AccountIdOf","AccountIndex","BalanceOf","BlockNumber","BlockNumberFor","BlockNumberOf","CallHash","CallHashOf","ChangesTrieConfiguration","digestInterval","digestLevels","ChangesTrieSignal","NewConfiguration","ConsensusEngineId","CodecHash","CrateVersion","major","minor","patch","Digest","DigestItem","AuthoritiesChange","ChangesTrieRoot","SealV0","ExtrinsicsWeight","H32","H64","H128","H160","H256","H512","H1024","H2048","HeaderPartial","IndicesLookupSource","Justification","EncodedJustification","Justifications","KeyValue","KeyTypeId","LockIdentifier","LookupSource","LookupTarget","ModuleId","MultiAddress","MultiSigner","Moment","OpaqueCall","Origin","OriginCaller","PalletId","PalletsOrigin","PalletVersion","Pays","PhantomData","Releases","RuntimeDbWeight","SignedBlock","SignedBlockWithJustification","justification","SignedBlockWithJustifications","justifications","Slot","StorageData","StorageProof","TransactionPriority","TransactionInfo","dataSize","chunkRoot","blockChunks","TransactionStorageProof","chunk","ValidatorId","ValidatorIdOf","Weight","WeightMultiplier","v0","v1","SiField","SiLookupTypeId","SiPath","SiType","SiTypeDef","SiTypeDefArray","SiTypeDefBitSequence","SiTypeDefCompact","SiTypeDefComposite","SiTypeDefPrimitive","SiTypeDefSequence","SiTypeDefTuple","SiTypeParameter","SiTypeDefVariant","SiVariant","Si0Field","Si0LookupTypeId","Si0Path","Si0Type","path","Si0TypeDef","Composite","Variant","Sequence","Primitive","BitSequence","Si0TypeDefArray","Si0TypeDefBitSequence","bitStoreType","bitOrderType","Si0TypeDefCompact","Si0TypeDefComposite","Si0TypeDefPhantom","Si0TypeDefVariant","Si0TypeDefPrimitive","Si0TypeDefSequence","Si0TypeDefTuple","Si0TypeParameter","Si0Variant","discriminant","Si1Variant","Si1Field","Si1LookupTypeId","Si1Path","Si1Type","Si1TypeDef","HistoricMetaCompat","Si1TypeDefArray","Si1TypeDefBitSequence","Si1TypeDefCompact","Si1TypeDefComposite","Si1TypeDefPrimitive","Si1TypeDefSequence","Si1TypeDefTuple","Si1TypeParameter","Si1TypeDefVariant","Period","Priority","SchedulePeriod","SchedulePriority","Scheduled","maybeId","priority","maybePeriodic","ScheduledTo254","TaskAddress","BeefyKey","Keys","SessionKeys1","SessionKeys2","SessionKeys3","SessionKeys4","SessionKeys5","SessionKeys6","SessionKeys6B","SessionKeys7","SessionKeys7B","SessionKeys8","SessionKeys8B","SessionKeys9","SessionKeys9B","SessionKeys10","SessionKeys10B","FullIdentification","IdentificationTuple","MembershipProof","SessionIndex","ValidatorCount","Bid","BidKind","Vouch","SocietyJudgement","SocietyVote","StrikeCount","VouchingStatus","Points","EraPoints","CompactAssignments","CompactAssignmentsWith16","CompactAssignmentsWith24","votes17","votes18","votes19","votes20","votes21","votes22","votes23","votes24","CompactAssignmentsTo265","CompactAssignmentsTo257","CompactScore","CompactScoreCompact","ElectionCompute","ElectionPhase","ElectionResult","slotStake","electedStashes","exposures","ElectionScore","ElectionSize","nominators","ElectionStatus","Close","ExtendedBalance","RawSolution","RawSolutionWith16","compact","RawSolutionWith24","RawSolutionTo265","ReadySolution","RoundSnapshot","SeatHolder","SignedSubmission","SignedSubmissionTo276","SignedSubmissionOf","SolutionOrSnapshotSize","SolutionSupport","SolutionSupports","Supports","SubmissionIndicesOf","Voter","VoteWeight","ActiveEraInfo","EraIndex","EraRewardPoints","EraRewards","rewards","Exposure","Forcing","IndividualExposure","KeyType","MomentOf","Nominations","NominatorIndex","NominatorIndexCompact","OffchainAccuracy","OffchainAccuracyCompact","PhragmenScore","RewardDestination","RewardPoint","SlashJournalEntry","ownSlash","SlashingSpansTo204","SlashingSpans","SpanIndex","SpanRecord","StakingLedgerTo223","StakingLedgerTo240","lastReward","StakingLedger","UnappliedSlashOther","UnappliedSlash","UnlockChunk","ValidatorIndexCompact","ValidatorPrefs","ValidatorPrefsWithCommission","ValidatorPrefsWithBlocked","ValidatorPrefsTo196","validatorPayment","ValidatorPrefsTo145","unstakeThreshold","getPairs","getChildKeys","getChildStorage","getChildStorageHash","getChildStorageSize","getMetadata","getRuntimeVersion","queryStorage","queryStorageAt","getChildReadProof","getReadProof","subscribeRuntimeVersion","subscribeStorage","traceBlock","trieMigrationStatus","ApiId","BlockTrace","tracingTargets","storageKeys","spans","BlockTraceEvent","parentId","BlockTraceEventData","stringValues","BlockTraceSpan","KeyValueOption","MigrationStatusResult","topRemainingToMigrate","childRemainingToMigrate","ReadProof","at","RuntimeVersionApi","RuntimeVersion","RuntimeVersionPartial","SpecVersion","StorageChangeSet","changes","TraceBlockResponse","TraceError","WeightToFeeCoefficient","coeffInteger","coeffFrac","negative","degree","genSyncSpec","AccountInfo","AccountInfoWithRefCountU8","AccountInfoWithRefCount","AccountInfoWithDualRefCount","AccountInfoWithProviders","AccountInfoWithTripleRefCount","ApplyExtrinsicResult","ArithmeticError","BlockLength","BlockWeights","ChainProperties","ChainType","Development","Local","Custom","ConsumedWeight","DigestOf","DispatchClass","DispatchError","DispatchErrorModuleU8","DispatchErrorModuleU8a","DispatchErrorModule","DispatchErrorTo198","module","DispatchInfo","DispatchInfoTo190","DispatchInfoTo244","DispatchOutcome","DispatchResult","DispatchResultOf","DispatchResultTo198","Event","EventId","EventIndex","EventRecord","Health","peers","isSyncing","shouldHavePeers","InvalidTransaction","Payment","Stale","BadProof","AncientBirthBlock","ExhaustsResources","BadMandatory","MandatoryDispatch","Key","LastRuntimeUpgradeInfo","NetworkState","listenedAddresses","connectedPeers","notConnectedPeers","averageDownloadPerSec","averageUploadPerSec","peerset","NetworkStatePeerset","messageQueue","nodes","NetworkStatePeersetInfo","connected","reputation","NodeRole","Full","LightClient","UnknownRole","NotConnectedPeer","knownAddresses","latestPingTime","versionString","Peer","open","PeerEndpoint","PeerEndpointAddr","localAddr","sendBackAddr","PeerPing","nanos","secs","PeerInfo","roles","bestHash","bestNumber","PerDispatchClassU32","PerDispatchClassWeight","PerDispatchClassWeightsPerClass","RawOrigin","RefCount","RefCountTo259","SystemOrigin","TokenError","TransactionValidityError","TransactionalError","UnknownTransaction","NoUnsignedValidator","WeightPerClass","accountNextIndex","addLogFilter","addReservedPeer","chain","chainType","dryRun","health","noErrorLog","localListenAddresses","localPeerId","nodeRoles","removeReservedPeer","reservedPeers","resetLogFilter","syncState","Bounty","curatorDeposit","BountyIndex","BountyStatus","Proposed","Funded","CuratorProposed","PendingPayout","BountyStatusActive","curator","updateDue","BountyStatusCuratorProposed","BountyStatusPendingPayout","unlockAt","OpenTip","finder","closes","tips","findersFee","OpenTipTo225","OpenTipFinderTo225","OpenTipTip","TreasuryProposal","Multiplier","ClassId","InstanceId","DepositBalance","DepositBalanceOf","ClassDetails","totalDeposit","freeHolding","instanceMetadatas","attributes","InstanceDetails","ClassMetadata","InstanceMetadata","Multisig","Timepoint","VestingInfo","BodyId","Unit","Named","Executive","Technical","Legislative","Judicial","BodyPart","Voice","Fraction","nom","denom","AtLeastProportion","MoreThanProportion","InteriorMultiLocation","NetworkId","Any","Polkadot","Kusama","XcmOrigin","XcmpMessageFormat","XcmAssetId","Concrete","Abstract","InboundStatus","OutboundStatus","MultiAssets","v2","DoubleEncodedCall","XcmOriginKind","Outcome","Complete","Incomplete","QueryId","QueryStatus","Pending","responder","maybeNotify","timeout","response","QueueConfigData","suspendThreshold","dropThreshold","resumeThreshold","weightRestrictDecay","VersionMigrationStage","MigrateSupportedVersion","MigrateVersionNotifiers","NotifyCurrentTargets","MigrateAndNotifyOldTargets","VersionedMultiAsset","VersionedMultiAssets","VersionedMultiLocation","VersionedResponse","VersionedXcm","XcmVersion","FungibilityV0","WildFungibilityV0","AssetInstanceV0","Undefined","Index8","Index16","Index32","Index64","Index128","Array4","Array8","Array16","Array32","Blob","JunctionV0","Parent","network","AccountIndex64","AccountKey20","PalletInstance","GeneralIndex","GeneralKey","OnlyChild","Plurality","part","MultiAssetV0","All","AllFungible","AllNonFungible","AllAbstractFungible","AllAbstractNonFungible","AllConcreteFungible","AllConcreteNonFungible","AbstractFungible","AbstractNonFungible","ConcreteFungible","ConcreteNonFungible","MultiLocationV0","Here","X4","X5","X6","X7","X8","OriginKindV0","ResponseV0","Assets","XcmV0","WithdrawAsset","effects","ReserveAssetDeposit","ReceiveTeleportedAsset","QueryResponse","queryId","TransferAsset","TransferReserveAsset","Transact","originType","requireWeightAtMost","HrmpNewChannelOpenRequest","HrmpChannelAccepted","HrmpChannelClosing","initiator","RelayedFrom","XcmErrorV0","Overflow","Unimplemented","UnhandledXcmVersion","UnhandledXcmMessage","UnhandledEffect","EscalationOfPrivilege","UntrustedReserveLocation","UntrustedTeleportLocation","DestinationBufferOverflow","SendFailed","CannotReachDestination","MultiLocationFull","FailedToDecode","ExceedsMaxMessageSize","FailedToTransactAsset","WeightLimitReached","Wildcard","TooMuchWeightRequired","NotHoldingFees","WeightNotComputable","Barrier","NotWithdrawable","LocationCannotHold","TooExpensive","AssetNotFound","RecursionLimitReached","XcmOrderV0","DepositAsset","DepositReserveAsset","ExchangeAsset","give","receive","InitiateReserveWithdraw","reserve","InitiateTeleport","QueryHolding","BuyExecution","fees","debt","haltOnError","AssetInstanceV1","FungibilityV1","Fungible","NonFungible","JunctionV1","JunctionsV1","MultiAssetsV1","MultiAssetV1","fungibility","MultiAssetFilterV1","Definite","Wild","MultiLocationV1","parents","interior","OriginKindV1","ResponseV1","WildFungibilityV1","WildMultiAssetV1","AllOf","XcmV1","XcmErrorV1","DestinationUnsupported","XcmOrderV1","maxAssets","instructions","AssetInstanceV2","FungibilityV2","JunctionV2","JunctionsV2","MultiAssetsV2","MultiAssetV2","MultiAssetFilterV2","MultiLocationV2","OriginKindV2","WildFungibilityV2","ResponseV2","ExecutionResult","ResponseV2Error","ResponseV2Result","WeightLimitV2","Unlimited","InstructionV2","ReserveAssetDeposited","ClearOrigin","DescendOrigin","ReportError","maxResponseWeight","query_id","maxResponse_Weight","weightLimit","RefundSurplus","SetErrorHandler","SetAppendix","ClearError","ClaimAsset","ticket","Trap","WildMultiAssetV2","XcmV2","XcmErrorV2","MultiLocationNotInvertible","Transport","Unroutable","UnknownWeightRequired","UnknownClaim","InvalidLocation","XcmOrderV2","MAGIC_NUMBER","MagicNumber","EMPTY_METADATA","MetadataVersioned","magicNumber","fromPrev","asCurr","asPrev","asCallsOnly","asV9","asV10","asV11","asV12","asV13","asV14","getUniqTypes","throwError","TYPE_UNWRAP","PRIMITIVE_ALIAS","Char","Str","PATHS_ALIAS","splitNamespace","PATHS_SET","BITVEC_NS","WRAPPERS","RESERVED","PATH_RM_INDEX_1","sanitizeDocs","matchParts","suba","subb","extractNameFlat","portable","isInternal","camels","lowers","instanceType","extractName","rewriteDupes","rewrite","_lookups","_names","_params","_typeDefs","_types","_createSiDef","_getLookupId","_extract","_extractArray","_extractBitSequence","_extractCompact","_extractComposite","_extractCompositeSet","_extractFields","_extractFieldsAlias","_extractHistoric","_extractPrimitive","_extractAliasPath","_extractSequence","_extractTuple","_extractVariant","_extractVariantEnum","isContract","defineProperty","_extractVariantEnum2","_extractVariant2","_extractTuple2","_extractSequence2","_extractAliasPath2","_extractPrimitive2","_extractHistoric2","_extractFieldsAlias2","_extractFields2","_extractCompositeSet2","_extractComposite2","_extractCompact2","_extractBitSequence2","_extractArray2","_extract2","_getLookupId2","_createSiDef2","writable","lookups","_params2","nameInfo","porCount","extracted","dedup","allSame","nextDupeMatches","paramIdx","findIndex","aIndex","adjusted","isPrimitive","asPrimitive","flat","removeDupeNames","dedupCount","extractTypeInfo","hasParams","SpRuntimeUncheckedExtrinsic","extractAliases","addrParam","sigParam","siAddress","nsSignature","nsAccountId","isMultiAddress","idParam","registerTypes","found","empty","lookupNameRoot","nameField","nameOrig","namespace","aliasType","asBitSequence","asCompact","asComposite","asHistoricMetaCompat","asSequence","asTuple","bitOrder","bitStore","pathFirst","pathLast","isStruct","isTuple","isFromSi","typeStr","ids","specialVariant","bnIndex","decorateConstants","_version","constant","codec","createUnchecked","callMetadata","expectedArgs","funcName","extrinsicFn","tx","isTx","extractSubSingle","extractTypes","extractSubArray","unhandled","mapping","flattenUniq","list","getSiName","extractFieldTypes","isPlain","asPlain","asMap","getPalletNames","trimDocs","firstEmpty","toCallsOnly","validateTypes","toV11","toV12","toV13","BOXES","compatType","specs","makeTupleType","makeVariantType","modName","variantType","setTypeOverride","sectionTypes","aliased","orig","dst","convertCalls","convertConstants","convertErrors","_sectionTypes","convertEvents","createMapEntry","isLinked","convertStorage","entryType","plain","isMap","isDoubleMap","dm","asDoubleMap","nm","asNMap","toV14","metaVersion","compatTypes","registerOriginCaller","convertExtrinsic","createPallet","toLatest","_metaVersion","createStorageHasher","createStorageType","toV10","convertModule","Data","BlakeTwo256","Sha256","Keccak256","ShaThree256","indicator","decodeDataU8a","decodeData","isRaw","asRaw","asBlakeTwo256","asKeccak256","asSha256","asShaThree256","isBlakeTwo256","isKeccak256","isSha256","isShaThree256","checkAddressChecksum","ss58Length","ss58Decoded","isPublicKey","decodeAddress","ignoreChecksum","isValid","endPos","defaults","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","encodeAddress","SS58_PREFIX","sshash","createDecode","coder","ipfs","ipfsCompat","createEncode","encode","createIs","createValidate","chars","charCodeAt","base58Validate","base58Decode","base58Encode","blake2AsU8a","onlyJs","dkLen","BN_BE_256_OPTS","ethereumEncode","addressOrPublic","u8aAddress","toUpperCase","isEthereumAddress","isEthereumChecksum","_address","char","createAsHex","fn","createBitHasher","createDualHasher","wa","js","keccakAsU8a","lengths","create","outputLen","exists","checkFinished","destroyed","finished","SIGMA","BLAKE2","opts","keyLen","saltLen","persLen","pos","personalization","buffer32","buffer","compress","take","dataOffset","byteOffset","data32","Uint32Array","floor","pos32","digestInto","out32","destroy","_cloneInto","U32_MASK64","_32n","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","IV","BUF","G1","Xl","Xh","ll","G2","BLAKE2b","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","tmp","isLast","blake2b","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","keccakP","finish","writeInto","bufferOut","xofInto","xof","gen","keccak_256","keccak_512","genShake","toBytes","TextEncoder","utf8ToBytes","clone","wrapConstructor","hashConstructor","hashC","wrapConstructorWithOpts","hashCons","secp256k1Expand","publicKey","assert","condition","assertReturn","assertUnreachable","bnToBn","DEFAULT_OPTS","bnToHex","bnToU8a","valueBn","toTwos","compactAddLength","compactFromU8a","compactFromU8aLim","compactStripLength","MAX_U8","isub","MAX_U16","MAX_U32","BL_16","BL_32","compactToU8a","iadd","DEFAULT_UNIT","SI","defaultDecimals","defaultUnit","formatBalance","optDecimals","forceUnit","withSiFull","si","mid","getPrePost","units","getUnits","calcSi","findSi","getDefaults","getOptions","setDefaults","zeroPad","formatDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NUMBER_REGEX","formatDecimal","matched","match","formatNumber","SI_MID","siDefIndex","hasBigInt","hasBuffer","Buffer","hasProcess","process","hexStripPrefix","hexToBn","stripped","fromTwos","CHARS","UNHEX","hexToU8a","endLength","isAsciiStr","isAsciiU8a","isBigInt","isBn","isBoolean","isBuffer","readDoubleLE","checkCodec","checkRegistry","isFunction","isOn","fns","isOnObject","REGEX_HEX_PREFIXED","REGEX_HEX_NOPREFIX","isHex","ignoreLength","isNumber","isObject","isString","isToBigInt","isToBn","isU8a","isUndefined","lazyMethod","configurable","enumerable","lazyMethods","logTo","debug","log","loggerFormat","formatOther","apply","maxSize","fnResult","maxLength","console","Date","noop","isDebugOn","endsWith","isDebugOff","getDebugFlag","env","flag","logger","isDebug","DEBUG_MAX","DEBUG","parseEnv","objectProperty","that","objectProperties","objectSpread","sources","CC_TO_UP","CC_TO_LO","fromCharCode","formatAllCaps","w","converter","format","stringCamelCase","stringPascalCase","encoder","stringToU8a","space","u8aConcat","u8as","u8aConcatStrict","u8aEq","u8aa","u8ab","dvA","DataView","dvB","getUint32","u8aToBn","U8","U16","dv","getUint16","getUint8","u8aToHex","isPrefixed","u8aToNumber","decoder","u8aToString","u8aToU8a","Bridge","createWasm","async","getObject","idx","dropObject","takeObject","ret","addObject","getInt32","memory","Int32Array","getU8a","ptr","getString","allocU8a","__wbindgen_malloc","allocString","resultU8a","r0","r1","__wbindgen_free","resultString","createWasmFn","wasmBytes","asmFn","WebAssembly","wbg","exports","DEFAULT_CRYPTO","getRandomValues","DEFAULT_SELF","Wbg","bridge","abort","__wbindgen_is_undefined","__wbindgen_throw","__wbg_self_1b7a39e3a92c949c","__wbg_require_604837428532a733","__wbg_crypto_968f1772287e2df0","_idx","__wbg_getRandomValues_a3d34b4fee3c2869","__wbg_getRandomValues_f5e14ab7ac8e995d","_arg0","__wbg_randomFillSync_d5bd2d655fdf256a","_ptr","_len","__wbindgen_object_drop_ref","lenIn","lenOut","chr","base64Decode","bits","Uint16Array","clim","fleb","fdeb","freb","eb","fl","revfl","fd","rev","hMap","cd","mb","co","rvb","sv","flt","fdt","flrm","fdrm","bits16","unzlibSync","dat","buf","st","noSt","sl","noBuf","cbuf","bl","nbuf","final","bt","lm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","dt","lms","dms","mxa","sym","dsym","slc","inflt","zlv","NaN","xglobal","globalThis","g","Function","extractGlobal","TextDecoder","assertNumber","wrap","alphabet","digits","letter","separator","padding","normalize","convertRadix","carry","done","digit","digitBase","gcd","radix2carry","convertRadix2","radix2","revPadding","unsafeWrapper","base16","base32","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","lowered","sepIndex","lastIndexOf","actualLength","decodeToBytes","decodeUnsafe","CODERS","utf8","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","Infinity","rt","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","arguments","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"sourceRoot":""}